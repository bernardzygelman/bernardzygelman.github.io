(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    197782,       3996]
NotebookOptionsPosition[    191705,       3800]
NotebookOutlinePosition[    192805,       3837]
CellTagsIndexPosition[    192577,       3829]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Introduction to Public Key Encryption", "Title",
 CellChangeTimes->{{3.602174059076247*^9, 3.602174069998949*^9}, {
  3.7476794794430733`*^9, 3.747679503584598*^9}}],

Cell[CellGroupData[{

Cell["Private key ciphers", "Section",
 CellChangeTimes->{{3.602174088034957*^9, 3.6021740968533688`*^9}, {
  3.602174149358383*^9, 3.602174156569789*^9}}],

Cell["\<\
In order to secure private communication, cryptographic ciphers have been \
around for thousands of years. One of the more famous ones was used by Julius \
Caesar and is called the Caesar Cipher. It involves the substitution of the \
letters of the alphabet by that same alphabet but shifted. Below is an \
example.\
\>", "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.602174103570818*^9, 3.602174137973184*^9}, {
   3.602177859873886*^9, 3.60217799906166*^9}, {3.7392374447325172`*^9, 
   3.739237454563171*^9}, 3.7476818541725693`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Consider", " ", "the", " ", "letters", " ", "of", " ", "the", " ", 
    "alphabet", " ", 
    RowBox[{"(", 
     RowBox[{"lower", " ", "case"}], ")"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"alphabet", "=", 
   RowBox[{"CharacterRange", "[", 
    RowBox[{"\"\<a\>\"", ",", "\"\<z\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6021780059633408`*^9, 3.6021780392878733`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>", ",", "\<\"c\"\>", ",", "\<\"d\"\>", 
   ",", "\<\"e\"\>", ",", "\<\"f\"\>", ",", "\<\"g\"\>", ",", "\<\"h\"\>", 
   ",", "\<\"i\"\>", ",", "\<\"j\"\>", ",", "\<\"k\"\>", ",", "\<\"l\"\>", 
   ",", "\<\"m\"\>", ",", "\<\"n\"\>", ",", "\<\"o\"\>", ",", "\<\"p\"\>", 
   ",", "\<\"q\"\>", ",", "\<\"r\"\>", ",", "\<\"s\"\>", ",", "\<\"t\"\>", 
   ",", "\<\"u\"\>", ",", "\<\"v\"\>", ",", "\<\"w\"\>", ",", "\<\"x\"\>", 
   ",", "\<\"y\"\>", ",", "\<\"z\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.7609054640664988`*^9}]
}, Closed]],

Cell["Now we construct a shifted alphabet", "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.60217807248215*^9, 3.602178091359302*^9}, {
  3.747679707944975*^9, 3.74767971176999*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"shiftedalphabet", "=", 
  RowBox[{"RotateLeft", "[", 
   RowBox[{"alphabet", ",", "3"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"d\"\>", ",", "\<\"e\"\>", ",", "\<\"f\"\>", ",", "\<\"g\"\>", 
   ",", "\<\"h\"\>", ",", "\<\"i\"\>", ",", "\<\"j\"\>", ",", "\<\"k\"\>", 
   ",", "\<\"l\"\>", ",", "\<\"m\"\>", ",", "\<\"n\"\>", ",", "\<\"o\"\>", 
   ",", "\<\"p\"\>", ",", "\<\"q\"\>", ",", "\<\"r\"\>", ",", "\<\"s\"\>", 
   ",", "\<\"t\"\>", ",", "\<\"u\"\>", ",", "\<\"v\"\>", ",", "\<\"w\"\>", 
   ",", "\<\"x\"\>", ",", "\<\"y\"\>", ",", "\<\"z\"\>", ",", "\<\"a\"\>", 
   ",", "\<\"b\"\>", ",", "\<\"c\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.760905464352984*^9}]
}, Closed]],

Cell["\<\
The cipher is the algorithm that tells us how the two are related, i.e.\
\>", "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.6021781208136*^9, 3.602178147869643*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cipher", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{"alphabet", "\[Rule]", "shiftedalphabet"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"a\"\>", "\[Rule]", "\<\"d\"\>"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"e\"\>"}], ",", 
   RowBox[{"\<\"c\"\>", "\[Rule]", "\<\"f\"\>"}], ",", 
   RowBox[{"\<\"d\"\>", "\[Rule]", "\<\"g\"\>"}], ",", 
   RowBox[{"\<\"e\"\>", "\[Rule]", "\<\"h\"\>"}], ",", 
   RowBox[{"\<\"f\"\>", "\[Rule]", "\<\"i\"\>"}], ",", 
   RowBox[{"\<\"g\"\>", "\[Rule]", "\<\"j\"\>"}], ",", 
   RowBox[{"\<\"h\"\>", "\[Rule]", "\<\"k\"\>"}], ",", 
   RowBox[{"\<\"i\"\>", "\[Rule]", "\<\"l\"\>"}], ",", 
   RowBox[{"\<\"j\"\>", "\[Rule]", "\<\"m\"\>"}], ",", 
   RowBox[{"\<\"k\"\>", "\[Rule]", "\<\"n\"\>"}], ",", 
   RowBox[{"\<\"l\"\>", "\[Rule]", "\<\"o\"\>"}], ",", 
   RowBox[{"\<\"m\"\>", "\[Rule]", "\<\"p\"\>"}], ",", 
   RowBox[{"\<\"n\"\>", "\[Rule]", "\<\"q\"\>"}], ",", 
   RowBox[{"\<\"o\"\>", "\[Rule]", "\<\"r\"\>"}], ",", 
   RowBox[{"\<\"p\"\>", "\[Rule]", "\<\"s\"\>"}], ",", 
   RowBox[{"\<\"q\"\>", "\[Rule]", "\<\"t\"\>"}], ",", 
   RowBox[{"\<\"r\"\>", "\[Rule]", "\<\"u\"\>"}], ",", 
   RowBox[{"\<\"s\"\>", "\[Rule]", "\<\"v\"\>"}], ",", 
   RowBox[{"\<\"t\"\>", "\[Rule]", "\<\"w\"\>"}], ",", 
   RowBox[{"\<\"u\"\>", "\[Rule]", "\<\"x\"\>"}], ",", 
   RowBox[{"\<\"v\"\>", "\[Rule]", "\<\"y\"\>"}], ",", 
   RowBox[{"\<\"w\"\>", "\[Rule]", "\<\"z\"\>"}], ",", 
   RowBox[{"\<\"x\"\>", "\[Rule]", "\<\"a\"\>"}], ",", 
   RowBox[{"\<\"y\"\>", "\[Rule]", "\<\"b\"\>"}], ",", 
   RowBox[{"\<\"z\"\>", "\[Rule]", "\<\"c\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{3.76090546453826*^9}]
}, Closed]],

Cell["\<\
This list, here called a cipher, tells us how each letter of the alphabet is \
substituted. So if we  construct a message written in the original alphabet, \
the Caesar Cipher substitutes each letter according to the rule \"cipher\".\
\>", "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.60217816807609*^9, 3.602178317580447*^9}, 
   3.739237465093351*^9, {3.747679729016099*^9, 3.747679752968902*^9}, {
   3.749305573882967*^9, 3.749305574351767*^9}, {3.7598568488295813`*^9, 
   3.759856849423348*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ceasar", "[", "inputstring_", "]"}], ":=", 
  RowBox[{"StringReplace", "[", 
   RowBox[{"inputstring", ",", "cipher"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.602178333253709*^9, 3.60217836631752*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"julius", "=", 
  RowBox[{
  "ceasar", "[", 
   "\"\<You blocks,you stones,you worse than senseless things!\nO you hard \
hearts,you cruel men of Rome, knew you not Pompey?\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.6021784263773937`*^9, 3.602178457130166*^9}, {
  3.602178600785522*^9, 3.602178615905632*^9}, {3.6022052399469767`*^9, 
  3.6022052426918488`*^9}}],

Cell[BoxData["\<\"Yrx eorfnv,brx vwrqhv,brx zruvh wkdq vhqvhohvv wklqjv!\\nO \
brx kdug khduwv,brx fuxho phq ri Rrph, nqhz brx qrw Prpshb?\"\>"], "Output",
 CellChangeTimes->{3.76090546475019*^9}]
}, Closed]],

Cell[TextData[{
 "So the list \"",
 StyleBox["julius",
  IgnoreSpellCheck->True],
 "\" now contains the encrypted message, but how does the recipient know how \
to decipher it? They need an algorithm, or cipher, to decode the message. \
That is, someone must tell the recipients beforehand what the cipher is, and \
such a system is called a private key system. Here the \"key\" is the \
algorithm for encryption. Knowing that private key, we can undo this \
message."
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.60217866151469*^9, 3.602178894968212*^9}, {
   3.602178950364923*^9, 3.602178954212298*^9}, 3.7392374722718363`*^9, {
   3.747679519255824*^9, 3.747679519862447*^9}, {3.747679775648734*^9, 
   3.747679850891057*^9}, 3.747683276952324*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"uncipher", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{"shiftedalphabet", "\[Rule]", "alphabet"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.602178963390088*^9, 3.602178979437193*^9}, 
   3.6021792971271257`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"d\"\>", "\[Rule]", "\<\"a\"\>"}], ",", 
   RowBox[{"\<\"e\"\>", "\[Rule]", "\<\"b\"\>"}], ",", 
   RowBox[{"\<\"f\"\>", "\[Rule]", "\<\"c\"\>"}], ",", 
   RowBox[{"\<\"g\"\>", "\[Rule]", "\<\"d\"\>"}], ",", 
   RowBox[{"\<\"h\"\>", "\[Rule]", "\<\"e\"\>"}], ",", 
   RowBox[{"\<\"i\"\>", "\[Rule]", "\<\"f\"\>"}], ",", 
   RowBox[{"\<\"j\"\>", "\[Rule]", "\<\"g\"\>"}], ",", 
   RowBox[{"\<\"k\"\>", "\[Rule]", "\<\"h\"\>"}], ",", 
   RowBox[{"\<\"l\"\>", "\[Rule]", "\<\"i\"\>"}], ",", 
   RowBox[{"\<\"m\"\>", "\[Rule]", "\<\"j\"\>"}], ",", 
   RowBox[{"\<\"n\"\>", "\[Rule]", "\<\"k\"\>"}], ",", 
   RowBox[{"\<\"o\"\>", "\[Rule]", "\<\"l\"\>"}], ",", 
   RowBox[{"\<\"p\"\>", "\[Rule]", "\<\"m\"\>"}], ",", 
   RowBox[{"\<\"q\"\>", "\[Rule]", "\<\"n\"\>"}], ",", 
   RowBox[{"\<\"r\"\>", "\[Rule]", "\<\"o\"\>"}], ",", 
   RowBox[{"\<\"s\"\>", "\[Rule]", "\<\"p\"\>"}], ",", 
   RowBox[{"\<\"t\"\>", "\[Rule]", "\<\"q\"\>"}], ",", 
   RowBox[{"\<\"u\"\>", "\[Rule]", "\<\"r\"\>"}], ",", 
   RowBox[{"\<\"v\"\>", "\[Rule]", "\<\"s\"\>"}], ",", 
   RowBox[{"\<\"w\"\>", "\[Rule]", "\<\"t\"\>"}], ",", 
   RowBox[{"\<\"x\"\>", "\[Rule]", "\<\"u\"\>"}], ",", 
   RowBox[{"\<\"y\"\>", "\[Rule]", "\<\"v\"\>"}], ",", 
   RowBox[{"\<\"z\"\>", "\[Rule]", "\<\"w\"\>"}], ",", 
   RowBox[{"\<\"a\"\>", "\[Rule]", "\<\"x\"\>"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"y\"\>"}], ",", 
   RowBox[{"\<\"c\"\>", "\[Rule]", "\<\"z\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{3.760905464971499*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringReplace", "[", 
  RowBox[{"julius", ",", "uncipher"}], "]"}]], "Input",
 CellChangeTimes->{{3.602179332640565*^9, 3.60217933680196*^9}}],

Cell[BoxData["\<\"You blocks,you stones,you worse than senseless things!\\nO \
you hard hearts,you cruel men of Rome, knew you not Pompey?\"\>"], "Output",
 CellChangeTimes->{3.76090546515569*^9}]
}, Closed]],

Cell[TextData[{
 "Private key crypto-systems have some obvious pitfalls, this is called the \
",
 StyleBox["key distribution problem",
  FontSlant->"Italic"]
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.602179399241459*^9, 3.602179454805932*^9}, {
   3.602179791886841*^9, 3.6021797923482933`*^9}, {3.602205329823978*^9, 
   3.60220533440298*^9}, 3.739237481462318*^9, 3.759929848600417*^9}],

Cell[CellGroupData[{

Cell["\<\
Requires direct communication between user and sender of key, and is \
compromised by eavesdropping, etc.\
\>", "Item",
 CellChangeTimes->{{3.6021795228825617`*^9, 3.6021796485607433`*^9}}],

Cell["\<\
Substitution keys are very easy to decrypt even without the key (e.g. Mary \
Queen of Scots).\
\>", "Item",
 CellChangeTimes->{{3.6021795228825617`*^9, 3.60217971593646*^9}, 
   3.6021797881642942`*^9, 3.602205346249536*^9}]
}, Closed]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.75993434070426*^9, 3.7599343597835712`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Public key (RSA) encryption", "Section",
 CellChangeTimes->{{3.760907429138508*^9, 3.760907473336158*^9}, {
  3.760907542898151*^9, 3.76090754891413*^9}}],

Cell["Rivest, Shamir, Adleman", "Text",
 CellChangeTimes->{{3.60225069131605*^9, 3.602250709034079*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
bK/N/u3ntX/96xaY83/sr1u72npVUqBbIdzWj/20aP5vB+t/3rT/smX/adv6
I9Tnm2ZkvrA6B3pv2cdXTUPb8xPr1lG02KtWshNiAk986/LZFy4nTn1+/PSx
b74/9sVxF+C+602I5To1D8YgEAldidpcmAXAor0lw8787KZ1atsytWOd3p/X
7y8atuYRo+Bk3HLowbr1+Uk4PWG8RhZml5GF361lmDXDrBPsGludH4UjsmhA
6lsHpMds7/xs9/xMD7TG0TbrVCeMILbpLrjWPqNbNh6+TWYagCoIjggUsUix
NNPt0A/YkDeLOwyT6Fo6smyln2zTT7bPTLXNzXQZ53SIWiagz2joNsx1z+l1
CxaolwYhypAy/v0ypm4BEma2a362w6HvBJb1HShLhk77TKd1thOutc/Bbjqb
vss61W6eaIUtcNEx171o6AEcc3DzLutsu0Xfbp3rsBk65026BXO3w9IDmgEg
2JJ1CLJxxT6y7pjY3zBAVPa017g/eXjy6xPg1XcnTl66cPG7k8ePffXZye++
fvL4XnZ2Mp2MU8nY4JV5emDLYYD5188vbX9+bXu5qX+9Y4bcePVyYXlxRq5g
nTrz5VeQD1+5nPzO5czZzy6c//Le3VOBXrf9Hl7KjvDGJofSCpIGG+Q/rZn+
5WD51YoRhtG/vF755eXS/oYJDP/Xv+yAZtsLs1xMjqggt4VFb2RSUzxdS+PC
m7m0l6bpX1bMP69afl4zwT28WzXCiPx2ee7Nkv7dmuH10swvMJVYnfvL/sLL
VaOIjffzvPunYy5/+sblm5OH30L4k4vLCReXYy7nrpxMiPJV8SoW5wbfblrh
aUDZueeY3V/Uv1kxvl42vF6ce+XQo0AftuzMT28vIEA5AS1Mf2AK83bHAkrv
rc7ur8zsrExuO8bWF0ZWbIOQBqumfgBSfWmuZ1HfuzDTNT+tm5/uXLcMr1sG
N22j2/Oj0MI+cC2yg75ndqQZJnpgo3m8wzjWaoeyeRI56E4sMx3mWQTjTLvV
oLObehYsfXZrn9XcYzJ0HdJtM/aZDxevIIWQyZoJcml4B1Q3966bujcQujaN
XZumTgD6sHHd2rtp74d2xaRz6NsXZtsW5qDtmNe3gYoL+s4lY/e6bWDbMbK3
Mrpu71tb6F139G0sQok4sLk0BGwsDu6sjG8vjx1sTIMSb3aMr7cN08P1XHLx
w+vXzn77PRjx7ZdfHT/2py8OjwNw5+YlP68nCZEBIFVDJX9nyQCjw/7y7E+7
xj+/NP10YP7XX1b/9m4FRqXhgYaoSM9HD89fvvSnk9+6ADevfO3tfjUy6HFS
qFt64CNclHdukGua9wNSapiWU9qj5vXXicda1Y6p7h83rP/2bvO///3gp4Pl
kb5GIQXPyk4vDgpkpSZ38jmUpFghJrs8PpKYHPPXVSvwtw3r3zdtf91C+Mum
9S+bltfz48CfN4w7UCdPd492arBZUR6PL58/9fmVS9+ev/ANDMrHT39x+tKJ
Yyddrt88G+r3hE/EzA22btuntizjK/rBxem++YnuxcnelZmBDcPItnl81zyx
aRxdmxlcmupb0g/apnpQoxCsw2/WDSAJuLFpG96wDoEtIMmysXtxDoKoc9XQ
i6DvWdZ3L8/oFme6Fqc6F6Y6HJMdtvFWQ7/29cr0tmVob2Fsfrxtzdj307Zp
xdhnn+oA9/SD9TO9NcahBmBlTres7wLQu4XDjRzxQ+xznYBN3wExAgGyaO2F
0IDQQ0q4w9UhmLtBQsJ9Ls12rht1G4bOLUPH5lzrpr5lY7Z5a6ZxfaZpRd+6
bu7atHavGjsWppsA6GzN981PNs/PNC/OdYBswLIRHr19fqZ1wwI767Zs3dv2
HmDL1gO33bDowM8ta9/ewtDu/PDewsi+Y3SsQ0HBpET7+Pg9fHLz1NlvXVy+
Pjyzv//qs9Nff3bj/MmrP3zz5NY5Ea1EK6NtW8d2bWMHC+M/b878sq3/aUf/
lwPL7tIEDMcyLv7sCZeoYNcAj5s+jy+H+97LS/SvwERTCmOpuRGMtCBpbhQ7
9QU+1K0g4FGu/4PCUHdqWkRJbCALk9IoYcAhXrdOzo7qBCxCYrhfdpBf8jNX
Wkpil4iXG+hdFhteEhHEyUvvVvJ7VILeKkF/taivVtxfJxnQSge0kokWxZBW
MNWpGm2Wj7Yq+hukfFI+Pjs63OdhTJBHeICbj/vdqJDnYUGez5/dzU2PxufE
KTml/c2KcV0NSAiMdFQNtqrGOzRj7VXASGvlcJNyoFHer5X2aiVjXdWw887C
5JZ9bNU0CEa9WzeOtCloxYkAvSSJXpJwSBytOJZWFFORE0HMjSTlRjpbcl4U
KS+KV5rKwafQMLH2sWbrcMOrxXH7aNOb5cn2SrqEmssrTxdTcjhlqfSieFph
HOyvq6Tp1JQuFbWrktyuorQpiW1KMrTNCmKLsqJZSWpSlreoyN1a5kinbHaw
FsohdIUTAnBupLmvSdKiojbJK1oVFe2K8nZ5aYcU2y4qbhNh2gQFLaICLR/T
KMU2y/H14uJqXn6dqERXQxvrlDimDgWz9WzYeuzTLXDnDUqikp1XKyiqFxQ2
CIsaRcVAvaC4jldYy8XUC0qaxPhmSWktp7iej+tUUuSkrBT/J4zcTEJSarSH
+/3Tp+6d+S7M/VFObBgmOYKEScmO808Nda8VEOiYBDUdw8Mmy4mZalqOgpIp
JmYomfkqZmGbiqFi4Z5cOR7lfS/M/Wai/+Py9DBhaZqsIqOSlN1Ay6snpDXg
k6ow0bUliXWlaZyUoHyf+5le97wufPP07Nde18+mh/nyiCUaKUfCJdNKC26e
OHbVxSXg+uW80MAfXFx8rp0vTYgcrVfPtNfqO7X6bq2xr9E00GwebLEMtVqG
W35ZNyxNtc+PNdtGm7bMg68WJ439TaMtlZj44KwI3zhft9Cnd1ODfBL8POL8
PCpZpMVZZCkG5suGkVb9ULN9uhtdmVm3jMxPd8/0Nwy0KHVacXe9BDqgXIua
Uy+nb8+P7y1OrRkGtiwjb9dm68QVpLwYSkEcOMAoTmBi41m4BA4uERATsySk
bCk5R07NU9DyVQxMJbNQzSqCFjZS8qO3zf22kcYfV6Zmu6v27cNyei69OJZH
SNGKS0GDelGphlMkJWfB+UhPDaSmvaCmBdIzgplZIezcCE5+BL8oll8cIyyJ
ZxdEUHNCmQURRbEePne/g5CEkXTDPgr52d8ohmdVmv6Ch4uHHTiYcH5huKA4
TFgUJigMERQEcfNfcItCmEWhXFwkvzRaSkqsZGVTMaHhnhf37L2WkRrbmBbU
WjG0x7+4TSqI5BGSRLhYeVl8FTm1lp6pZWbXMXKqqZlqUloLv6Samq0mZTRx
ihvZRT1yErSRDy6IMJmxj+4nuT8Ov3fD4/xJYlpUh5xVxy2tYhQqyNkSQpoE
nwSISuJ4+ZGs7FB2Tpi8NEVJyFBWZHZJKSNaIb8kNeDO2cjHVzL8HxPiX3Bz
Y9X49BZaQReruIuJGQAYeT3U7DZCWhMupRqTIEoNJ0X64iN8/K6eDn14/f4P
36aE+8PMdHvFpmuqOeXicvFLF2gfnf/+exeX6yc+H22p3jCMWYc7HFPwJ7fN
9TeaRtvmhpqn++pNo60HixMLU23mkYZVvQ5GH1N//VxX3fxAq5JQCFrGP7lP
TY7DBPjd++Izvx9+mK6vcUz2Tw+1TA40QdvbrlaKSCxyAYdayGeU1FWyu1tV
QHuDtLNJrmtRdjUrWjU80AyS6tWqHqTaNA//dcfCKE7qrGLrqrk9NZzeWm53
NbOjktouJzVJy2v5+BoerpqLBTScEmjhIlDFLga74GJHJR3SFcLKMdEKLT4t
kFkco6Tn1PCK1Kx8FS27kp5TzS6Q5IYD4pwwMXTyImQFUcqiWEVJnLQwWlIU
rcQnAHJsnKQkFhvl9vzKF+DqpmXwzerUuqGnv16goOUKShMlhGQVKVVNStGQ
k6spybWU5BpyUg0xXkOMq2dnauipgBpaZqaGnVWR6e9395uV2ZZti27b3L1r
77OP1+OzAuWMPHh6rbyiVlZeEz27gZrZSMtqYeZ28oq7hTidAN/GhqsK+6UV
PULCiJLWxcOnud94/v0X0Tcu5Hk9ufu5y0UXF2ZmpKVLPaEV9CrI3fIKnYSg
k5T2SEq7xVidoLiLX9TFx/WIy3XC8l4ZZbxG0MzG46P9Ih9cyvJ+WBbhK8qO
rcFndFIwI3zCtIQ4Iy6fEGDHuUX99NzO8oxWfFpDcYoqO46bFEaNDUl2v5/g
+eTu6W/vXTwlYpLmpkY2lyxQaJ/63OXCNy7uty9dP3Us0O32QHOVYahjdrDF
PN6FhoxlAvnQLMywIPNh7gzlB1QjW9ahDShZRzsWhzt2pvrbeTT/i2dZiXFq
DKaqAPPE5TNSUKi1qUkrYpSXpMaEePp53HJ7cOnBrdPPHl0J8n3w6M45j6fX
YsO9Ksoy62tFI4ONY8OtA7qaBjW3ScWC1JrorultlLYomfUSioSc11sn6K7h
danZbUpqi4QIQwAMBNWsQvDqqFooqFqgGaQWJJiSXgAtGmX0whgBIRkOHEgF
RsFYAK2GlS/PCpFmBgOyrBB5dqg8L1xZEKnCRAHygojK4pgqfLymNKGGkERP
8gq/e0JUmqTTMGY7lf21TC2/uI6D0bILNJQMSJhDqVLqqClaaMmJtaSEGnJC
AyuzmpZSQ0+rZ2e18DGtoiJeUWS0x/lmCd48pDENaAwDVboappic2aqkNgjw
1cS0uooULTG1gZzeRM1sZeS0Mws6WJg2BqadWdjBKhqUVPQKygbEFZ3skiL/
B+RIbwiQ8lCPGy4u979waaTlLfZUDSrIIxraaDV9spY5UUOb0FCnNOTpaspM
DX2mmj2uZg4r6DNa4ZiaS00Kjbx7IcXtVlmYNz8tuh6X3UPDTvKJFiVrUcNd
qubYq+jWKqpBQZzg40fY2F5qYQM2U5EdTwjxxQR65of4hbjeu3P+uyCfp5Ad
m6u2gvS4O5dgHoEUe5dPfVlemGYcR96wME4gS3boBxSRNx+RbxoObDom9MMN
MEGGyZdjSmcabIKwMunqHb1t60O9FVFh9JiYyryC9nJS+NlLpMAwXOCLYLd7
j++ev3311INbZx/fvXjvxunrl7+7fuXE8T+5fPGZy9dfujy8fyEjLZLDwivl
LLWS1VQj6G6Qy1ilUiaWRcjmEXMrcmMHm+RtIJuC1iQh1wsr6vkELQ9fz8VD
W8srq+GWVnPwGjauioWFFoCLamYJXFTRi0Tl2VBXkHKiaQXxHFyyhJQpo2Qq
aNmg1vuwYubXcQpFST6CZG9Bso8wxUeU6idK9xNnBEgyA1T5YeLsQElOkDj3
hTQvpLo0VoEJx0c+9Lt+LDXgNj7heVH00+IYN1r2Cx4mgpkdKMVFAXJcpAIf
pcRFKLDhgBwXriqLgY1qQnwNNbWBlQOlF4xr5Sne6S/uCsuSOCWxMBaTcsPZ
uGQFvUAKVU1ZEmgMVJcl1pYng2P1xIwGUqa2IrOFlt9Mzevm4cAooINVzEjw
56cFl714nHjntO8Zl7Jw1wkNfaqO1Sst61NUDFaSxzS0ETVlUE4YkJWNKMrH
VRQIurFK1qCCBlK1MEvTPe/5XTxe9MKdnRJRVZzeyyybkVBtldz1evFei3K/
XbnZJtnqkG22S1eaRPM1glkprYtcUpWfRokKLo14AV5h4sIjfT3c7l8vKcwe
6m+fGOyoKMnKTAxLigqglOZYZvo3F2bN031r9ondNcP20jT62UL0E9H7a3Ob
82MwQYNaehvmg5Pdi+M9q5N9K6N9b00zwyp5bTmhvqKCHBkTf+d+1NWbtz//
Itjtvtu9y7cvnYJZyeXTX188dezCqa8unvnq8vnj3x93+eaYy6kTLpcvngDX
vTzvR4Q8J+OzG6t4XY1yKRPPJRbUKxgSevFkV3WDlNYopTaKKQ0iYpOI2Cis
aBJUQAsKVXHAKLyKWVzJwDpbBbWokgVq4RX0QlF5Lp+QKSHmg2YqRj4YJadm
gVpqRi4kVS0bA/CTvPipz/kp3oI0L2GarzDdG9QSZPgIMvx4Gd7C7AB+pg8n
zVtWGKzGRQvyXhBiXcsTPcip3vRMf15BqBQXoyQkVJbFSYsjAElxmBNpSTig
wEbKSyKqCPGglhIfV01JA6/4xVHkjEAJIQUmXDJKLrUgRkbOFxFzwKsaWlYN
DKkwsJYmgmM1pPRGen4bp7iWlN3CKqqn5rVzse1cfBsHhjNiTXlmntetVNfz
xYH3RDlh/VLCcBW1gY0ZUFN7VKT+KuqwhjlUxRhQUfuVlGEVbayKPahiTDVI
JuvFvXKmqCg11vVm+N1L5XHB4rykJnLhmIRhqeav1Mt22yvf9tT+OFC33V25
01sF7WqrfKFebFRzBtkVDWUFqsIsVlp8bpBPSVJ0dkKUh9vdpKSotuZq29zo
aHfTimVqbrR7aqB1Z8mwODdsnuxdt44jn7ZanN6wjW3NT8CUf9U8fLA8++dt
2/+2v/jXbfvB/NSudfLtsvHdsuXANrc2M/p63vzSPFfDoAXeueN74wbw4sF9
18vnH146c+vMyfN/cvn+c5czx1wunPjq6plvrpw5fuXMN1fPnbx67vi57776
7k8uJ752OXvi8we3ziVH+/d31LTXydpqpf0tlW3VQpggt6q4rSoYBNmtckaL
mFrPq6hm4tW0kkoWTsnEKulYGa1IRimSUgvRVk4tVjBKVAzkWgWtBLZISBgY
T1WsAgUjByILALsQyBlSYho72QPgpj7npXmhcNKeA4ykZ6w0T0nBC4CZ/pyb
7SstCuHn+ksKQ5np3lS4Sba/qCCYlxcoyAuSFIXLSiIBEMkplQwbAUbJC8OU
xRE14F5prCA3RIQJl+Hi+YXRZYk+xdGecZ43s8OeRnrcjPe9H/DoQujTy/nh
j/FxTxnZQVIYfykZWmauFnKVkVdNyYGKvYqU1cAqbOHhG9kl3TJyh7BUS86u
K0/TCbDDKuqkltunpmgYeZ0qUrea3qthDlRzB2t4wEiNcKxOPFEvHaoVTrXI
5zo17VIqPiE4/PG1RM972JgAXm6Sllg4LKXPafj2OtF6s2y/s+pVb/V2j2a9
W+1olVpq+QY1Z1bJHhXQu+jlioIsfm5GWWIMPjUel5MWEugZFuZfUyObGdaN
dNQvzAxP9bYOtmgsY93G4c4l/bBxuH1JP7g01w+ztuXZvsXpnqWZ3n375K5l
bN88tj03tDo9sGUa+3HF8uOqfXfB8GZ9YcNuHOlq8Xv22OPx3edPHgJud27B
jODhudNBj+9HuLuGPX0c9OSBz92bT65eAB5fu3Dv4pnrZ0/e+OG7W+dPXT17
4tyJY6e/dfnhu88ZpKL2enlPa1WdgtPVoKyTMeok9EYZs1nGapYxmiS0Bj6x
ll2mZuIqmXglEyengzlFEkqhExGpQEjMhxa2KxhY2AEuckozYU6NeiUhpYsq
UvllSVxsHKsompHkxkx+ykp5xknzYKd7sNLcmanPaKlP6WnPGOnuQkyAqDCQ
menJzvYSFPizsp4rS8LANCkmqBIXocZHwmAHOVZDTFTioiCaELUOgws6ciwM
iNHSghAZJrS6LB68YmcEUJK9KhK9MOFP0vxuRz654Hvzu8D7557fPO1795zb
5eM+d854Xj8W8uRUevAdQrovpyRGBDNEQjKMmFAQ1nILJeXpVYwCKDKhbRKV
t0rKh9T0Tj6uW1rezC1pE5X217DbVTRdNRvmO+1qTkclt1PN664W9lZLgB6N
uFvDb69kDjcrGiSUtBCPgIeXkwJcM4PdWbkJGhJmQEaf0fBMtYLFRvF2Z+VO
t2Z7QLs5ULfSpZ5vkpnrxHq1YFhIb6eWcVLiuNlpjJz0gviIckx2ZmqMf4Cn
VMoe6mzo1qqGWmtH2rUTHdrZnma0neyotY102kc7rMNt82NIZ3FCd2AZ39eP
7s4Mb08NbuvHXtr1b5at+0vm9fm5jRXrwED7iyBvl89dPPzc3Xyf3Xh8+7vT
38b7+RRFRpUlJGIiI7ODgzNDgpP9/cLcXOO8veJ8vYOePHp88fy982fdb10H
bl84ff3CyVMnPgsOeFat5LbWK2Q8IqSWrl6hEVDrRNR6Ea1BTG8SMxrF1CYh
jImUSjZBwSqTM0uldJyYWgKIKMUAn4gBBKRC2CJj4GEHCQ0rJhdA9SKn50qp
2SJSBr88lUdI4ZUmAyASJ8OTm/mck+0FocTJ8mFleDEynnNyfKkZnswcH1Yu
0mHn+QmLg7m5fpBd4vxAFTYcBANnxJgQCCUVPrqKEAejoao0Vl4aByjK4pVl
SWoC+BYNQDWuLEshpwbmhbrGuV/1unbc88o3rmc+cz9/zOPCVz43vo9wvRr5
9GZq4OO0oHtJ/jfjvK/G+1zLCHlQkuzDKIoVVaTDxLOWjxUTM6rYhY0SQiWz
oE6AaxYTIMTq6PkDVfQeJbwypV0qOkyE+7TCrmo+eNWiZAHtKh7QImfDa9gs
p0Oed2p4UGAkBT0NfHI1I8w7I9STV5KhZRNGNAJDo9zWrACR9vq1ByNN22Ot
u1O6g6nu3bGO9d4ma4Oqn0erKysUZqeCV6S0pAj3x5i0BDwm+8ULL6WMbxzq
ntW1DDdW66pkNTyKnIpvknHG2+umu7T20a6F8W7bSDu0C2OdSxO9r2zTO9ND
mxP9W5NDO3Pj28apVf2YbXJQP95bWSns6mm6fPP8hRs/PHr+8NqDq1fvX/H3
f1aaEi/Mz5GXFEIrKMiRYQt5eVllcVHJ3u74+Ch8QkyMp5v37es+d264X7t0
/ftvL589fvvG+aePb9VWiXQt1bVKXo2M06jitVWJ2lSCZgW7UcIAu+oEJKCW
T6ziElScchWrDJGHjgN5ZDQstLAFfFMe+gZbwC4pQpGMmiej5QASShaoBa2S
ngfHiJHmCaqASwA705eZ6QMwMryhpSP4UjN9qBl+ACXdlwoZAoV6dhA/J5if
FyIsgHEtVFwYJioOl5fGyErjYPCS4BJEJXGi4ngRFlk4gnpJiI0TE9IyI54/
vHzy/uXvbp39+tI3Lg9+OBb24GK2/4PCYFdMiBs20pOQEABQ0oIrkpBOUeTz
ZN8HMZ638mP8uLgMWmEC1JNQZMJsF2bEddwSmI12KogtglKgVVjWLiK2S8md
cmqnkgZ2NUspQIuM2iynQqdBQtKKKmoFFVoRqZpbrhWStUJqVoRvYsDTELc7
eTGBFZlxEkJBA6t8ukHp0GkdXZrXk11vDX1/XjYc2CfXJnr0LZrhSmELo1xR
lEVLiBLnZ6nKirGxkfjUxPDn7iIGLSo0iEMhtilEOqWwXcFvlXF1GklPrbyK
TyFh0uokzGYVv6deOaHTWkd0i5O9i5P9jjGkUD+wTb9zmLYM48uTQwsTg9N9
nW316u7upoLCdLdnd588ueEGPLiSEOwtLMtvpGE7mPg+QcWIjDauYAyKyR1M
bD0ZIy5IlBam8vOSqelxhKTovPAXLx7euvHdnx7euXbt2rmH967z6OValbil
WtakFDTJeC0KBPCqSc6ol9Pr5bQ6ORWoERAReBUgGDomQlvJLoX6SkYrdraI
URSQqhDKeCW9AFDQ8uXUPAAKZoCX4wdVEz8XyqQX/PwXUC9xcwJZOQG0DB9q
ujc5zYeU6k1M8UEhpfpS0wIZaVBxBbGygzm5oVC6CwrDBUURElyMGB8nxieI
sAnCkkRRSYoInyEuTRfgEnDJPpmRXu73L8O5c/nc91BVXv3+q3jfR0WR3vTU
YE5aEDc9RJATKcbEw4vDzYziZ8fwc+JZWTH4mMA0f9dYz3sxXvdp8LpRMDAB
gWeuYRaBWkpqlrQ8VUXJqSLnV1MxdYziOjYWJssNvNIGQVmjkAADZZOU2CIn
ozTJSE0ySi2vXKcR1Ako/Vo5vTAjwf9ZrI9rRpgvLT+tNDmClZMsx+foGyv/
bB17M9v3t8Vp23DbtnViplPbC1JxKEt9rRNVMk1ZUVlkkLgol5mVhkuKzYuJ
KkxJzk9NEdGpQ1rNoEbeKmbXcMgNYmarWlgrZvBIRcUZMXR8TpWQCmPQWCcy
Ms71thj6WucnujfNyAh4YJvdM+s35iZnB3SdDRqFlJOYHOHmduvp4+u+bneS
XngS02KgCOwXVIyJiTNKqrmGY6vlmTXsKTl5UFjaRiloIhdoyrJlRRkCTBo5
NSbew/XemRNuD2+7Prl/4YeTZEJJjVwgZZMaZPx6MbtTLeqo5LdV8iDPGxR0
MEojI9ZIiXUiEpx0kF2gloZDqGKXAdBxAhfVrFIUpMinFYJRIJKElC2qyBQQ
0vllacibPjn+3NwAFE52ADvLn5Hlh8RUui8YVZ7kVRrvgYt3xyd4lCZ6ERK9
iUl+pGQ/SmoALT2AkfmCmRPMzgvm5Idw8sPYBUAEsyCShYlhY+I5hUncosSy
1MBY3zuPr3936muX82e+uXDmBExVnlw/RytIEpekqPGpNaXJdWXpzeTcdkYJ
oCVkNxLzGogFGkKeuDC9PCEk5tmdpxePp7xwK8+MEpRniQ7faJBTc6BKZBfH
KEhZKnKemlpQzSiqYRYD1aziQ/GQ1bw6QalWWKYVEX6lQs3GDzbIZZSS7lqJ
sKIo5OndOF+3xAD38ox4WnZil4jVyiEudjX828K0sVay2tewDsEy3tMipA9r
xFoq3tikbqaV1RAKOWkJmnJcE4tGzUqrZrMKk5KkTKZGwG2WcBt5lEoqTlJR
WMksq5cxa8U0CQNHKEymlWULqcVyOC48YoOc1Vcvn9JpR1qrZnsbV6YGQS2Y
AC5PjQy0aEEAFp3g5/f00aNrwQFPY4O9cGkxioqiSnzuuIw+q6CbNVyYnK42
S5cbxfYarqGSMSWlDgqI7TRsbXlhNaFQhMnMCfB5dvnc0we3gl74nvn+a2Jp
UbtWXSlkdFYrIK/aVQKkNlByIK+0MmqtjFItqdCIy7ViMqhVI6jQ8AhV3DI1
p/QolWy86nDCCLWEnA7ZVaRiFisZGKiyYECUkHPg6AjKMwBWph8ryxd0gg4z
wxdiipLmdZhRXiAVPs69KNq1MOpJUfRTbBwI5lmBeOVPTgkgpwVQ0gNpmYdk
B5DS/SrSA8rTAirSg0gZYcTMMGJ6eHl6WErwY78nFy985/LN5y43r52/fOHM
ya9cQj0fqSjFGmKOtiKziZjeRcsf4uPHpJQJOWNcTJ2Q0Ab55DY6tp5UpMDl
lMYFRz+9ffuES5TnHSomXkTMYWOToDKEOYiUnFVJK6iiYUCqWlYJAEap6ciC
cL2IgAI61QnLgFpBaa2AUMUp7ajiSSjFMASomOWZEf4lyZEMTAYlK0mEy21i
EsUFqZ3MCrNW1knDTVfyHH3N+vaaZi5ptEpUT8G2McuFmQmSnGRVYZY4P6OJ
QS6KCm2RCBlFGCmVKqYQFRS8hoGv4RAbxFSdRtTXJO+sEddKqQJ6CZdSwCzL
IRUlEwuSmaWZUCHDc9CKkSn/WGvN/Eg3jIOWwe6xrpb+9oaKMsz162du3z6f
mRqZmxyOS42souI7eWS9imNRcxZqhauNss1WBcxbl7TC+WquScWeljJ62eVN
xCIo/2SF2djwoJAHd9wf3YmIfHHp0unMtNgGjayzQd1aJdEI6B1qEURWuxoi
i9OqYjdXsppUzEYlrVHJaJTRULtQaoUwMlYA1fxyVLbf7GLCUIgY9THM7EBm
tj+0jKwAeqY/1FGHY58vklSJXiWx7gVRbvmRrgVRT4tiPUrin5fF+xISfMoT
fYlp/uSMQGpWID0niJYXDFK99yojuCIjFJ8aUhwXmBvj6/fk8rP75y7/8NWZ
77+CQL5+5fx3f/osOdS3gVvRxChqIWd3UbOGOcXTknJDJctSzbfBNL9apFdw
B7nELiahhV6mwOVS0qIvfu7ieunbnGgvFjaFUZzALUuW07PBK0l5prQiR07K
U1IKVFQMAB0ZOR/JZzqCnIYBZPT3SCgYbkUuFJ9QnVZySbyyAgmppE3OK0uM
4uSlMlJiuRlxPWyySSOakjB7mWUaQsGAijdeLelGVMcPieg6Vrm6MKsWl89J
j2tlkjBhARoaSVelFFUQtEJuLZfUJqX3VAtHW1Wz3dqp3rqBFmWLhqMWk5QC
gpyNlzCLZUyskoPX8MqhkmETsmHODvP9gXrVaHPtaGvdTH+HbXbkRcDTEydc
Hj68WlyQgkmPBq+qKfguLtlaLXLUiFYapNutlXsd6p021XqjdLFOYFPzzJW8
cSGtnYLTlhaqi/OYyfE5wf6RQd6RUUE3b168e+tiUU5Kf7tWK+PWilmtSj5S
YsnZjTI6TGHqJRQkpsSkWglRIyRU8vAqLg5aNb8UOgp2CfTRjdCXs+BPKJLA
i0n/7YX9AHKqN6QTJc0H1aki1aci2ZuQ7FOW5I1NeA4uFcQ8w0Q/K4zzKI73
LklAFp1KYp7j433KUvzI6S+oOSGM/HAGJoyeF0bNC6PkhJPzoojZUdjkkKzw
5/EBT+5c/uburTM3rp2G6tHd48mNqxfOfnssK/JFt5zVwy/tY2HGeMWz4jKT
ggQnHZyDy9WitTrpcq3MrBJMiFndXCKkhByfG3z/8sMzxwIfXsKmBkMNzytP
FxLTSfkRSHZhUwX4dFEZIpiUlCenFCAiIecR0pEzCuG0UrFL1FwcvErVIhKn
IrdZxa0RUauFNCinYVrUo5FWpMRKS3KrSgv7+LRppXBGxp6Tshuw2eqSzFZW
2Xglf0jCGJEwB3ikQT5VxyC0kEuqcXnDCj41NVZOwG5Oj9dwmRNtDWszg1v6
gW3T8I51dMsysmzot0x2TA81NqhZVRKSlFUioBaIqBgZswQZWfgEkLxRyTQM
tKzMDMyP9cx0t4x0NAx2Nhz/xuXs2T9FRPqU4TJw2bFsbFYLjwxnmUHNg1Nv
WSvdaqvc66re6ahcawKvENkcdWKDij/AJrVRShuJWEVhDiktMT8tPirmxe3b
F7/6wsXz6Z2uxqq2WvkoshiigDlFd7W4q0rYruZCldWsYDbJ6W0adpOKXicl
AfVySoOCqpWRq0XlNeIKaAGwDl5Gp2bVgjJAwy+Fl7eSg4XXWckqBsoSPEsT
PQmJz8uSAG9cIhJT2ASEkkQvcKkwwRvaokSfkuQAXFJAUYx3cRxc64NP8UXS
KTOQlB1EzA0GqUi5oaTc8IqciNKMsJxon0jPu173L1088+XVyydv3bpw89YV
V7eH4NXl099mRwV2iak9XNwIt2ROXGpVkuYraSta0UGH+nWb5lWL5mVb7W5b
3YJWNQqlL4NQR8HCaPjo7Ff3z36ZFvoUlxFKKopl4ZMJOeFcXBoHm8ouSQGg
zydkwkApIedVst7/gXB+qd4bVQ4nY6OKJWQUa+VMtYAkYZSqeWTTYEdXpaiJ
R5fj8tsYpE56eTUmq72sYICCby/Nn5BxdJyKVgp2RsUbA7UEJAixKQUHUkvH
JrWziGUxIZzczNXxYQW5Qs0garkVNWxcJaMYlBaRc1ll6VRcMgmXhC+Izs8M
TonxjA5+FB34IDHMLS/RH5sZxsCng1dz/c3m4fbJDm2XRqbiUhnlRV985nL3
7sXszJiKsuwKTLK4HNMuoOp4pEk52wDjYL1ks7PqoKduv7t2q1293Cy314ns
WvFsJX9QSOvmkOGJqfEYSkZiTnJUZGQAhNXp77+4efU0GZcnZRMhsuCcAmqF
FABmMe/XGYRwFblKRFBwsUCloFQtLFPycFJWkYCah8Kn5AI8cg4KszQDgL+C
jkujYVOpJSmU4mQAiaYUiCm/8jR/8ISQHkBI9S9NCYBoApeKk/yLkwPAqJKU
QAgKXOoLfHIQPjkQwKb445OhOAHffIpTfErTA3Dpgbi0oJK04Pz4AEiq53fO
3/zh6wunj124cPzmrUs3bl958PDOreuXbl84nRsd0MjEttPyBpn54JVdSXZU
MTaaZD/21P/vo11/62v+S2/znwfbdzvr51RCCJBOAZWRFQ9e3TzpEuv3MD3K
qyA5kI5LYRFSeWUZoBOzKAlKL3J+LLT0okQGNhmeRmFqEOyGgkl5UZQWXJQR
VpgZkRrjkxjhlRrjlxDyPDcxFLxSUkv71dLy+PAOFmVUwhkVMDdba8bZJG1B
ypSUM6MS1GKz+jgVXdTiV0Otyy2V9ka5qU5u1MrV+HxMsA+vIHNhqEdYis0I
8Uv2exLvez/O736s//1w79svPK75uV/x97j65N73Hk/OoX3/p5cD3a9G+NyJ
D3rs//RqXLBrasTzaJ9HYc/uRXs/ifZ3f/H88ZlTXz5xvZ6WElqByyRhUqj5
idXkYojNyUruXK1wsV29N9j4dqLj3UT7q+Gmrb5aYw1fX80dUzB6hCSdgNzG
JUmx2biEiOggr/BQrzs3fnh499KFU1+53rkc6ucW9PxR4LM7Qc/uhnrei/J+
GOv3JDHgaUqQR0qIe0KwW1TA/VDvW0Ck/z3oh/ncDvK8HvDsylHgT0CJ8nsA
RPs/ivZ/GBPwODYQeAJtduij7PDHOWGPoc0Oc80Mdz1sn6aHuqaGPEkOehIf
+BBepSifOxHP74Q/vxnqdj3U7WqI65UXTy4EPjrr/+iM74NTPg9OBbmd97h9
PNr3dojnDbj/h5dP3j3/za0Lx8/CaXLz/J27Vx88vP3o4d1bVy/6u96lY5LV
ZRnd7KIJAVYvwttU5AU1c0UrAa9+6qz7c1f9z131r7vqdzq0S02aMTmvhUng
5qek+Lv+8LmL971zAW5XfV0vwiGDx0oJfgokvXBNCHgc5/cwyvteuOftYI+b
ET73gHDvu6Hed0K8bgPBz2+9eH4ryOeur/v1iBeuQT73Y4I8YgKfjbbWiCqK
JGWFGjJuXC011Cqs2kprtaSPgmsn5M3XKd8M68bF9DZi4Vwl19GoWO2s3upv
WOyobabhiAlh4qLsvFD/NglPUl7qe/daUoBrWrBbdtTz4tQgUmE8nNEyHrZS
Wt5az6vXMKrkRKUQCYF6JbWrjj/QIutvVUD11aBgwAyxQcJqkHMkrIqi3MTL
F+FkPJubHZObHlmRn1THKefnJdeRCptYuAZG0Wy9aHus2dQkMTeKHR3KFlp+
2tPLvKzwBhpGWZrJzUsQlWRISnM5JVmhPq4Pbp5/7nrb7cGVM9+6BHg+oJTm
sYnFSj5ZwamAxBaQijmEAhYui1GSQS1JJZckk/HJlNIUalkqdMqL40sxMdi8
yOxk/6wkv/R4b4jcxMhn8eFucWGucaFPowMeAzGBbjGg04uncUFucUHPoE0N
vJ8UeC/J706c761or5sRntfD3a+GuV8PfXYtxP1aqPtNOEZoG+xxC9po73so
UV63o7xuRnpfB8J9rkf73vRzPR/pe9fP7Uqk32OPexfc714McL9/49JJOFlu
Xb9w4/qlJw/v+Hu6pob7U7Lj+iVkmAN2kzMGqdlQXDlqkYp9sVa8V6/YrhEt
qbhWOcui5lu1ckOdbLhSgI8Nina/c8bFxePuDxF+9/OSX5CKE2j4lPKcGGJu
LCkvjpQfTy5IIGISKgrigcLUkILU4PyUoNykwOwE/4x4v7RYn9Q4n9DAh2Ev
HiXH+EYGuWXEBeWlRIy011bkJMGRUVNwc03V8+11C801Cw3KAVZ5J6m4EZ8/
xKVU5adVFaaNiGijMtqMmm9rU09Wi2pIxaKiDFx8aHlqvH2oV1CGjfV+Gu4O
L8ttCKvEENf0KM/MRN/c1MC8jCAKIZVUmlyBSyzHJsDxYpVnCCl5EmahhI1l
k3LZ5Tl8Ur4CJpIiOo+Cy0gKu3Du69t3zkZHeMWGeRQkB7MLU8rjgoV5icUR
3rX0ol4FfVjDnu+p2hlvMTWL60hZ3aIyS5tsoVfTr6JXEnOFuHRabnxRfAhM
vX1c73g9vnnn0vcXv/sy2OdJnYpfq+TJ+SQFjwR2VQqp1WJ6nYzVqGA3KTn1
lUxtFV2rYtRWUmsVtGolWSMlw+ng3F6npkELfagYG6vYbXXijlpxZ50E6NJK
AV29DEBzKSXoUULA/Vjfe0gued4M87gV6XUXTvYIn/uRfki+oTbGB7lBVKaE
PEsNdU8Lf5YR6ZEe7Z4R45Ee41GQ4p8e8xwOd0ywGwwxXo+vnz/x+a0LJ+9e
PnX70qlbl3+4eens4zvXEsMCaYVZcDY1UvMHuMVQtE8JsFY1w9EgWeuq+Xlc
928Tur/3N+23qh3VQpjg6NWCEQWnU0STlxdgk0Pvnfvq0dUTng/OZcT6YDLC
wJyKXDAqgYJJgnONjktn4GG4z2SUZgqphXxaIY+KAWCCz6bkAyxynkxIUElJ
1Uoml16sFFI0EsbscEdJekx+bLC4LH+yvhKmfgMS1pCI2lRe0FiaW1WY0VxR
JM6IU+SnNBALBTmxwpyESkKuhoSRlebQcxJwyRFSEn5a19IoF2n4jLFWzURH
1WRX9WRPLTDSXT3UVdXfWdnVKutuV/R1qAa61MM6DWwfQ+mrHuxSDbar+luU
Y521xtGOvlYNk1x47cqJZ+43A3wfRoc8Ixckygh5ipKsBmqJo6/x//6//vLf
9+wNrOJ6RkGPjFhPzW2g5U3Vchzdanu3GrzSMksqYdpbkgKvWF5MULy/h8/D
G0HP7ieH+SVHBsyO6qaGOgwT3YBxEvn6uQ2mDPqhZePhD+pahxcsyC/12YzI
V/OgRb4Hau5HfqJq5vBXO2a7kB9SMPYefsVv0DLdY5nqA6zT/Shwb8BMd/W0
TgNM6qqAiU7NBPJp/KrJnrqJnrrJXu1kbwMw3teAdiZ0Wrhqpkc73aedHWiY
HarXDzfMjdRP9deO99XNjbUNddUMd2nLi9Mhdc8d/+zu+ZOXjn9+8+zJ+1fO
ud66lhUdUkkntPJINWXpfezCUV7xADO/h45pJee30PFjMuZ8FW9DK9xpUWy3
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
9XbBuN5Vv4qrO2B0CacY/GnGdh9ujlDHaC17mYZ+lhSWGOp6sjGt4Kx9OZNb
Jt60LFCi4iKzzmp5kOt0GsCJ95/lSvE3UFnXuPlPcrV5y9WvayRtA1RWroAx
CC2wUyNGPh1oKCt4ZGOTEeg201E9UF3YmImZay9exVfMNr9QzpEUEz3aGZJx
ulc7StEMkvRMmp5J1w7QpIxuPrWdTWgS9Xfv4OqWGkuEI1TV2xHosucJzTW5
iefiA71w/8ogVEv2oVW/kAqvpJJrhexSLb3QyM50ErMeuBKBNYG0hhNgySq9
iW8wQezcujpjnxsO9codqD5XFyrzud58c6M8f794eBKX+7weh59dnBsZ6SXh
qqhdNbTudkJrS29X+wQNP0Zq72uvHic1b88OcjYX3y1MdXfjc14UJxZUuEXn
F+KnN5QXn/7y7cUn+dVHxR//cvHnv1x//IBM0vjDB8ONWfHepLg2yCxcIYJt
KIvIxIa6A0Drysi9MQnen4k/XiBrlwBX70/lRgUrNzF8nkmktpePkZvf0jtN
u4uCSfoGsfVdT8MhHbltRjXL1L0d5TFJR4xugIo1BAWi93iUvEJtGeuoJNQV
FuXGhLjfbS7LA7MySg9uTOJfJrK2cKXXWLjSnPyfcPU1Uf9lrqwX3n9deGvb
Ko0UuYplUB7J+Fs6GUslOe5uqfR4bBPnZYcvyul5nd2aHzvV+mYFX7XSU65c
oOkXGabFPsMMHbpjxQBBP9x7OsE8nxo+nx2WDRD3O+sOe5re1pWMlT0/7iNI
54YOhiizhKaa/CQNe10r2EYmJlWxzzWCM4XoXC65UCFmZV0TDfkkQs8HL7IE
eEQmPddsgCR/cm5gn6k2v5gP3+uQ2d6+vZBCFTg63jtgn0hN10X1HRkvSnKe
F66svl2ZHZIeLgz11E71UVamJo7evWWtTG+NUZcYbe+YHbtTFOHW3Nbi5PjY
SEFxVdKLWp+U4pS6weFDtezy8uLL+Zc/f/7+L18+/XBz/eH04kJ/caq9PFVf
m5HChyxVY0Auil4bBddG/qX26Ep/eK1nXZtO3p/yP1q4+nSJzN9uUnPgN5mT
hM5KiHiSjqHgqvtxtZw55tEIZZPWtUHtOB6kSGeY6oUx1fwob5iG3HbIJOwN
dG8xOpcpzVOdlf3NxR0VT4ufJAS4fDPZ1wkVEBpkZH5gNedXrtiWa+lcnZaj
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
+Xre+cbG9vE9N2e7IH+vzLT4qvLXNeVFr55mPk2NApa665BJCJtLn8J22dOU
kvykivzI4qyIooyIN1nY0rzE4uzkZ8lxmdHYyMAgVEBoKNS7IHRICDYsIiEC
k4KOyohAZaIjMkOCkr28oz29sD7+cX6BcV4BMSHoFP/wOHd/tJ1H0GO3AHvP
YGffMFf/CM8AtHdglKd/VDg2C5NQYOuBTc5vWDk069//vytHlxPv1LviLye6
v2zwrkEy018MZ3+UyW+W3rKotLmh4bXxyZ3Rsc2lZU7/4Hxf33h1ZV3Zm6KW
2vKu5opBWutYb1tCiEtb2ZOmqlevX70seFOTVdaZ1TKRRdxJIvOgp0OTlCiC
CoNXQAuWSIQ8I02iqeLIimiCNKpHjOkWYfES2I4hykCxJDk89b+IJCmY0pev
Xb+aNaXQJWkMJWCQRFOn0g2xUFuJWiiCICxZiQhQhI7SUkyBLhDwCXBCdwAj
bCMGaKEXDrBmuQSqKnnABN8lEbef0jjjGVv4jWOgo4efPXAADCFowSlH/sGm
i52DC/R1zq4BAUEu8M/Z0dnuUWIUOjosMMTb5YGNDfSJd21sXB1sYzCRbm5u
cCTksX+Gq1uo4LA79+56+Xj7+vuBSYF3uXm4WmO8k6Mt6NFD5LpHaJDv86c5
ZcWFr59lPc+IaSjOIbWUgNqrCuqKsqoL06tepjUVxlfnY0uyokpzYyuepL3J
SQWnikeh0QERqOCoiLBYFCoxIjINHZMVnfg0PqUwNDwrLCI7JCQjICg1MDgt
OCIjKDzdNyjR1QfjGYj1CokBj3L1R7n4RTj6hTl6h7j7RfgFRUHW8g9NRMXk
h2Gf2nsmUIZ2NFf/t0D/b5u8T8tH0MF9PlL9aUf2w/KheZ99yhNczM6yh0a2
5xf4EzPHUzPHcwvsg2P17r4Q10kqeVPcUl/d1VJDxTf1ERuLMqMGu2vbasve
FJfmlzSmlhHyelaimpcTqUKEK7w0oluK7gFzkKVSVJl0XXKvJp6itHIFgg0r
V7ATQIKN24fJdG1qvyasbS+WyHo2aXg2dZrCUGQxTTnDZ5huCRaviMYjUMWQ
NdEUFQi4AsE3BdMDqIAiYAk2gCtwRegCACR4GGs5ANBCGoRedcLgecqgOaGb
lda24p1U9o1LiGdg5J0HjxEYfuXK3tbOyc7ezdbO1d4RIHB18wIaXF1dIT4F
+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
uyB83WddScBJwGXK2uqfCesiA1KwMwWH3xbtnT08XZycL5HJbsu68aM9g0E3
ursxazaMT45MB0vDeVwxiyVisGTkAC6dG0bnh7PEsX+XKyzNfcAVrlfv0BIk
wooPFO+9ykUjyQLfbqnDx/IkqZAH2cK0m3ca+oZM24e/rJj/atj9V0iFA9OP
wWKBXs2u/2l5+4ep1dfDM0cjcwdzS6fLxuerG89XN0+v3rrFDwkmcCWXaHJG
RqW0dCi4cjGszhhRa0pqO4mu2wlXm6NqDli5eu+r07S81aCiVZAsdAxHUI11
bOK+HbdY/zRX8BqA4ar3mFV79Mr9oMpDatURBE19DE9KxR4h3+BXYOAqzTzl
hkC1CWYstu0ovnkruUEfUdifUdETIIw5b+8OXgfjysMJuPIleCGuPMkUD1Ig
5EEgCoW1vFhzZV2hsi6zn6mxW6sQHjhd1h7+M1xh/6DOti4ulx88aD/YWTWu
ToJkba1N9Nx/yOVImAwBnS6kM6W+gTwmP4IhiPiQKxYnDucK5UFrrgAnnCuA
CtIiX5aMZUZhEnL+77/qXR4EcwUvIA8CV1RWLIUZl5BarmmcWjZ+C/5Kt/m9
dv27vonjrpH97vFDsFjGw1/m1r8emT0ent3Xrjzd2Pl6++DbrYOXzZ3toQlR
9JCwS/4cSuztqJL7CaqxeNVkfMVUWrUurnwupkwbX7nJz9b6XZ3kFa7RC1dw
rkCvkL/CqliNv6L1e7iCZSDiSmrZA0Ihrj3lVu6zKw8YqsMg1QFNdUhRHVMr
TzC0VAcUhdk3X08tWoKlYmjNZoh6JaFhPVGjvaKZvlY1kpjXnJ6r8Q7kXLjs
CMbF290FMiDZ2x3nyptM8SL5Qx7E8xQKJF/IJn2GqzPOyhonVGfAq1j/EFee
Xq4urvbnz9soFHm75mXzxtzmyvjO+kxdTSeFwqVQ+AEUPoUuJoJe8cNp3FAL
VzGWktRvuMK6pywVA1RVoLIjEFcIKmuuEFpccQpeAbPmCgVwBXmQJUhm8JIj
YvOz8tom5p4Ytv9lZuXtkunPnUO73aMHwNXgwnPw7YvmPy0av5pYPBmf3VvQ
n+4cfvf87Y8DY2NxV1MZ8lB3Oo8kjrmt6b1T/fBuzVBOzWhJ01y2ZvKOZv52
gzE0d4p2ZVBYqGeXGSAPgsXiYq1QOyBZyGWhyhVCy5ql38mVpOZEXH0MwVcf
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
t8LEKt1kl2PbgsAVvWiZVqCjFS4FFetoeTOCkmnmzTbZdbUbidve1PaosfaR
qmC5SWG+r9nqb5hvVs22VatzbgS423s4XoL84+HhBu4ZoQXhQ/BF9YKPcoX/
utGuMb6ng/sifLcaAfYprgAkZNFx04Xk60NLhri67OBo6+hw+fLlSxe/BL16
drpzZF453TVQKVJUZ/j9XKHAuUKp8FNcIahwrpBYoRXix7hK5Qan0yVJNGFS
vqpbv/3V2OLxrOFl3/jW5NIz4Gpl+y+wVBxffLFg/HZ9/287p/9ncORgcGRv
duk54JdZUO/PkIqEIRW5+WtDA9qOhrX+juXedlVOln5xfnP/MKumS1o0xC6a
B7QgOKU6QcWKWL0BXPGUG8CVvOkEG11lqXNKGo+xijo2b+EUQArGpg9hGoVO
h4FSoXPTWAa0iBVAxVFs0ouM9GIDo8jAhiheAbQC87R+OTP0gjlB0RQ7s0N6
rcrdX9BY39Rbr+lT5MxqCtZblcb7mun68vmO2lZFnohGdne46Onq5O7uCrig
5ZwlyPA8w9WHnQkfniE9U3PACwgf5QqToPfb0/h5VeT8rWHGLZmTm7ujq8vF
ixcvXzrX0lizY9IbFyfXFseDaHIWMwzVGbiWEhaKT3EFtsqaKxAreIK/+v1c
Iag+wxVVGM+UpaRmKS1cHWo3Xg9M7Y5pH4ONN+z+oNv8bnLp1czKW8POTwfP
/kO79LqjZ2Vs/nTa8LJA00OgiKTSqCvxScuDjyYba5e725b7u9QF+fql5bXd
/YyKVmHeAORBZsEs0MUtWxIqV4ErSY2Jq1zDuUJDY4AuYMkyH+Y9Wu+hAqWy
5gqrKlj0CoJZsoFxlb/CLFgBrlhFesiGfvdgBarl5o8zbrQyk4rtfZgVFaqu
uqo+Ze6EMtvYUqFvVU7VlS101vVUl8VKua5254ErTK8s3ghwwsoLVnp1Bi2U
9fD29TMncax7j1FC/AxXZ9oecNv/Ka5sHZ0cXJzPnTvn6uLQ39NxuGvcW9ft
rmtBrNiscMQV4IRmwnyeKxSonQ8lQWDsU1zhJVCQKSRW2PRaXsynuUqlieI4
IanBCbcXNsBcHS+ZvxrVnoB7n1l5CXoFMWf4elr/Ztn0w96T/7u1/68dPXow
YOMrT8qahjwCRWJ5rFQgm7zf/bBaPd3WtNDXXVNavqjVTy0bI+9WsrK6qDlj
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
EooLn3z5/wPj1vQz
    "], {{0, 133}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 133},
  PlotRange->{{0, 200}, {0, 133}}]], "Input",
 CellChangeTimes->{3.760907520771315*^9}],

Cell["\<\
Alice and Bob want to communicate in a secure manner. Instead of sending Bob \
a private key (which can be compromised) she follows this protocol\
\>", "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.602180257279091*^9, 3.602180378038468*^9}, {
   3.6021804158630447`*^9, 3.6021805158321743`*^9}, 3.602180598027438*^9, 
   3.6021806592902117`*^9, 3.747679530079484*^9, 3.747683285944236*^9},
 TextAlignment->Left,
 TextJustification->1,
 LineSpacing->{1.5, 3}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["She chooses two", "Item"],
 StyleBox[" prime", "Item",
  FontSlant->"Italic"],
 StyleBox[" numbers ", "Item"],
 StyleBox["p", "Item",
  FontSlant->"Italic"],
 StyleBox[" and ", "Item"],
 StyleBox["q", "Item",
  FontSlant->"Italic"],
 StyleBox[", so that p\[NotEqual]q. (A prime number can only be factored into \
itself and 1)", "Item"]
}], "Item",
 CellChangeTimes->{{3.602180662349884*^9, 3.602180666071396*^9}, 
   3.7476799155348377`*^9}],

Cell[TextData[{
 StyleBox["She computes the ", "Item"],
 StyleBox["modulus", "Item",
  FontSlant->"Italic"],
 StyleBox[" ", "Item"],
 StyleBox["n = p q", "Item",
  FontSlant->"Italic"],
 StyleBox[". A number that is a product of two primes is called ", "Item"],
 StyleBox["semi-prime", "Item",
  FontSlant->"Italic"],
 StyleBox[", so ", "Item"],
 Cell[BoxData[
  FormBox["n", TraditionalForm]],
  FormatType->"TraditionalForm"],
 StyleBox[" is semi-prime.", "Item"]
}], "Item",
 CellChangeTimes->{{3.602180662349884*^9, 3.602180732703999*^9}, {
   3.602180778143722*^9, 3.602180778145482*^9}, 3.759930564953796*^9}],

Cell[TextData[{
 StyleBox["She computes the ", "Item"],
 StyleBox["totient", "Item",
  FontSlant->"Italic"],
 StyleBox["  ", "Item"],
 "\[Phi] ",
 StyleBox["= ", "Item"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"p", "-", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"q", "-", "1"}], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 StyleBox[".", "Item"]
}], "Item",
 CellChangeTimes->{{3.602180662349884*^9, 3.602180732703999*^9}, {
   3.602180778143722*^9, 3.602180804131948*^9}, {3.602180835036635*^9, 
   3.6021808534100723`*^9}, {3.6021809626935177`*^9, 3.602180968845139*^9}, 
   3.759930569482397*^9, 3.7609058292142277`*^9}],

Cell[TextData[{
 StyleBox["She chooses the public-key exponent, ", "Item"],
 StyleBox["e", "Item",
  FontSlant->"Italic"],
 StyleBox[", an arbitrary number. It must satisfy  1  < ", "Item"],
 StyleBox["e ", "Item",
  FontSlant->"Italic"],
 StyleBox["<  ", "Item"],
 "\[Phi]",
 StyleBox[".   But ", "Item"],
 StyleBox["e,", "Item",
  FontSlant->"Italic"],
 StyleBox[" ", "Item"],
 "\[Phi] are not allowed to have common factors (co-prime)."
}], "Item",
 CellChangeTimes->{{3.602180662349884*^9, 3.602180732703999*^9}, {
   3.602180778143722*^9, 3.602180804131948*^9}, {3.602180835036635*^9, 
   3.6021809506108513`*^9}, {3.602181065593381*^9, 3.602181115823148*^9}, {
   3.602181460001343*^9, 3.60218146638021*^9}, 3.602206140552539*^9, 
   3.747679949138694*^9}],

Cell[TextData[{
 "She chooses a number ",
 StyleBox["d (the private key) so that  d e = 1 Mod[",
  FontSlant->"Italic"],
 "\[Phi]",
 StyleBox["]  (Note: d should be an integer if it isn\[CloseCurlyQuote]t try \
another value for e)",
  FontSlant->"Italic"]
}], "Item",
 CellChangeTimes->{{3.602180662349884*^9, 3.602180732703999*^9}, {
   3.602180778143722*^9, 3.602180804131948*^9}, {3.602180835036635*^9, 
   3.6021809506108513`*^9}, {3.602181065593381*^9, 3.6021811963294477`*^9}, {
   3.602181443305768*^9, 3.602181474469158*^9}, 3.665364935651855*^9, {
   3.665420554340798*^9, 3.6654205850967617`*^9}}]
}, Closed]],

Cell[TextData[{
 "After Alice completes this checklist she publishes her ",
 StyleBox["public-key ",
  FontSlant->"Italic"],
 "which is simply the pair (",
 StyleBox["n,e",
  FontSlant->"Italic"],
 "). But she keeps ",
 StyleBox["q, \[Phi], d  ",
  FontSlant->"Italic"],
 "private.",
 StyleBox[" ",
  FontSlant->"Italic"]
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.6021812598822613`*^9, 3.602181430030336*^9}, {
  3.602181485246756*^9, 3.602181510650038*^9}, {3.602181592383316*^9, 
  3.602181609134976*^9}, {3.747679978422844*^9, 3.747679979457686*^9}}],

Cell[TextData[{
 "Now Bob wants to send Alice a secure message.  He goes on the internet and \
finds her public key (",
 StyleBox["n,e",
  FontSlant->"Italic"],
 ") which she published for all to see. Let\[CloseCurlyQuote]s say Bob has a \
string of characters ",
 Cell[BoxData[
  FormBox[
   RowBox[{"M", "=", "\"\<wassup\>\""}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " that he wants to send. He converts that string into an integer, he does \
this through the means of a conversion function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", "=", 
    RowBox[{"f", 
     RowBox[{"(", "M", ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".  Given the string of characters ",
 Cell[BoxData[
  FormBox["M", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", ","}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " the latter maps ",
 Cell[BoxData[
  FormBox["M", TraditionalForm]]],
 " into an integer ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". It is important that ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is invertible, i.e. given ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", " "}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "we can apply ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["f", 
    RowBox[{"-", "1"}]], TraditionalForm]]],
 "(",
 Cell[BoxData[
  FormBox["N", TraditionalForm]],
  FormatType->"TraditionalForm"],
 ")  to get a unique ",
 Cell[BoxData[
  FormBox["M", TraditionalForm]]],
 ". "
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.602181625853774*^9, 3.6021817927284393`*^9}, {
   3.602181870097608*^9, 3.602181961077681*^9}, {3.60218199881109*^9, 
   3.6021822256055927`*^9}, {3.602182275100222*^9, 3.60218272566947*^9}, {
   3.602182781493339*^9, 3.602182819417939*^9}, {3.602182875238364*^9, 
   3.60218288328587*^9}, {3.602183047641411*^9, 3.602183048091228*^9}, {
   3.602183109225305*^9, 3.602183253937656*^9}, {3.747679572594226*^9, 
   3.74767958337234*^9}, {3.7476799870747538`*^9, 3.747680072779059*^9}, {
   3.750979454308791*^9, 3.750979455245482*^9}, 3.759930707946106*^9, {
   3.759931100661961*^9, 3.7599311061268883`*^9}, {3.7599311438285427`*^9, 
   3.759931212806872*^9}, {3.760905850687888*^9, 3.7609058936064377`*^9}}],

Cell[TextData[{
 "Having constructed ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", Bob looks at the public key  ",
 StyleBox["e, n  ",
  FontSlant->"Italic"],
 "and constructs\n\n",
 Cell[BoxData[
  FormBox[
   FrameBox[
    RowBox[{"C", " ", "=", " ", 
     RowBox[{
      SuperscriptBox["N", "e"], " ", "Mod", " ", "n"}]}]], TraditionalForm]],
  FontSize->18],
 "\n\nThe number ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the cipher, and he sends that number to Alice, (By the way, others are \
also listening and were able to get Bob's number ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]],
  FormatType->"TraditionalForm"],
 "). \n\nAlice simply takes her private key (not shared by anyone!) and \
evaluates\n\n",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FrameBox[
     RowBox[{
      SuperscriptBox["C", "d"], "  ", "Mod", " ", "n"}]],
    FontSize->18], TraditionalForm]]],
 "\n\nshe claims that this is equal to ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and she uses Bob's public table for  ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"f", " "}], 
    RowBox[{"-", "1"}]], TraditionalForm]]],
 " to find the original message ",
 Cell[BoxData[
  FormBox["M", TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nWhy does this work ? "
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.602182931269184*^9, 3.6021830437147417`*^9}, {
   3.602205395243064*^9, 3.602205402680867*^9}, {3.665372063105486*^9, 
   3.665372098244685*^9}, 3.7599299212105913`*^9, {3.759930159571908*^9, 
   3.759930217701249*^9}, {3.760905901684948*^9, 3.7609059316556597`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Some results from number theory:\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzUvQeYVkWWN873ffttnN2d/XZ38oxjHARUsoABMa4JHdOMjo5iwowZdXQd
FcUIJgQEQaJkaGI3nXP32/32m3POOef8/1Wd7kvT3S/CrDO7/+c5bz311q1b
t27V75w6p+pU3dPvX3TLw/973Lhxz/0tglsWLJ737LMLXr71+/hz+1PPPbrw
qYcevPap5x9a+NCzs+7/P0j8GL9x/2vcOBZ/543rvvjkrhXL79m28dmN6xZt
27x4z/Y3anYt2bdr6f497x068NHR2k+bG7/oaFvT3bm2u2edqG9Tb9+mHtFG
ou7eDUSId/V83dG1DlcHpNuU6j0yxU6JbLtasU8h3T3Qt03Uvbmn62uQqGdj
v2izQXfAZDhkNdeajYc1qr0D/Vu7O9e3tayUSTf29a0GDQysbW/7tE/0ZVfn
Cr1ue59orVSyQdT7lbj/64b65S3Nn9XVftjY/HFr++f1zR8dqluKcNe+/zxS
/15t/YdHjn7Q1rmqtWNl38CGbtFXctWOvoFNEvk3CDu714sl3yhUu6XyHag2
Kizq3yxX7kK1UWed4QBCJDa1rEKIF8Er0Bsh0ife0j+wFe+FCG5BIQhBSAGh
QIoIRFeRDYQSUDgiKs1eFGI0H0YEVzW6GrV2H+JUJWRD9ZChvfMrVBWPxl88
GpcQ4ipqi6vCs5CCyqDxkUJ5qBDKPCDdLurbLpXVyBUHBiR7QX39u/rFu/FX
PLCHUiTSfcggk+8HyRU1EtkO4XHDQzyXXl+oD70gKg9CBOlCfnoXiuAWAAMZ
DKZDvK32tLYDJFuV6hqVZr9Gd1Cu3CuR4WqtWLKjf2C7WnsAicg2IMXb7TRb
60X93yAzsiGiUO1DnvbOr6VyNOlOxFEU0vvE2xDp6FovU+xCO2t0+zu7v0Y6
7uoVbcN7IWdTy+qaAx+2tK86cPiDrdtf2VPz5vvL7l7/5QMHdr98pOZ1Wd8a
mfhro2a3y1rrdzUHve0hX0ck1B2PitLJgXxWViooiyVVMj0ASqRAYoTxZH88
KaYwEusNRXqicVE6K8sVFJmcPJmWFHPqXFqRTkgTUTGKSsT6UgkxCsykJMW8
slLS5DIyPMXnafV728LBzkK+P53qzKS7CnlRNNKazfTGY+2VijoR78rnxJlU
f6kgj0W6EEnEerI5STTWGQg3e/z1kXi73XUYYSzZDUqk++IpUa4oQyRfVMYS
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
/xfA/4znz2pPDDvGu82WFhKH0lkq8G+ztzY2vw7+wTOJCEhpdXk8NSyWHzJb
m2CEyZ6pq/f/2TA+Hf9sZbss2fgnGTsNjsDpQjubf5n8PF2VTTyf9Ndy9eM/
Wrqi24pP4fGo/vzGcytXXFNakpGfs6xcVAKB2c/PzijOz+EX5Yv4xccPvhiS
n3N1/ikmOxyVfRiUfBjTVEW15zl3X8re4dPWT6lqZe2HNb2njMPnXabOyNhg
QNMc0LQ3Hn/jwVsqBMX5AoGAx+OvXr1aJOSVFq+6bX2RWd3Bxa2RgJokw0ya
P+P4598o/+l3fWH8c5yJ7XMB/27PkNXWptXVEcdjhn+Lrbm+8bU0/6T0OalG
J+3oec1gqidVJwJktHM+/tWaukiUbVlSs6JIYVr2kZX0glcvlpxLT2nhvQjA
0fU4JjoR/5K8QEktmxRgOSjYZijm9tPawfP6h/N9z3gL3hgMkvxO3/n2zpXL
/yUvZzG/OAvOzzooQGFBaXHRmjIR2oKc7Od++LSlk5AfEh929hwMyk7EteeC
qsqQpopz9cub3rrw/i8HGw4aBs9eOPp7cfsxp7o1oGl1DF6sPfKn+zauXiMq
FQqFy5evLC0tFZQWwf/Pz7huzNjHxSyxkJaO/1s/Lz/2an/3z53zy2L5ib/O
R+vSr5L/z+v7gUGmG3ZMdF2ZYmj4lFhSSUJOWs8d7Yjk1PkLLxrNdXRWV0y3
bSodzoamthdNlkZSQTJgBE7RhFiuPipTnMZFEnGSWADn64znGP9supbVGk6n
vUUvAPvP+J9ZazfNPxv/R1/AkmIhMMFpKnWtyz3CNgOygSBW7euq+EeXMZPZ
e+IH39+7WpQtLCXOf8aKxbD5whIeVIBfVAj+K0TCH31j30DVq+Pd7/lGjrsG
jgRkpzjjxaTpYlhbLa9/re3kb+qP/rq35vX+uoO1x16UtJ/0GHo8ima3rPUP
P3mmJGOxoLigtFRYXFSKXoBfUlCUt+zWdYWTtmEuaob/EwmTyi9f8j9nXfoX
zH+6mDXd8CUZHDopk1ex1blsl65Yevpi3ctp/x8mi2SynWxsbn8J/s9l+Y/H
Ri/lHzJq72KrGtL79cC/RFqVXtIJvSMxOOUfIQBiAZJxIqaCCzQ8UklL6Q2z
siMkN9r0ZO7V8U9LNyrJPu6k4wfff6xidb6oNK9cVFxckM0ryF27uqy0mCcs
4fOLikX8kgdvX9d64mVd8zsTgydsPYfsfYcTplpuvDWoqzZ0vavtfFfVcWig
9o3Gky/2179vGL6Ycikt3efcsvbv7t4szFkpKCrKyS4QCsr5CICL8wpzl8L/
D0wq2fwv+KeDyV/yfxn+w58U/35+34+KLSpm8S/sv1JVQ8BLKFn8C/7h/1tH
m8Az2cZCTJZq0t3S1vUKXCPGP0meQPmXyk+l+Y8nFeAfRjudXxH+/4Szn/lC
LHEonH+prJqt5GcT0GyLwehYm3Oqhxl/CPoF+P9aXQP8H+b8EDNOe4Gr5R8h
J81dP45O6je//m5Wxo3gn1+cB2+fV5BfLoQLVHT7zbeUlQoKc3PWC4u6zr/X
dOw/Rmr/PC45NyWvcikqg4bzEI+6MmSqTY11evSNpuGq2ITYZx3gfAbnSKPk
wpGdt6+5rUwg4vGzMvPAf1ERr6gwV8DLfPeN5xMBYyygC/tpRYyIbs4P+rnz
f9X24b/4vvPxP+fu/0n9uprPq2aLitn4v0R6FvwDPMY/DL5Edqaz+92x8Tbw
TLIa0vkvj7+js/dP1tEWkoIgQDyKSHxEpjoC/mHDSZm2iInk/zHgahfZRi1g
D2+flUxl6aOTKYPZ0gawWThMtYDM/7Kge9zZRZeHkUWnuCacf6hPevEDvjE2
/n/Vn5d63TTR0+TJE28suOEr5aJCXmEOIt/i/DzAn5eVfeett4n4pZAn9+7q
vPjh+3/8SdV7z4+rGsK2jlHxyXHpyail1q+riljqufFun7HJKqkB/5P6nuiY
1KfsePkHB4QrFmzkl5TkFRcXCVaXrWP837ZJ1N1SyeHL8akiAWU0orlC2Pv3
yf+nV4HP6/Oypf4z6fe1gF+hPA8jzLbo+gLDUnnl4PCHk67uWILs0qWrqtT+
UHfv4JuglOSoCdDhdMq/RHaSxA5RG/jH+Wn+IbgR20efLgeQ4oxAGoFtuhYM
zX9Lgm5oFlwgNh1MFl1HFNAU+1g3+8bYJ3J7xGwK4Ko+L7qqZNJK8r4mHb09
NRkrr+cVZuRlr6wQAfgSeD752TlwgYry8u++/Y4//fGF6uPvnj386vkPX22t
ekPacXhKUxu2Nfj11ea+99zqc/GxtrCt3aNrjTiGvaYBr2HwzCu/fFCQVXjT
18B/cU4hgolS/moeDyFF7u4d95k1fVzSEfIookFVPKb7Avif73u4Wv4/r+vM
x//V1mW42u9hvjyKLOfzTMUWo1ZXBxWAI8T4RxAqU5yVKc54fP3RONnDTlwd
OCqx/kHxO3ZHO/gP+A1s/JPxDwM+m3847Wz8k5UDpjYc7reJpsIwWW0dOIEV
FKCZWNSs3jQ8K1w8PfmLXgCRAnSHfRB8RfGEnq1/uNrfC84PTXpjCIcsOk3/
loduz1q1MDdrxR23bASjqwVCeD6rli1fU7b6G089fejgm6eOHOxqOtvZcOLc
0Zeaz75mGjnjVFeZh450n/2tZeCwR3fBb2qOjw24jV3avprz77+0pTxnY8aC
m4uybxbAheJnZxWgCyguLuEV5//wuwdcY0ouNR50y2MhdSKu/5L/+RJ7fmH8
M8vPhihTnB78qzUXCcOUfwShcuU5tbbaHxwC/xxHyhMTXyU5NCJ7Hyaa8c/G
P6XKw4z/aMRKconEZRo9gtbzLGU6+hSV+oLJ3Ez5t1zKP+0F1Cy/Fk0l1BYI
idP8o+9AF8Ccf8DPShPixZw0Bem6UWSbLZGP/SjhuCaW0gejqkjcEI2POic1
v//9z7Ozlwl4hZvWrV90w8LiPN4t62/NXJ6xc+sjL7/w4rtvvVl95mTd+TM9
rRd0sm69pKX+zBvVH/y7uOUDu/yCeaS67tgLr/36mT//7vt/+NmzP/3m7g3F
K3lLrrmvnHd7Gb8oI1NUUpafxxMIywsKCkpKcn/1y+/6ptQcN+p3S2I08wwd
9f2S/8sntv1i+GeVWWgBa7L9BPzrDLXw8xn/k65elrSWJa1CB+H3k5XS8ZRY
LDsM/kmV5Fn8i2XH6PpnkkOM8n8a7yW72uk6usHh4wZTPccZcC+6lFrlnOyj
6qaYyWagisSkE5MdOkPNsPi4c6oLb+Q4PXoEg7HRaGqiq5ctwJ7MAoQ0waCa
1e4he1gipmjYFA9NCxe3pGLmVMyYTBgQJhMHLKryRSS2qZYQh4sYA1HELPb6
xsqbb1m/bMlKQQk8oPVZq4pKeWvKStbcf9cDr774yntvvVtXXdNcW9/d2iru
6VWLh41yqUUts6mlZ4+8W3n4nebq07WVx04eOtjf1thed/7Z/Xs2VAjWVQjL
hCKRsKKYJywsKi0p5a/KWrYy87rv/3A3KTYalNJhZGMYX3JKe4UUDZ8Ln//V
+nUFB/7KzzkH7/mefz5uP9fPxfKfq+D2wNpPTHYCQrY7D05Ie+e7QyMnQCwd
JiX5UXGXYKQf/MNLh+ePaJdUDE9KxPJDctUpkiOI1M0xhSIjOhP4v8B2x6MH
Af9QhxSn9fqH5uM/Gpc6Xe0aXfXg8FHKvxSdDvgH/DP8k6ywjH8i4J/CTyLu
kAXkJ4KWBPiP2bioORbS+n0kQ2AopvZHlZOBwQSns3u7HL7BFOdwug3VF07/
8Ec/Wbf21rUVd6wrvzMnozQ/p7Qgl3/XHfe+8eprJz88Vl9d21Lb1NPaM9I7
pBxR6uQao0pvUhsgGpliwmbXK9VqqRwvlGJxe3PTpls2XvP1r/EEZbkFJZk5
xWvX3VwqFJSKCpeu+Oqvnn82xhnwADEOPaAuzuloorb/Wvv8BfP/ief/RfPv
H5IrKyn/sPZQAek0/8OnKP+kPArJlU34H5TIj9hG2xn/4BDxLzwimfKkPzhC
+Tcw/rX6GjpwRHYEg3+1tgZBBNtZc1n+YwnZpLtDpTnX238IQTfeCH1BLwDH
CUKXLhNmyCwY22c9bf+JEMsfNgD+RAitAfyz+kH4jEnOHOdM/pja5hqIc44I
NyFR9/7fX/1s6yM7Hn38mdWrb83PW10mvCUnqzQnu7isrHz//n2HP3jnw6Pv
N9bWtTU09bZ1i/sHVWIFaDeqtSaNzmGxmTSaSbtdK5ebtVpIR1PTmNVy8uTx
DZs2wueB5S8v37SmYmN2dm5G5rIVK6/781u/jiaMCZK2VEMX9X2W1Qh/mfx/
+mv+tfOPyBFvCYQHpIqjo/aOCPG0bZTDoSHJu4x/YorhEUXF4F+jO8+6Enj1
4B/eVDypIosr5uE/kVK4vF0yxemOroPgH7pDksLF5BZrK+Ofls8m5SHI5tao
nhVxJjthIzpWNJPBD4H/w6UsySQp7hxOGCJJYzhpHXWpo1xAaVB86wffyS4o
XroyX1B2e6ng9o2bHt6+7cm77nq4Ys3GW2+/7Xs//Nbxk++dOn2kpaG2s7l5
oKtHOjgIO69XKin/GgBvUKnwAmbfqFarJJKmixeH+nr1BvWpMyeFooqv/OM1
GzfckZVZmJWZt2nj2rvvXt/UciIcM+I7hP/m9UlpmlnllXcF/uXzf+kFr+yf
Xy3/X8jnugr+wTZegH+56tiYoytMytnb8CP6gn39w29LFSdIJtsYSdDN+Efs
nPamBoaOSWRnWPLz+fhPcSqPv2dEcry59Y0pdw/NrEWyJVhtbWZLCytDhsjX
55cR1YsZprPc0ELSrHJuIkSEi5sSET3ZbB41+kNal0/phb5wk66I59CpMw9u
37Msi5dJsjvfV1ByR/mah3LzN27b/swvnnvx4PuHPzx17MjJ90+f++DU2UOt
LfXd7S2DvT2ykUG1XKZXKwwauD5Ko1Y1ajZolTKzXmM16kw6NU449M5bVpth
cKi3trb+rTff27F1b0lR2eYHtvCLCt98/YXJCW0yMcalRjlujNR2TzoiIePf
Bv9z4P8b5h9sAz9/qF+hPj4+0UOMMF3/CaPdM/Bnifw4SXUSt6ZSFvCvNZ5S
aapYglxYcvCPUAJhNc1zcnn+OU4NVYLzX9fwisvTm+LUrHYG+hp0AS73MJ1K
UIJ/kEM345Dnp0XlpmtiJmgJaXg+oaCaFF8I6iOJ0RjnCKXsvpjz+ZdfzSpe
f+NS3orc9TlFt4vWbuMJHxKWb8nKuyWncNOGWx74/k9+/t7Rw0dOHT5e+UFD
c3VHe1NfV/twf49CMqxRSCn/Sgj+BPNy8RD416nkUAejVvP8b59TKIbsY0az
2djXO1R9tu43z/3++ef+3WEbVcmHuJQ7GrImYtOSio6GAsbYXzn/syU8a93C
58X/le/1xfNPiukAv2CfSnsS9BLPP0ys/cRUW1ff62LZMbpGYpSsMY5JGP/w
/ME/LDn47x/8EApC89zOx78WytU38MGF2pfc3j6OY6miyMZ8xj8tTEA2f4H/
ZMrIsnJFSSIO5Uf1pqEFET1sLKldFTKluKkYNzWi7nrryNtLc/jXLxcVCu4X
btiZVXj3qty7igTbhBU7KzbsKRbeV1R6+wNb973w2luna2pOV1eerTnT2dXa
19s5PNQnl42oVTKtRqHTKiFKhcxk1Ou0aqNBp1Yp8NpiMp86+WFNzXGVakCt
ktosVpPW3FTb8uZrb+lUyoh/iktM+V1aBClBryoWNIa8+qBf9zfD/2z4/4b5
B9ukfk2gV6M/PTnVHwyqwyEzfGyHs6Wj5zXGP60YZWP8K9XnGP9JTgX+e/uP
wEEiIe38/MO5QvB7/sILaf7RBcDXuhL/VGixaSXjH54/zVrv9Iesodi4cUz1
yz/834WZK65fWlhY9uA1C4RfW1RRKNq+JPOu5Vl380Q7cwoeWL1uV2Hpfcuz
Kx7a8eSb75+saWxvau/q6unu6+8aGR6UySTgXKNRgXmtVq3X6sxm89io3WAw
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
neDfMVabjJP4wu/th6cEl8lkuNDb82eJ5K1QuD4erw8H6xTSgyrpCS4G/79j
aPDfZfLnR0ff1mvflwwdbG38/WDfq67JKjIclNC5HUNhnwSdCFTM5eyD/8+m
lUM+ORTBZm6D/4MPhYjbNdWsUiJ2fkOtuUiymtM9awhjEdIy/hmrU65hAB8K
aYJBNSuGRff+K4G6fayb7c1McUY3lC5lQAtFmFn5r2YlAy7H/0eUsjEBSLo0
cCKiZzKdOCWkZTKniMBH1QSCmsvKnDfOXFY77dPGtCSBT5SEXbNqMynZEbTs
HAjhn1xHTyRohERC5rSQajtsCcS04/TJxVL/svlX0RBVSmepYMyHfN72ifFa
eCNG4wmT6bjFetw+dnpiotrtrvX7G4PB9kR8OBYZhg9P/SLQ3j450Qpx2Bvh
4Uw40Du04V9QE1yNdBAhecArwfX93j7wP+6oI9O7oWH0FNA4+FSIi7u7Xmts
+pU/WJNINERC9cO9r1o0VanwIJfo0GteVcr/3aB9RTb8ulZ2xKg6Pmo8FQs2
hdytST8iU0fAPUzWV/hHEHTgRmTEKahiUQCCFKupkfQ1/m70ZSMjBzs7X9Jq
azlO7/eLWc07Mm5DfCFViCwLUXjcpKxGKEj2O5Bl/BGy9QnHXVNDjvHeJFlD
RYaDYPZTSdIL+H1SYv/pevh47JP5n94XQA11ui42FSPl1jDDnnamiMDcliwa
DGoubdm70LIz2TXRzvCvppyrKP8f1eZLH2TnUP5n4L8c/5GQkc5/Ef5pIqDP
yD8bOJ3dsnVEl7azVub/p9rLXp94dAEgKqXLWSWgGnZy1FZtNJ7S649ZLIR8
YB+LdaVSfYhAySBkqAfYj402GPXVOs1ZvfacxXQBrjX+tFnq4R2hL4BTRNYz
+KEjA7B4Xg88GTWiA5wMHeGSZDkcbgfRqolH1NPzyqnT33V7K5PJxlikuavl
D05bXTzQw8XaJuxHJMO/VShenBg9xSX7UvGeMdsZjutBmBwPiv2uEZezJxSS
eL2DTmcvaIzHdNSXMyKcgUc0amnGR4M+4i4D/W+2tr4gHTkVpWuZknRFEFl3
TSpfmBG5w9cNkc0OdMkrXe+HnwYtvihE01AN+FfwYXBxjrMBXeLS+BV+nwzd
DV7jvsmEAd0HkzDdwpDiTEw4zsJ+epra0cJ+d7wgpYHJBUe5pAnootsCtOw1
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
+FxiJuiemMx3Pusd5rzrCuKZHE5f86O7eCRu1wg+xaUCx++y4nYOQXC12Rec
85yzFWE+e47HxvOnT2afCAdnX3O2TI0PMJl09EOcY31MZocSxLjRxWwQ9+Sg
Z2qArQ5FXGAxNihlZ0eGjg4Ovjk09Prw8Bti8ZtS6Tty+XtK5SGI0XgCfYHD
UTM1hbigaWqyYWK81u6onXJ12B0tJku9yVI3am9yTra53O0uT2s41GWzVfb1
vnjmzLfEkhcTyQvD4t+eq/qG036a4waV8rdqzn+vre1fOzt/oje9FImfnHJ/
YDK/PSL+k1j8DuJ0MmwbNvl8GufkoMs37PKJHZP9bPYK4pwcQNztcg1MTnZB
AaWSIxLxoYb637399lMKaSXcHubvjdna3ZP9IJ/EQZyFDPXQ75yMwPz/dZ0J
U1tXlsc/1nyHqanqmqmZmqqedE/3bJWazGSydNKOHaeztR3biRccbBxjx8G2
wAZZCCRAG5JALJJAQkII0L7vEtoBG8z83jsJ40k7VadenXffXc6593/OPffp
vitM4DijXF8q0QtEz3SagRMVxjgKboUojjA/vtInsO+Ejo7jahFi4K295ob6
dx5pOVMRarWD8h9/8k8HrLKpjQ6nHuZibnFBspHptdRq+F9L8ibnZ+9zqPOX
8p9mEDpV55cIkYQEHpCS2N5sNQOo9peE4q+l9t6P9LMKX21LRBIJT7P9jFCB
q7oDTaKXkCT+37us/0+nmp4qq7SrmExICF8HYSkYJuBXfktS9zm3Guu5tCO6
MxvZnolHjfHYs3h8nIAnmdRCBD/ptA4C+bWqpdNeONhfeX7o3e8rH6eA81R6
NhKf2t7VRxPT2Zy5WJrP5U2pjL7XW8xkJlJJzeTke1PT72ay96Lxb+dMH4T8
gwcdSyb1OBEfbjQ0/f3x3sHoxuaXxtn/mrcr73yKhTnQ229FO810p52q1wPN
bqDVC9Wa/saev9MNgS7lANtusFJZxuLKFUdo8/FW6JHNduW77/5jza3Bokv5
BcCfjFlq5VUWvydHyiTYqKxHt81Bnz4cNOZSS616ELdQLqzwiO4KbxpCgSl6
hn5LRK1bwWl1f52zVvaQIvPm88NIOuVk9ME2NujfmHQujHi845GoJbRljCfm
M9lFqFwhMpTNQsqryGrJnYzZ8plFWqESmuD2l/DfqK69lk5hKfA4hdkv5acV
IbmtV7xCp+k/I9SEJM9pJbXqWqXsQZ2/JEz7tYSykNR2WiH0Mys4xeov2W8h
62JoqOFHSRCjsEJiKb/8WqLRSnFViJxCpdxKtciM4K+XmZU2fiIfSEAGMjDE
AZ8u4NOGN6cU/Edmk3EDgU0mbcxljYW8qVQ0EfBXK3h7S702T+TfarrqNQeP
EnF9eHt83ffI63voD47uxvT5ghU0ZnNzsYS20bASyWTSYxbL+UeP/s1q+6jZ
GrdYzxTSo9Hw/VBw8GDfUK0+XFo+a7W/fevOX08Z3lp0fZ5KPSUGw0XXiqFq
MdbrFPJ5d7nuqTTWCxV3qeyu1dcBXr7g6nY3ikXF+gpFC+AnNrPZLg0N/cu8
9RYrmmLeHtudUda/J8rrL1Y92ZQdeNOB6jvhbD7tyqUWmS7hQ4HJjfWJcmFJ
/ahH+bGgkF1g4mD5gGegLDzevtP0R6OmYnGpsbfObbXmqTfWXhxFiqXlXp+G
kvsHYdITSVu7EyDl+KXyH9+eFc12aFrZOnsUxa65Um3Q/4yaJQqV3d20wpV2
K8Vl2exK/FavuHkqG78P+1uNqkf9tRHX6heeK6XUzSFuQj7q7LUDlKUIj4QQ
nqs60Xu5SkxIheSRzeSk0DopMMiWiJqRiqdkrtU8nQ7eHs+zjnal8oocAF6r
e+UqX5JCMJKIt6Eqdefk5qs8V9ZitEi1iEq7+YyTRASGhyFRlCIziRBdwSP8
GF2h/vrvR0GEVHbU19cyyXlSyKP+MLqhfquobBUr5V0MIok8bdYF9qy5dvvt
7UrBW8q5ZQrATLDHn8zTLZUQCPU668rnKqWFg74fFL04DLabbq6JmLG1t6q8
Iyo61JeNGvfKA4/3Yalsrzac+ZLt+XEwkzW1O24AmS/O7WyPsoh+fujc2RnW
av/HOPOHrfBAMnXfaf08tn1vvz8Tj92ZnHxzQvv7R5pfb+9+09h7cnxsZ9aI
Rw3MU6VMMBXbzKQ2X7xIJrOOesvX7ituHxNIZxwMRz5vL5WdmexsIqX3+YZt
touT+jPXrv+j3XYbCTMp8054EvlRhHX9yUm8mHPSV6c/AaC1fM7AKMQjJvqf
dDpBeT9wkqLP6Uk6hGmRbmQseEr3ZjIOIAEMgH23tylb7AA8o390HAUb/f2t
rbAB8TrdIGAIbU0zTIJzaqZOBo5BBGPphI2hlENpIIaYoUcA5ixGkFJABYF5
xNAL5sEkDHmQlkdcEUle60lOSsGDBHkK4CnFVQADz1MqIQUFaYUrNcCQAlEE
00AAwT/tViqrzLNy6DcWjduBqVTdmDw6wuAE5C8hYLhVFFdtU+D6Kk+FSIgA
3ApDz4s9chXkKwcgqOZAImrisihFR5EonoGREgMhA2LzlHS0QGUYUmiIaulw
MlMto9yssVYK9lrKkQuAnxWBsjBpIA+uI6TOfV4h+caEtqicMaIr1Arp5CUc
KevKw/0AocXutt63ptnwjWXTlmrNBeCbneVixd47WI8nDLX6Yi5vUUKgpBI1
ddrWXte6sfHts2dvW23nksnvw4Hb28Eh1+IX01Pvjo7+PhIZYF1cqT72rl1m
smBNQbXHh4luI1HOR4r5cLe7E0/PFyorrV4Q8IO9VNreaHqJ/DG93eiEP/C9
w/G1wfixfurM7aE3DFNXIjs6LLRUsOcyFqxpr758chLBHAiKWBorZ1N0lf6k
f8AkzlndRKq4fXqevgWKKE4H0pM7WwbFaat4YH6MROaYAtZ9E8gAvME8OI/F
LVzJI3smI1GTTAfAxu0Zk+KCW/Ubos2toD62O0dtIO2nFUpQPCQAwOIYdwyE
dAQQFwfPIwicMDTcynBDYhpiuSRySx5upYg4RpkUxBbECkiEoSHFyasWQREB
qrqlPEEixGSH/xdXj73n8otV1fwxBMF8ubKKRUAwP9qCqgUknv+UR1MxB4lI
JUVmJZmwRFRSeCRWIxlQiv4RtIvPl1KitRIqqzMgfSWdiVIyC/BUCZ8q6wCe
iZ6gIpNwyveMcqVb1IZWhXptZdrFKAi3MkkHcYLEb8QM2AIjgiEQJq0ujQT9
E7k0Dmqj3V5rtT315lK+aG91vKk0/t9LSrenHAexHdZk06x23Z22yWb77Nmz
d3y+64ddczn3NOAfSMTvedxfRXaHJrRvuVxfhkJD5dJUq7nQqC2fHKd6zUgh
G0ynlAVvKufMFl37L3bk6HX8zP4hVwzNFNgcWVq9OTv7mW7yw0n9B3fuvvH4
0ZnVlbvx2CQCxKK6ne3xvbrrcN+XSsxmUqZOy/PyaIsZIZWYKxedJy+jWDQj
Tmeqv/XEZSMN3UJ/ih8GLTyCwRayWWer5cfhgwSCHCIcsLEbmQMA6i/Cyp8m
nJoDVhAITqpwUl5kKa+dj6J4MO/qKEPDsGJ3gJmmaVFiEvHMjIL4RjFSGXpx
+9zySKAi6QyiQAL8q8PHAsEvOckjMRWVixXIVMJTypIoE59AXeAqNROoiDD4
/15vU2IeTBuEYwVtNSIikeGQTyTEIrglkVbkvYrEMKe8GKPMVvh/mQoRT2YE
CYRg1J+oAmIdIJlSdBHp8CiCxxCBEZKc3MJITgmEpCCqwcvkIuvoWsl7dBhh
NUfMo64pFDro0Trm5pX9/NxiBcqPRJ0wa4STY+UbE5YJmAN9yzjuhqfdyw+Z
CMgGhPpdX6mknMBZrS8pR3R2vNmcFfC3Wl6soNlYYhER3X3SbDCfevK5cZfr
q8XFi83q9GHX2m3PlosTxukzOu17humzB/sEKsZOy9luLYF/ZU9pe6tR22q1
CCwDOH9CoO7BFtAqll3q397ZWfmmMzPB0EPP+pBt/s/GmbOGmT8O3//NDw/e
M5uurCwPeT3DS65bgY2RvcYCy5ZOa7WYt6YSxnzWjC1A6rygrA4SUbyxgdgP
W5Bj8ZgpMHbmvnJhMZ2wwIQ3JzNJa68XODmJtrv+WsPNHNQ/2NxrrcmB2PKV
vZzBXqosvTyJHr4IF0qL657RZMzUrHuYdOi36I6RWxpVdqQUmWXAYZApiXZ5
igDZFCtlO40Wsg6uhG24Gq4QIpGf4uQkG/KQiKjkJzOJpCg/8ZcwDaIFFwVp
l0oYZfJTOepwVY64TGHy62itHEGmikGiEGWRjXQyZ7P2SmUZdaBOb4POl9O2
Wx0finObKzjREYLhlkQpCIlTPeWRsFZWPqqCp2kgBy/CID9XbmlaJFS/wFKk
kmxooYavLipRPidUv2en31AQRmqAKA6hL4nSA2JZGEIxtwSocGJqkL8s+hLq
A7afSLmtlhfV2STU3lOORmT58FPE6Pa6H25v6RKxmXrVBal74WzJ1Mz+AR3i
k09uy+XFanWpUFhIJk0sFqplx274ye62ptOa7/fsyYTG7xtslPWsf2cM5767
/btZw/lceqJanqmU5vZqzMULhZyF0KWQm0dTnC2uXok2q6uJjL3/fBukgbpy
dbm+txLe1m5uaZZWBuedlw3Gczr9e1OG94fvvzF8963p6c9s1q8XFwYWnDfW
vHfTqclYVLvXcLB+TyamopFnEBbR73oP+ix2cAjKPlKQyfKfDgec6IsVsGo4
OgzDE/7R/2pK7OhI+ff5ZnsdzIMEbAGR1D8RC8kfkwGD+p5H/Ug/qWxA3VvD
vliMy2hiBfKbi5gApGzNPSQeXhNsIAnDylWwTes8ommBEzWQTopYqHo6DfEz
cQuhe5Cn5Dzss370C05IrFdWSBGebMpZNJ0NUYoWZSsLApBIKWpGQvUMEDCw
Vq+7m8011IEwZ67ydRiawqNpvrjAcEAworhSqrICwbzKc0VOGDl7E0m4FSSj
EYzkpJck5AYA8OQhURBOilgBRCL1SM2SB5OR4uSkNlTjlqpk2cVcJutrNKV1
5eC1Pbe6c3KNkADqtr0scgEt1ZJfekmmhlrFRagQDmlxoSfHoeeHylFvxYK5
21kiAunv+wE/AcnRy91Oxw/RY6WSi8pZQdfK8/mMsV4197tOTKDfs+2GhhO7
P0R3flj3DBaz03tVa6PqyKXnDnpr/fYaPrnfXWfuIGgplubBeTbvIPiJJCws
gRMpC66mVFkk3NoKE/mPzDuuzpq/0E99OG38w7zjE63uv69f/61G855Od95k
ujg3d0Gv/5PZ/JXFfHkzOLK7M8Z0sBXShDYfl4qmdMrASgGTF6cHRLeCOlyo
aA0BGPpKEEuX0jO12mq77QPqYB6XyIgjknpgux1Kpq3AIJWxwZMBMChHtR+w
Xgso5zqWl6kcWxAHe+oMTx0yjkuQL75dTIA8yld4bb+81GWsZaABA1cyULMy
HSujprSifq9KdBEQRKGFgIQ8AhUpLrOJoEgFyZaYoXq8RkzdPRLHChjNbncD
Y0cdtEZl4av1Vfl7FDlYSc5W4pZE6hQ/LHh+lRcTQCTlNJKy4oQRQ2ZYATy8
uHR4UsRdiLXKBCETNOOiyKbaMolUQn6xFzotFTdLtdJdZJOGZDIC+fXqUi5j
ZZmJG1f3dsomT24XsmmiYgfuV96csIRMxmcAibqN2dzvrRzsu5t7djxqoWDo
dJyxhG5nVx8K6xUMZJ3ptL1QcNXrXvCvfvbOeg31zcm4NpueJBDCBMo5bSau
ie0+qhZnjw68taItk5grZGyp2GwiYmS52tpbrlbm9xrzlZql2XE1295G259m
li8v09C6/2kwpHWtDLuW7jgWbhhmP9cbzj3TvQ/+bfbzE7r/vHDh727e/OeB
gd/eufPvg4P/+sUXf3vt2m9GRt4Z1Xw48sO7d4befDJ25tHDD7QTn4yNfqSf
/NJmGZwzDlhNt+YtQwb9Vd3EJfPstyuuHzwrj5zzd2emry/Yh7mFdznvz8wM
GI037M7hecfdBdf3i0sPZk3fzpkH4Y2zA1rdZa4myy2LbcixcI905+J9arBb
78wabhinri067lEJVa25NZa5QYftu6WF76kfngymmZuIQaLNfJsUpEISyUYe
cnLLlVsqFF4yULPIL1fJAy9EbZIOwxVaXnyADFRCbObzjvnXnhDZEtZuh/QB
3zjxFX6AayjwzOd76vePe9ZGl1ZGvOtjqIbuaIfW8DNzN83W2+gOwXBLIk0j
FQTzKo/u0ocinkhF5yD/lO5rpKIHRBeeojs8RVhsQogqusiISC/BMC50Ggz5
Ieqk+PTkN1KcdqmBzJPayxDp0/orM4ar0NOxz8c0f5qavDT+5NNTmtL/eWz0
3Kzx6sTTL3TaC3Mz12YMVx4/PPvg+/dHNWcXnDft81chl2vAYPhUq/3IYrmo
039qMg/op6/OzA7OmW7Pzd2y2+95PGOrqxo0Ms3esJkQ76snmo902o/Ncxen
pz42Gc4vzl+c0p016j/TT3xu0F3SjV+YmbqmfXJBM3L+wf0zet0F8Dk29uHI
43eePjv38PEnD0e/HH5w/sGjz74b/uPNwbcfjJy7fvPNCxf/6dKVX1+49PdX
rv7D5Su/uvLN31y78auPPv6r/wXREdFt
     "], {{0, 144}, {256, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{256, 144},
   PlotRange->{{0, 256}, {0, 144}}]], "Input"],
 "\nTheorem I:    Fermat's Little Theorem"
}], "Subsubsection",
 CellChangeTimes->{{3.602186202465601*^9, 3.602186248658844*^9}, {
   3.602186450268482*^9, 3.6021864551091747`*^9}, 3.602186687694578*^9, {
   3.602198770094523*^9, 3.602198773494513*^9}, {3.602204541674911*^9, 
   3.602204547502448*^9}}],

Cell[TextData[{
 "Let p be  a prime number, then\n\n",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["a", 
    RowBox[{"p", "-", "1"}]], TraditionalForm]]],
 " Mod p = 0  if ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", "p"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " divides",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", "a"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\n",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["a", 
    RowBox[{"p", "-", "1"}]], TraditionalForm]]],
 " Mod p = 1  if  p does not divide a\n\nExamples:"
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.6021837027795763`*^9, 3.6021837951544847`*^9}, {
  3.602183870610248*^9, 3.602183875166575*^9}, {3.602186169543943*^9, 
  3.602186182906054*^9}, {3.602198759152606*^9, 3.6021987848433743`*^9}, {
  3.602204061333839*^9, 3.602204210102921*^9}, {3.602204295913494*^9, 
  3.6022043027039213`*^9}, {3.602204508464752*^9, 3.6022045170927057`*^9}, {
  3.7609059499236803`*^9, 3.760905954468738*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fermat", "[", 
   RowBox[{"a_", ",", "p_"}], "]"}], ":=", 
  RowBox[{"Mod", "[", 
   RowBox[{
    RowBox[{"a", "^", 
     RowBox[{"(", 
      RowBox[{"p", "-", "1"}], ")"}]}], ",", "p"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.602204393127738*^9, 3.602204478561805*^9}, {
  3.6653472280643387`*^9, 3.6653472625194263`*^9}, {3.66534781845975*^9, 
  3.665347880926958*^9}, {3.665347920952014*^9, 3.665347935144347*^9}, {
  3.74768026207572*^9, 3.747680265935482*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"fermat", "[", 
     RowBox[{"a", ",", "3"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "1", ",", "20"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.602204393127738*^9, 3.602204478561805*^9}, {
  3.6653472280643387`*^9, 3.6653472625194263`*^9}, {3.66534781845975*^9, 
  3.665347880926958*^9}, {3.665347920952014*^9, 3.665347951683703*^9}, {
  3.7476802478819103`*^9, 3.747680273428215*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJzt0jsKgDAQRdHBytIihYVFlCAiIn6Cra7BJQjWbt0lqIjC3MoFOBDC4b00
YdJlm9dARIbzXPc9+6hvmbTDSdREyA0co58gt3CGvkOewwX6JfIKrtFvkLdw
h36P3MPvvz2D9xFs4AS2sINzuIQruIFbuIc9/O+H9vf9OABUHDpB
    "], {{{}, {}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{21, 1}],
        LineBox[{22, 2}], LineBox[{23, 4}], LineBox[{24, 5}], 
       LineBox[{25, 7}], LineBox[{26, 8}], LineBox[{27, 10}], 
       LineBox[{28, 11}], LineBox[{29, 13}], LineBox[{30, 14}], 
       LineBox[{31, 16}], LineBox[{32, 17}], LineBox[{33, 19}], 
       LineBox[{34, 20}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
        50, 51, 52, 53, 54}]}, {}}}], {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 20.}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.760905465497857*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Theorem II:", "Subsubsection",
 CellChangeTimes->{{3.602204566392888*^9, 3.602204574604145*^9}, {
  3.602204627774033*^9, 3.60220463056318*^9}}],

Cell[TextData[{
 StyleBox["p \[NotEqual] q  are prime numbers and", "Item"],
 "\n\nif   x = a Mod p and  x = a Mod q   then  x = a Mod p q\n\n\nProof:  \
Since x = a Mod p this implies that  x = a + K p  where K is an integer\n     \
       Since x = a Mod q   \"       \"        \"      x = a + L q     \"      \
 L      \"\n            \n            therefore 0 = K p - L q  but  since  \
p,q are prime K = M q and L = M p where M is some integer.\n            Now, \
since x = a + L q = a + M p q, which implies that\n            x = a Mod p q  \
   QED\n "
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.6021837027795763`*^9, 3.6021837951544847`*^9}, {
   3.602183870610248*^9, 3.602183875166575*^9}, {3.602186169543943*^9, 
   3.602186182906054*^9}, {3.602198759152606*^9, 3.6021987848433743`*^9}, {
   3.602204061333839*^9, 3.602204197078739*^9}, 3.6022043835157213`*^9, {
   3.6022045516989317`*^9, 3.602204557073349*^9}, {3.602204635614703*^9, 
   3.602204921967848*^9}, {3.602204995342251*^9, 3.602205200187293*^9}, 
   3.747680288884794*^9, {3.759930454585443*^9, 3.759930471211594*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Theorem III:", "Subsubsection",
 CellChangeTimes->{{3.6022055124919987`*^9, 3.602205516415745*^9}}],

Cell["\<\
Modular arithmetic allows the following identity

(x y) Mod n  = (x Mod n) (y Mod n)  Mod n

Lets take a few examples.\
\>", "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.6021837027795763`*^9, 3.6021837951544847`*^9}, {
   3.602183870610248*^9, 3.602183875166575*^9}, {3.602186169543943*^9, 
   3.602186182906054*^9}, {3.602198759152606*^9, 3.6021987848433743`*^9}, {
   3.602204061333839*^9, 3.602204197078739*^9}, 3.6022043835157213`*^9, {
   3.6022045516989317`*^9, 3.602204557073349*^9}, {3.602204635614703*^9, 
   3.602204921967848*^9}, {3.602204995342251*^9, 3.6022051780915127`*^9}, {
   3.6022055199658546`*^9, 3.602205524645262*^9}, 3.739237498517593*^9, {
   3.759930481639162*^9, 3.759930487387904*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", "7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "3"}], ";"}]}], "Input",
 CellChangeTimes->{{3.602183799937656*^9, 3.602183838716311*^9}, {
  3.602184154691764*^9, 3.602184174953474*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Mod", "[", 
  RowBox[{
   RowBox[{"x", " ", "y"}], ",", "n"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Mod", "[", 
  RowBox[{"x", ",", "n"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Mod", "[", 
  RowBox[{"y", ",", "n"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mod", "[", 
   RowBox[{
    RowBox[{"x", " ", "y"}], ",", "n"}], "]"}], "\[Equal]", 
  RowBox[{"Mod", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{"x", ",", "n"}], "]"}], " ", 
     RowBox[{"Mod", "[", 
      RowBox[{"y", ",", "n"}], "]"}]}], ",", "n"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.602183842899675*^9, 3.602183866988186*^9}, {
  3.6021840611906776`*^9, 3.602184150011839*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.7609054657392263`*^9}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.760905465852203*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.760905466033669*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7609054661611433`*^9}]
}, Closed]],

Cell[TextData[{
 "Using these theorems we take Bob's value C = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["N", "e"], TraditionalForm]]],
 " Mod n;   Alice then creates \n\n",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["C", "d"], TraditionalForm]]],
 " Mod n  = (  ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["N", "e"], TraditionalForm]]],
 " Mod n  ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["N", "e"], TraditionalForm]]],
 " Mod n ... ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["N", "e"], TraditionalForm]]],
 " Mod n )  Mod n  =  ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["N", "ed"], TraditionalForm]]],
 "  Mod n.  Let us first evaluate\n\n",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["N", 
    RowBox[{"e", " ", "d"}]], TraditionalForm]]],
 " Mod p = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["N", 
    RowBox[{"1", " ", "+", " ", 
     RowBox[{"k", " ", 
      RowBox[{"(", 
       RowBox[{"p", "-", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"q", "-", "1"}], ")"}], " "}]}]], TraditionalForm]]],
 " Mod p    \n\nWhy ?  Remember, Alice chose ",
 StyleBox["de = 1 Mod ",
  FontSlant->"Italic"],
 "\[Phi] = 1 Mod (p-1)(q-1) which implies\nthat  de = 1 + k (p-1)(q-1)  where \
k is an integer. \n\nTherefore\n\n",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["N", 
    RowBox[{"e", " ", "d"}]], TraditionalForm]]],
 " Mod p = N ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", " ", 
    SuperscriptBox["N", 
     RowBox[{"k", "(", 
      RowBox[{"q", "-", "1"}], ")"}]]}], TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"]", "  "}], 
    RowBox[{"p", "-", "1"}]], TraditionalForm]]],
 " Mod p = ( N Mod p) (  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", " ", 
    SuperscriptBox["N", 
     RowBox[{"k", "(", 
      RowBox[{"q", "-", "1"}], ")"}]]}], TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"]", "  "}], 
    RowBox[{"p", "-", "1"}]], TraditionalForm]]],
 " Mod p)  Mod p"
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.602205549272846*^9, 3.6022059074017477`*^9}, {
  3.602205942850165*^9, 3.602206122720755*^9}, {3.6022061675653753`*^9, 
  3.602206243379788*^9}, {3.6022062736459923`*^9, 3.602206396518401*^9}, {
  3.602206632021957*^9, 3.602206679280904*^9}, {3.602206810675919*^9, 
  3.602206859036425*^9}, {3.602206895356516*^9, 3.602206971002421*^9}, {
  3.602250237265697*^9, 3.602250238693766*^9}, {3.602250282311125*^9, 
  3.6022502862373*^9}, {3.60225039451766*^9, 3.6022504312201138`*^9}, {
  3.74768057504716*^9, 3.7476805820217876`*^9}, {3.7609071091608543`*^9, 
  3.7609071272613277`*^9}, {3.760907272953327*^9, 3.760907275867695*^9}}],

Cell[TextData[{
 "Now lets use Theorem I  to state that\n\n[",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["N", 
    RowBox[{"k", "(", 
     RowBox[{"q", "-", "1"}], ")"}]], TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["]", 
    RowBox[{"p", "-", "1"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "  Mod p = 0  if ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]]],
 " divides ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]]],
 "\n[",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["N", 
    RowBox[{"k", "(", 
     RowBox[{"q", "-", "1"}], ")"}]], TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"]", " "}], 
    RowBox[{"p", "-", "1"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " Mod p = 1  if ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]]],
 " does not divide",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", "N"}], TraditionalForm]]],
 "\n\nso in Case I,  ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["N", "ed"], TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{"Mod", " ", "p"}]}], TraditionalForm]]],
 " = 0 ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Mod", " ", "p"}], TraditionalForm]]],
 "  \n                      but  0 = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", " ", "Mod", " ", "p", " "}], TraditionalForm]]],
 " therefore\n                     ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["N", "ed"], TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{"Mod", " ", "p"}]}], TraditionalForm]]],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", " ", "Mod", " ", "p"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nin case II  \n\n",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["N", 
    RowBox[{"e", " ", "d"}]], TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Mod", " ", "p"}], TraditionalForm]]],
 " =  ( ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", " ", "Mod", " ", "p"}], TraditionalForm]]],
 " ) ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Mod", " ", "p"}], TraditionalForm]]],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{"N", " ", "Mod", " ", "p", " "}]}], TraditionalForm]]],
 " so in either case we have\n\n",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["N", 
    RowBox[{"e", " ", "d"}]], TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Mod", " ", "p"}], TraditionalForm]]],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", " ", "Mod", " ", "p"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nSince we proved the above for",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", "p"}], TraditionalForm]]],
 ", we can do the same to show that\n\n",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["N", 
    RowBox[{"e", " ", "d"}]], TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Mod", " ", "q"}], TraditionalForm]]],
 " =",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{"N", " ", "Mod", " ", "q"}]}], TraditionalForm]]],
 "\n\nWe now use Theorem II  to equate\n\n",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["N", "ed"], TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Mod", " ", "p", " ", "q"}], TraditionalForm]]],
 " = ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Mod", " ", "p"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", " ", "Mod", " ", "q"}], TraditionalForm]]],
 "  or"
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.602206439304294*^9, 3.6022065395881357`*^9}, {
   3.602206867308433*^9, 3.602206885071834*^9}, {3.6022069798225527`*^9, 
   3.602207019277278*^9}, {3.602207052746785*^9, 3.602207094586445*^9}, {
   3.602207252946212*^9, 3.602207319377903*^9}, {3.602207400617024*^9, 
   3.6022074065203953`*^9}, {3.602207509452404*^9, 3.602207542785963*^9}, {
   3.602207574162922*^9, 3.602207693370644*^9}, {3.602207723858795*^9, 
   3.602207833256317*^9}, {3.602207873763577*^9, 3.6022080193809423`*^9}, {
   3.602208089999125*^9, 3.60220809150392*^9}, {3.602208130826209*^9, 
   3.602208134504945*^9}, 3.6022081979524927`*^9, 3.7599305138158903`*^9, {
   3.760907016240912*^9, 3.760907099019869*^9}, {3.7609071812624807`*^9, 
   3.7609072226511297`*^9}, {3.760907254744388*^9, 3.7609072682518377`*^9}, {
   3.760957992050363*^9, 3.7609581212827463`*^9}, {3.760958161406762*^9, 
   3.760958186054618*^9}, {3.76095825151683*^9, 3.760958273264173*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SuperscriptBox["N", "ed"], TraditionalForm]]],
 " Mod n =  N Mod n, but if  N < n  this is the same as\n",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["N", "ed"], TraditionalForm]]],
 " Mod n =  N    QED"
}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.602206439304294*^9, 3.6022065395881357`*^9}, {
  3.602206867308433*^9, 3.602206885071834*^9}, {3.6022069798225527`*^9, 
  3.602207019277278*^9}, {3.602207052746785*^9, 3.602207094586445*^9}, {
  3.602207252946212*^9, 3.602207319377903*^9}, {3.602207400617024*^9, 
  3.6022074065203953`*^9}, {3.602207509452404*^9, 3.602207542785963*^9}, {
  3.602207574162922*^9, 3.602207693370644*^9}, {3.602207723858795*^9, 
  3.602207833256317*^9}, {3.602207873763577*^9, 3.6022080193809423`*^9}, {
  3.602208089999125*^9, 3.60220809150392*^9}, {3.602208130826209*^9, 
  3.602208134504945*^9}, {3.6022081979524927`*^9, 3.60220820967984*^9}, {
  3.6022123738145514`*^9, 3.602212374793145*^9}, {3.602212705854866*^9, 
  3.602212742406762*^9}}],

Cell[TextData[{
 "Thus Alice can re-constitute the value ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", " ", "Mod", " ", "n"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", which is Bob's original message (which can then be transcribed using his \
function ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["f", 
    RowBox[{"-", "1"}]], TraditionalForm]]],
 ")"
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.602208246265946*^9, 3.602208313204143*^9}, {
   3.6022083537163153`*^9, 3.6022084239066*^9}, 3.759929984977233*^9, 
   3.760907293925768*^9}],

Cell["\<\
Let's look at a specific example. First Alice produces her public key as \
described above.\
\>", "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.602208246265946*^9, 3.602208313204143*^9}, {
   3.6022083537163153`*^9, 3.6022084239066*^9}, 3.7609072984546137`*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Alice", " ", "chooses", " ", "2", " ", "prime", " ", "numbers"}], 
   ",", " ", "p", ",", " ", 
   RowBox[{
    RowBox[{"q", " ", "that", " ", "are", " ", "not", " ", "co"}], "-", 
    "prime"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.6022084385213757`*^9, 3.602208475399741*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", "23"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q", "=", "11"}], ";"}]}], "Input",
 CellChangeTimes->{{3.602208478175074*^9, 3.602208490700096*^9}, {
  3.602208548065947*^9, 3.602208550686545*^9}, {3.665372248198454*^9, 
  3.6653722550923157`*^9}, {3.74768062282677*^9, 3.747680631302291*^9}, {
  3.7476833769085503`*^9, 3.747683386857698*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"she", " ", "constructs", " ", "the", " ", "modulus"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"n", "=", 
   RowBox[{"p", " ", "q"}]}]}]], "Input",
 CellChangeTimes->{{3.602208511742724*^9, 3.602208542316393*^9}, {
  3.747680655294546*^9, 3.747680659479396*^9}}],

Cell[BoxData["253"], "Output",
 CellChangeTimes->{3.760905466721999*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"then", " ", "the", " ", "totient"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"\[Phi]", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"p", "-", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"q", "-", "1"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.602208563999029*^9, 3.602208604215361*^9}, {
  3.7476806669610443`*^9, 3.747680672733419*^9}}],

Cell[BoxData["220"], "Output",
 CellChangeTimes->{3.7609054669249573`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"choose", " ", "e"}], ",", " ", 
    RowBox[{
    "it", " ", "cannot", " ", "have", " ", "a", " ", "common", " ", "factor", 
     " ", "with", " ", "\[Phi]"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"e", "=", "31"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"?", "GCD"}], "\[IndentingNewLine]", 
   RowBox[{"GCD", "[", 
    RowBox[{"\[Phi]", ",", "e"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6022086362003202`*^9, 3.602208747757847*^9}, {
  3.602208796832396*^9, 3.602208797303793*^9}, {3.6653722637431793`*^9, 
  3.6653722657454233`*^9}, {3.747680689158217*^9, 3.747680735532117*^9}, {
  3.747680779643619*^9, 3.7476808457061157`*^9}, {3.7476808897956657`*^9, 
  3.747680921543934*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"GCD\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"]\\\"}]\) gives the greatest common divisor of the \
\!\(\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\). \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/GCD"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.7609054671565657`*^9},
 CellTags->"Info4493760876667-7833283"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.760905467322369*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Alice", " ", "constructs", " ", "her", " ", "private", " ", "exponent", 
     " ", "d", " ", "which", " ", "is", " ", "a", " ", "solution", " ", "of", 
     " ", "the", " ", "equation", "  ", "e", " ", "d"}], " ", "=", " ", 
    RowBox[{"1", " ", 
     RowBox[{"Mod", "[", "\[Phi]", "]"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Mathematiac", " ", "has", " ", "a", " ", "routine", " ", "that", " ", 
     "lets", " ", "you", " ", "solve", " ", "the", " ", "above", " ", 
     "equation", " ", "for", " ", "d"}], ",", " ", 
    RowBox[{"the", " ", "Modular", " ", "inverse", " ", "of", " ", "e"}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"?", "PowerMod"}]}]], "Input",
 CellChangeTimes->{{3.602208824062114*^9, 3.6022088827493773`*^9}, {
   3.602209346834353*^9, 3.602209360323002*^9}, {3.602210350770454*^9, 
   3.602210430241762*^9}, {3.602210501557171*^9, 3.602210524271619*^9}, {
   3.60221112598318*^9, 3.6022111553438673`*^9}, {3.602211302452387*^9, 
   3.602211332782967*^9}, {3.602211818368338*^9, 3.6022120168219023`*^9}, {
   3.6022121386869707`*^9, 3.602212142172387*^9}, {3.7476808568778563`*^9, 
   3.7476808854421453`*^9}, 3.7599307377316637`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"PowerMod\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"b\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"m\\\", \\\"TI\\\"]}], \\\"]\\\"}]\) \
gives \!\(\*RowBox[{SuperscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], StyleBox[\
\\\"b\\\", \\\"TI\\\"]], \\\" \\\", \\\"mod\\\", \\\" \\\", \
StyleBox[\\\"m\\\", \\\"TI\\\"]}]\). \\n\!\(\*RowBox[{\\\"PowerMod\\\", \\\"[\
\\\", RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\",\\\", StyleBox[\\\"m\\\", \\\"TI\\\"]}], \\\"]\\\"}]\) \
finds the modular inverse of \!\(\*StyleBox[\\\"a\\\", \\\"TI\\\"]\) modulo \
\!\(\*StyleBox[\\\"m\\\", \\\"TI\\\"]\).\\n\!\(\*RowBox[{\\\"PowerMod\\\", \\\
\"[\\\", RowBox[{StyleBox[\\\"a\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"1\\\", \\\"/\\\", StyleBox[\\\"r\\\", \\\"TI\\\"]}], \\\",\\\", \
StyleBox[\\\"m\\\", \\\"TI\\\"]}], \\\"]\\\"}]\) finds a modular \
\!\(\*StyleBox[\\\"r\\\", \\\"TI\\\"]\)\!\(\*SuperscriptBox[\\\"\[Null]\\\", \
\\\"th\\\"]\) root of \!\(\*StyleBox[\\\"a\\\", \\\"TI\\\"]\).\"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/PowerMod"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.760905467779961*^9},
 CellTags->"Info4513760876667-7833283"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d", "=", 
  RowBox[{"PowerMod", "[", 
   RowBox[{"e", ",", 
    RowBox[{"-", "1"}], ",", "\[Phi]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.602208824062114*^9, 3.6022088827493773`*^9}, {
  3.602209346834353*^9, 3.602209360323002*^9}, {3.602210350770454*^9, 
  3.602210430241762*^9}, {3.602210501557171*^9, 3.602210524271619*^9}, {
  3.60221112598318*^9, 3.6022111553438673`*^9}, {3.602211302452387*^9, 
  3.602211332782967*^9}, {3.602211818368338*^9, 3.6022120168219023`*^9}, {
  3.6022121386869707`*^9, 3.602212142172387*^9}, {3.7476808568778563`*^9, 
  3.747680873011079*^9}}],

Cell[BoxData["71"], "Output",
 CellChangeTimes->{3.760905468007347*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Alice", " ", "now", " ", "publishes", " ", "her", " ", "public", " ", 
    "key"}], " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"key", "=", 
   RowBox[{"{", 
    RowBox[{"n", ",", "e"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.602208824062114*^9, 3.6022088827493773`*^9}, {
  3.602209346834353*^9, 3.6022093530740137`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"253", ",", "31"}], "}"}]], "Output",
 CellChangeTimes->{3.7609054681941977`*^9}]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Bob", " ", "uploads", " ", 
     RowBox[{"Alice", "'"}], "s", " ", "key", " ", "he", " ", "then", " ", 
     "wants", " ", "to", " ", "send", " ", "the", " ", "number", " ", "N"}], 
    " ", "=", " ", 
    RowBox[{"199", " ", "to", " ", "Alice", " ", "encrypted"}]}], " ", "*)"}],
   " "}]], "Input",
 CellChangeTimes->{{3.60220891396742*^9, 3.60220894305097*^9}, {
  3.60220899907726*^9, 3.602209026404242*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Bobsmessage", "=", "199"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Bobsmessage", "^", "e"}], "\[IndentingNewLine]", 
 RowBox[{"Cnum", "=", 
  RowBox[{"Mod", "[", 
   RowBox[{"%", ",", "n"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6022090472510643`*^9, 3.6022091476706457`*^9}, {
  3.60221207174581*^9, 3.602212073646722*^9}, {3.747683456982048*^9, 
  3.747683474183344*^9}}],

Cell[BoxData[\
"183842267821883126536849737740850968039082927251300875492337211941406199"], \
"Output",
 CellChangeTimes->{3.760905468407155*^9}],

Cell[BoxData["221"], "Output",
 CellChangeTimes->{3.760905468525304*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"So", " ", "Alice"}], ",", " ", 
    RowBox[{"as", " ", "well", " ", "eavesdroppers"}], ",", " ", 
    RowBox[{"have", " ", "access", " ", "to", " ", "this", " ", "number"}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "But", " ", "Alice", " ", "uses", " ", "her", " ", "exponent", " ", "d", 
    " ", "to", " ", "construct", " ", "N"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Cnum", "^", "d"}], "\[IndentingNewLine]", 
   RowBox[{"Alicesmessage", "=", 
    RowBox[{"Mod", "[", 
     RowBox[{"%", ",", "n"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.602209164986762*^9, 3.602209246537964*^9}, {
   3.602209317999936*^9, 3.60220932603242*^9}, {3.6022120329885273`*^9, 
   3.6022120605739603`*^9}, {3.6022120972272778`*^9, 3.602212117444001*^9}, {
   3.747680996649919*^9, 3.7476810161360188`*^9}, {3.747681145693746*^9, 
   3.7476811477974043`*^9}, {3.747683503691894*^9, 3.747683515549868*^9}, {
   3.747684026784408*^9, 3.747684028473061*^9}, 3.759934403875472*^9}],

Cell[BoxData[\
"28304235669297588721788477479545341778914861566574429012673694928037843063383\
655685607970807954357099304258267447549532586798529180583570518440104230395480\
098437129621"], "Output",
 CellChangeTimes->{3.7609054690470057`*^9}],

Cell[BoxData["199"], "Output",
 CellChangeTimes->{3.760905469212412*^9}]
}, Closed]],

Cell["Thus Alice easily obtains Bob's original message,", "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.602212768857212*^9, 3.602212775763795*^9}, {
  3.602212843816774*^9, 3.602212997236669*^9}, {3.665372320440181*^9, 
  3.665372325231497*^9}, {3.747681154209017*^9, 3.747681170797141*^9}, {
  3.747681329297084*^9, 3.747681333629538*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{"Bobsmessage", "\[IndentingNewLine]", "Alicesmessage"}], "Input",
 CellChangeTimes->{{3.747681368572378*^9, 3.747681372487897*^9}, {
  3.747683498483962*^9, 3.7476835429001513`*^9}, {3.747684033714732*^9, 
  3.74768403521215*^9}}],

Cell[BoxData["199"], "Output",
 CellChangeTimes->{3.7609054694324007`*^9}],

Cell[BoxData["199"], "Output",
 CellChangeTimes->{3.760905469556485*^9}]
}, Closed]],

Cell[TextData[{
 "However the eavesdroppers are hard at work. They know the public key ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", ",", "e", ","}], TraditionalForm]]],
 " and all they need to do is factor ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " it in order to get p,q as well as the totient. With the totient they can \
easily solve the equation\n\nd e = 1 Mod \[Phi]\n\nfor exponent d (the \
Modular inverse of e ).  With knowledge of the totient, the eavesdroppers \
employ Alice\[CloseCurlyQuote]s algorithm in order to find ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]]],
 ".  So why is this encryption scheme secure?\n\n",
 StyleBox["Answer: ",
  FontWeight->"Bold"],
 "It is  difficult to factor a number ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " if it is very large. Indeed, as the number of digits in ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " increase, known classical algorithms require computer resources (e.g. \
time, memory) that scale as a power of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "."}], TraditionalForm]]],
 " At a certain point, for very large ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", ","}], TraditionalForm]]],
 " available technology is not able to perform the required task. Therefore, \
ensuring the security of an encrypted message."
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.602212768857212*^9, 3.602212775763795*^9}, {
   3.602212843816774*^9, 3.602212997236669*^9}, {3.665372320440181*^9, 
   3.665372325231497*^9}, {3.747681154209017*^9, 3.747681170797141*^9}, 
   3.747681360258099*^9, {3.747681394358035*^9, 3.747681440090858*^9}, {
   3.747681525019134*^9, 3.7476815383738127`*^9}, {3.759930006766156*^9, 
   3.759930007661846*^9}, {3.7599341924674263`*^9, 3.7599341974347763`*^9}, {
   3.759934246900172*^9, 3.759934289006383*^9}, 3.760906145535784*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Examples:", "Subsubsection",
 CellChangeTimes->{{3.747681811978653*^9, 3.747681817165683*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FactorInteger"}]], "Input",
 CellChangeTimes->{{3.74768215013091*^9, 3.747682174213649*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"FactorInteger\\\", \\\"[\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\) gives a list of the prime \
factors of the integer \!\(\*StyleBox[\\\"n\\\", \\\"TI\\\"]\), together with \
their exponents. \\n\!\(\*RowBox[{\\\"FactorInteger\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\) does partial factorization, pulling out at most \
\!\(\*StyleBox[\\\"k\\\", \\\"TI\\\"]\) distinct factors.\"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FactorInteger"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.760905469836429*^9},
 CellTags->"Info4623760876669-7833283"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Timing"}]], "Input",
 CellChangeTimes->{{3.747682248835479*^9, 3.747682250964047*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"Timing\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\) evaluates \!\(\*StyleBox[\\\
\"expr\\\", \\\"TI\\\"]\), and returns a list of the time in seconds used, \
together with the result obtained. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Timing"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.7609054700882387`*^9},
 CellTags->"Info4633760876670-7833283"]
}, Closed]],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"FactorInteger", "[", "15", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.747682180705929*^9, 3.747682204185624*^9}, {
  3.74768225620662*^9, 3.747682266860375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.000033`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "1"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7609054702988358`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"FactorInteger", "[", "1698532224795", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.747683021989676*^9, 3.7476830318682547`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.000036`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"23", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"33491713", ",", "1"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.760905470482091*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
  "FactorInteger", "[", 
   "745237738484848484858585858820303836464646464646698532224795", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7476830536708097`*^9, 3.7476830769814796`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.480108`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"43", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"73", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"109919", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"19736531", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"23064124095515717", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"948971049172828259916128437", ",", "1"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7609054711626663`*^9}]
}, Closed]],

Cell["\<\
Note the time resources required by Mathematica as the number to be factored \
grows in size. \
\>", "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.747683096972815*^9, 3.7476831229281197`*^9}, {
  3.747683178975266*^9, 3.7476832411447773`*^9}, {3.7599342170768642`*^9, 
  3.759934238135839*^9}}]
}, Closed]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1077, 981},
WindowMargins->{{Automatic, 418}, {Automatic, 9}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
ShowGroupOpener->True,
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info4493760876667-7833283"->{
  Cell[177177, 3402, 741, 15, 43, "Print",
   CellTags->"Info4493760876667-7833283"]},
 "Info4513760876667-7833283"->{
  Cell[179337, 3453, 1393, 24, 87, "Print",
   CellTags->"Info4513760876667-7833283"]},
 "Info4623760876669-7833283"->{
  Cell[187627, 3668, 809, 16, 63, "Print",
   CellTags->"Info4623760876669-7833283"]},
 "Info4633760876670-7833283"->{
  Cell[188591, 3693, 550, 12, 43, "Print",
   CellTags->"Info4633760876670-7833283"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info4493760876667-7833283", 192109, 3814},
 {"Info4513760876667-7833283", 192228, 3817},
 {"Info4623760876669-7833283", 192348, 3820},
 {"Info4633760876670-7833283", 192467, 3823}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 171, 2, 92, "Title"],
Cell[CellGroupData[{
Cell[775, 28, 155, 2, 64, "Section"],
Cell[933, 32, 562, 10, 76, "Text"],
Cell[CellGroupData[{
Cell[1520, 46, 454, 12, 54, "Input"],
Cell[1977, 60, 589, 9, 32, "Output"]
}, Closed]],
Cell[2581, 72, 196, 3, 35, "Text"],
Cell[CellGroupData[{
Cell[2802, 79, 131, 3, 32, "Input"],
Cell[2936, 84, 587, 9, 32, "Output"]
}, Closed]],
Cell[3538, 96, 191, 4, 35, "Text"],
Cell[CellGroupData[{
Cell[3754, 104, 138, 3, 32, "Input"],
Cell[3895, 109, 1550, 29, 54, "Output"]
}, Closed]],
Cell[5460, 141, 528, 9, 54, "Text"],
Cell[5991, 152, 238, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[6254, 161, 390, 8, 54, "Input"],
Cell[6647, 171, 196, 2, 54, "Output"]
}, Closed]],
Cell[6858, 176, 773, 15, 73, "Text"],
Cell[CellGroupData[{
Cell[7656, 195, 234, 5, 32, "Input"],
Cell[7893, 202, 1551, 29, 54, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[9481, 236, 166, 3, 26, "Input"],
Cell[9650, 241, 196, 2, 54, "Output"]
}, Closed]],
Cell[9861, 246, 412, 9, 35, "Text"],
Cell[CellGroupData[{
Cell[10298, 259, 199, 4, 30, "Item"],
Cell[10500, 265, 234, 5, 30, "Item"]
}, Closed]],
Cell[10749, 273, 143, 2, 26, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[10929, 280, 160, 2, 50, "Section"],
Cell[11092, 284, 104, 1, 30, "Text"],
Cell[11199, 287, 70933, 1168, 148, "Input"],
Cell[82135, 1457, 484, 10, 38, "Text"],
Cell[CellGroupData[{
Cell[82644, 1471, 469, 14, 30, "Item"],
Cell[83116, 1487, 615, 17, 30, "Item"],
Cell[83734, 1506, 675, 20, 30, "Item"],
Cell[84412, 1528, 762, 19, 30, "Item"],
Cell[85177, 1549, 608, 13, 30, "Item"]
}, Closed]],
Cell[85800, 1565, 577, 17, 35, "Text"],
Cell[86380, 1584, 2389, 68, 100, "Text"],
Cell[88772, 1654, 1742, 54, 298, "Text"],
Cell[CellGroupData[{
Cell[90539, 1712, 67252, 1109, 203, "Subsubsection"],
Cell[157794, 2823, 1011, 29, 156, "Text"],
Cell[158808, 2854, 502, 12, 32, "Input"],
Cell[CellGroupData[{
Cell[159335, 2870, 616, 15, 54, "Input"],
Cell[159954, 2887, 2044, 45, 244, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[162047, 2938, 150, 2, 29, "Subsubsection"],
Cell[162200, 2942, 1116, 17, 247, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[163353, 2964, 105, 1, 35, "Subsubsection"],
Cell[163461, 2967, 740, 15, 114, "Text"],
Cell[164204, 2984, 320, 8, 75, "Input"],
Cell[CellGroupData[{
Cell[164549, 2996, 717, 20, 96, "Input"],
Cell[165269, 3018, 72, 1, 32, "Output"],
Cell[165344, 3021, 70, 1, 32, "Output"],
Cell[165417, 3024, 70, 1, 32, "Output"],
Cell[165490, 3027, 75, 1, 32, "Output"]
}, Closed]],
Cell[165580, 3031, 2666, 84, 253, "Text"],
Cell[168249, 3117, 4448, 155, 465, "Text"],
Cell[172700, 3274, 1045, 21, 70, "Text"],
Cell[173748, 3297, 577, 17, 40, "Text"],
Cell[174328, 3316, 287, 6, 38, "Text"],
Cell[174618, 3324, 346, 8, 32, "Input"],
Cell[174967, 3334, 401, 8, 54, "Input"],
Cell[CellGroupData[{
Cell[175393, 3346, 331, 8, 54, "Input"],
Cell[175727, 3356, 72, 1, 32, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[175836, 3362, 426, 12, 48, "Input"],
Cell[176265, 3376, 74, 1, 32, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[176376, 3382, 798, 18, 90, "Input"],
Cell[177177, 3402, 741, 15, 43, "Print",
 CellTags->"Info4493760876667-7833283"],
Cell[177921, 3419, 70, 1, 32, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[178028, 3425, 1306, 26, 69, "Input"],
Cell[179337, 3453, 1393, 24, 87, "Print",
 CellTags->"Info4513760876667-7833283"]
}, Closed]],
Cell[CellGroupData[{
Cell[180767, 3482, 604, 11, 26, "Input"],
Cell[181374, 3495, 71, 1, 32, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[181482, 3501, 414, 10, 69, "Input"],
Cell[181899, 3513, 120, 3, 32, "Output"]
}, Closed]],
Cell[182034, 3519, 483, 11, 26, "Input"],
Cell[CellGroupData[{
Cell[182542, 3534, 415, 9, 75, "Input"],
Cell[182960, 3545, 145, 3, 32, "Output"],
Cell[183108, 3550, 72, 1, 32, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[183217, 3556, 1123, 23, 111, "Input"],
Cell[184343, 3581, 244, 4, 54, "Output"],
Cell[184590, 3587, 72, 1, 32, "Output"]
}, Closed]],
Cell[184677, 3591, 356, 5, 35, "Text"],
Cell[CellGroupData[{
Cell[185058, 3600, 244, 3, 54, "Input"],
Cell[185305, 3605, 74, 1, 32, "Output"],
Cell[185382, 3608, 72, 1, 32, "Output"]
}, Closed]],
Cell[185469, 3612, 1872, 42, 229, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[187378, 3659, 100, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[187503, 3664, 121, 2, 32, "Input"],
Cell[187627, 3668, 809, 16, 63, "Print",
 CellTags->"Info4623760876669-7833283"]
}, Closed]],
Cell[CellGroupData[{
Cell[188473, 3689, 115, 2, 32, "Input"],
Cell[188591, 3693, 550, 12, 43, "Print",
 CellTags->"Info4633760876670-7833283"]
}, Closed]],
Cell[189156, 3708, 26, 0, 32, "Input"],
Cell[CellGroupData[{
Cell[189207, 3712, 214, 4, 32, "Input"],
Cell[189424, 3718, 280, 9, 32, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[189741, 3732, 179, 3, 32, "Input"],
Cell[189923, 3737, 475, 15, 32, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[190435, 3757, 238, 6, 32, "Input"],
Cell[190676, 3765, 654, 20, 54, "Output"]
}, Closed]],
Cell[191345, 3788, 320, 7, 38, "Text"]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

