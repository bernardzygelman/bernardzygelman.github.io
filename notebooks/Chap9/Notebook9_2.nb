(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    119228,       2643]
NotebookOptionsPosition[    115074,       2513]
NotebookOutlinePosition[    115458,       2530]
CellTagsIndexPosition[    115415,       2527]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Simulating a Quantum Error Correcting Code", "Title",
 CellChangeTimes->{{3.755184368769635*^9, 3.755184400504895*^9}}],

Cell[BoxData[
 GraphicsBox[{
   TagBox[RasterBox[CompressedData["
1:eJzsnQd8FNX6vynqtV0R6dKlJIGQAoh6LSBWyv+qNEUp4pV2FSmCCkEFBKRL
C00pCgSItFCkIyUKCRd+gCBICCmUhBQIJJtCIu8/78HBJckmO7O7Z2Znv8/n
cxSWnZ3ZmdmZ95lz3vfUfW9ghz5lSpUq9fG9+f/p0OvT54cM6TW848P5f+n8
0cf9+37U+/02Hw3t3bf3kCffK5v/YnjpUqXezP/DXfl//uOPP+j06dOinTp1
SrTff/9dtJMnT6KhoaGhoaGhoaGhoXlcU5yIm+JJ7EzsT9zOnDlDUVFRdPbs
WdGio6NvO5XiUidOnBDtt99+o+PHj6OhoaGhoaGhoaGhoXlcYx/ipviR4lvW
jqX4leJY/O/WLnXs2DE6evSoaP/3f/93ux05cgQNDQ0NDQ0NDQ0NDc3UzdqB
2InYjxTXsnasgn7FbsX/rjiV4lCHDx+m//3vf6IdOnTodouMjERDQ0NDQ0ND
Q0NDQzNds/YebuxC7EXcrD1LcSylD8var6ydSnGpiIgIOnjwoGgHDhwQ7ddf
f0VDQ0NDQ0NDQ0NDQzNtU9yHG7sQe5HiXdaOxX1Til9Z919ZLBa6ceMG5eTk
FNmys7PRPKDZOv5oaHx+ZGZm3nGe8HUjLS1N/N/6dX7flStXKD09vdDnXLt2
TSxj/X7+c0ZGhnidl7X+HH6dP8f6dV4ffw7/W1ZW1u3X+c9Xr161e73c+DN4
W60/nz9HWQf/33p7rl+/LpYp+H5+L6+34Ofz+22tNzU19Y7PV/ax8t2sP58/
m1vB9/Pn8+v8Hut1KOu13j/Kviu4XmUd/H7rfcefx+9T1q18Pv/fenus18uv
FTyOJa2Xjxlvr/V6le/Mrxc85/j1gsee/64cr4Lv5/Va709lHbyd1uu1/m78
Wdafr5yL/P6C5yK/xv8v+H4+r2ytlz+/4DnK6+V9UfCctv5u1p+v7IeCvxn+
fH694G+suPUW/A0ox175fRfcnoLnIr9u/duwXjevkxvuMWhoxmh6x5ru2Gzt
S3an+Ph44Vc8PlDJv2K3+vPPPwkAAIqjqOvEpEmT6JdffhHXHmumTZtGe/fu
FTGXNTNnzqRdu3aJuMyaOXPm0NatW0VsZs23335LGzduFLGcNYsWLaJ169aJ
mM2apUuX0urVq0VMaM3KlStpxYoVIna1Zs2aNbRs2TIRW1oTFhZGixcvFnG5
NZs3b6aFCxdSSkrKHa/v2LGD5s+fT8nJyXe8vmfPHvHdkpKS7nid9xnvi8TE
xDte5+divO8SEhLueJ2fj02dOrXQ63wtnzhxIl28ePGO1/m6Pn78+EKvx8XF
0VdffUXnz5+/43V+3+jRowu9zt/niy++EPcOa3i/jxw5UnyeNXy8R4wYQbGx
sXe8npeXR59++inFxMRQQfj9PH7i5s2bd7zO6+Xvx8taw9vJYy1yc3PveH3c
uHFi3AXf66zh/cPPHQueo7w/9+3bV+gcnT59Ou3evVs4gjXBwcG0ffv2Qucu
H3c+Lwqeo3ye8HnEzmHNDz/8IM67gufu8uXLxXla8BwNDQ0V/1bwdT7/+bPs
PUe3bdtGCxYsKHSO8u9x3rx5hc7R/fv30+zZs+ny5ct3vM7Pb3kfFTx3+Tlu
UecoxxwDBgwQ+67gPgUAAHeHr4XK+EDFr7jvCm4FACgOjvf/9a9/iWuGNf36
9aMNGzYUijc/+ugj4TgFXWnIkCEiTiwYb3LczS5T0Ik4fud4sKD7cHzNsW7B
uJJ94ptvvikUP06ZMkXE2AXjxxkzZoiYvGCcOHfuXBo1alShOJFj1qCgoELO
wn7G3+HChQt3vM5x8ccff1zIWdavX08DBw4s5CZbtmyhDz74oJCbcKzP+7qg
m7Cj9e7dm86dO3fH6+wY//nPf0QdWGt43ELPnj2Fy1jDebfdu3cv9Dpv99tv
vy1czRrev127dhX3D2v4eHfp0kU8t7OG/ahz586Fzh/mzTffFPelgvchXi+P
vyjoVj169BBOxM8MreHvy45b0KH69u1LmzZtKhTX835mPyl4jg4aNIhWrVpV
yJWGDRsmXKagEw0fPpy+++67Qu7DbsheXfAcHTt2rDjvCroPn5+TJ08udI7y
+fz1118Xchw+/8eMGVPoHOXnEbzuS5cu3fH6999/L7a14DnKzxyGDh1a6Bxd
u3YtDR48uJBXs7vx77vgucv7vn///oXOUXa0Xr16iZgDsQYAwGzwNZiffypj
A5W+K1zvAADFwfEkx2QF41m+dhTsb5DxOr/m6teLui6a9XVGz9f1OIdw7sp9
vahtBQAAd4efY3G/vdJ3peRdwa0AAAAAAAAAwH7YrXisiNJ3pYwLhFsBAAAA
AAAAgP1wjgDXDuRa63ArAAAAAAAAANAG50twbjC7FY8LVHKu4FYAAAAAcAWv
vPKKqClasCYNAAC4O1wHiGv8cs4Vz3elzHUFtwIAFAfXNWvZsmWh+m8AAFAS
fN3g+ocFaz4CAIC7U9CtlHoWcCsAQHFwvWiuw11wLiAAAAAAAE+F3Yrn/eN6
FnArAAAAAAAAANAG3AoAAAAAAAAAHAduBQAAAAAAAACOY+1WPMcV3AoAAAAA
rqRdu3Y0depU1AkEAJgOuBUAQAvBwcH04osv0h9//KH3pgAA3AyON3gOmNzc
XL03BQAAnAq71YEDB+BWAABVJCQkiHHEFotF700BALgZN2/e1HsTAADAJcCt
AABaQXwEAAAAAPA3cCsAAAAAAAAAcBy4FQAAAAAAAAA4DtwKAAAAADJ57bXX
aMaMGXT16lW9NwUAAJwK3AoAoIX58+dTmzZt6MyZM3pvCgDAzfjll18oJiYG
dQIBAKYDbgUA0EJ8fDz9+uuvlJ6ervemAADcDNTBAQCYFbgVAEAriI8AAAAA
AP4GbgUAAAAAAAAAjgO3AgAYGc51P3z4MK1cuZK++uor6tatG73wwgvUvXt3
GjNmDK1YsUJcv9LS0nDdcgDOe4mNjaUdO3bQnDlzaPDgwdSuXTtq3749ffTR
RzR79mzatm0bnTt3jnJycvTeXAAAAMCQwK0AAEbk1KlT9N5771H16tXJ39+f
OnXqRCNGjKDx48dTixYthGcFBQWJ1/nfK1asSP3796c//viD8vLy9N58t4E9
KSQkhPz8/KhOnTrUqlUr6tOnD02ZMkXUcuvXr5/Y17xv2Wlr1qwp3vv999/T
9evX9d584KZ07NiRgoODUScQAGA64FYAAC189913IvaOiopy6ucmJSXRZ599
Rj4+PjRy5Ei6dOmScCW+JnFj5/p//+//3b5OKS0xMVG4V8OGDenzzz8Xf0c+
WPHs3LmTnn32WXrppZdo+/btZLFYbu9P3neffvopzZ07l1JTU2+/zseC39u6
dWt6/vnnxZ+zsrL0/irAzeD+Ua4xeuPGDb03BQAAnArcymDkJNGRyAiKSUmn
G44cAst5iow4SonpmYQjCVwBjw3bvXu3U/sudu3aRY8//jj17t1bxF1F1Wc+
ffq0cCt2rILwdYuX43GD7Az79+/H+LUi4NqOH3/8MTVv3px++OEHunbtWpEe
ym41b948unLlyh2v83s5Jl66dCk1adKEhg8fTpcvX5a1+cAE4LkHAMCswK2M
heX0CgrwqUWDlu6lyxbt45osp5fkf04Nhz8HgOJwZnzEeVPsVfz/4uq6F+dW
Cty3wv1qgYGBtHnzZsrOznbadro7PAaLx1Gyf7KHFnett+VWCnz8uRZ/hw4d
6N133xV/BgAAADwZuJWxyIhaTX7eNWnYij2UlGnDiXKu0aVzZ+nkiVMUFZ9E
lht5VCjCtfxOI/y8qELHyXQw/ir6roCh4f6qp59+WowTKsmD7HErhuP+9evX
i8/leUoxRymJvibOYfvggw/Etb8kSnIrBXbhrl27irGcPBYTAAAA8FTgVsai
eLeyUGTIJPKqVZXKli1LXg3L0gMPlKWyXp1o+pYTlJZ15/sjZnSm+lWfo4V7
oygdXVfAoMTFxdEzzzwj6gByvk9J2OtWDPvV9OnTRb+Ks/PC3JHJkydTly5d
xL6wp8/RXrdi2Kk4B2vRokWocQEAAMBjgVsZi+Lc6siSvuRV4yFqNWAmHb54
hXLy8uh67AH6tFEDqlDG65Zf5fwdL2VHrSd/79rUcdxair+CXHNgPPg607Nn
T1FLnWtY2IMat2K4v4rXwbXukpOTHdlctyYiIoKee+45+vXXX+2uo6jGrRi+
l3Ce28GDB1GrERTLW2+9Jc4tnjvB7PAzI65fevToUUpISMBvw2Twcyqu93Ps
2DE6efIk5gMBcCuDYcutcs5vocDGdahUqQ60JjKOsm4r1E26vGsS+datTGWe
H0l7zyXT30tdpnmdfama3yDadeoyYUQUcCZLliwReTtnz57V/Blr1qwRtQbZ
l+xFrVsx0dHRYmzg3r17PXJsII8FfP3112n+/PmqYlm1bsUxBnvywIED6cKF
C1o3F3gAGzduFHGoWWvNcAwVFhYmammWK1eOHn74YXrkkUfowQcfFPNKDBs2
TPTZI9ZyX7gG0NSpU8nb25seeughKl++vGj333+/qPHz7bffesSzA1AYuJWx
sOVWkbPepPpV7qPmfebRmUsFxtvknqNJAT5UqXRpmrzhEF3N/rvv6ty6EeRT
qwKNX3uQrmThmALnwc9huU6E1nsHx1Qvv/wyrVq1yq6xgApa3IqZOHGimA/X
E2N+dlhlLKAa1LoVk5KSIsZ4cu4c6msDW5i5TiD3wfPvrXLlymL8fqlSpQo1
jr9r1KhBGzZswBwGbgjHzFx7iV25TJkyRR5j/jd2a46rEVN7FnArY1G0W12i
BV0aU7X7StHQkP2UVKjuXwaFDfKjWuVKUcdJGyj+qlUtgNQI6tykPvn3W0in
EmzXXgNAC47ER+xlb775pup4X6tb8Vicf/3rX2K8mqdd37h/kWutq82D0uJW
zKRJk0RdC56bDABPgvsyXnzxRbr33nupdOnSRcbcSuN//+c//0mbNm1CLVM3
4vDhw2K+eltOZd3uueceaty4sYitzfw8AdwJ3MpYFOlWOadocIAXlcv/nRZd
4yLfrQbfcquGb0+nExfSrOoGZtPm4f5U55GOtPZgPKHrChiFDz/8kIKDg1XH
7VrdiuH6eFrW6c7w/nrhhRfEtV0tWt2K18l1LXjMFwCexKBBg6hSpUolepXS
OD5/7LHHEHu7Cfx8qmXLlnTXXXfZdXy5sWf36tWLLl68qPfmA0nArYxFUW6V
E7OFAnzqiN9oSW5VqvkntDcqiazfkXp4Efk2qE79F+yihHTPyzUBxoPHinEf
Es/tqzav2xG34lqE7HSc5+ApfP/99yLe0zL3lFa3Yl555RX66aef8DweeAwc
Q9nbn1FwfODo0aPFeFpgbKZNm0Y1a9ZUfYzZr7Zu3Wra/EJwJ3ArY1GUW1n+
es0+twqiPWeS73Arzscaw/lY7cbTwdgrmOsK6A7XluDYW0u/hiNuxXW61NbO
cHeCgoJoxowZmuI2R9yK61ksWLBAzFUMQEG6d+9OCxcuFGPozMLHH38sahmo
ibmVVqdOHRF7AePCzwE5l9RWDl1JYwP79u2LcdIeAtzKWBTlVhlq3KrrN3Tw
fFohfzq+sDc1rN6MgnefomvougJOYOnSpfT2228LT1IL5zxxDWYtc0454lac
c9WqVStN4+PcFb6fa8m1Yhxxq/Hjx4v5tOytrQ88i9DQUPGsw0zP8blugZqx
YtaNl+P5ERB7GRe+XzVr1kx1n5XSGjVq5FHP9TwZuJWxcNitWgVReHRyIbfK
jd9OAY3qUrugUIpNzrR7e3g8EcfP//73v9HQ7mgcRzRv3pzatGmjelmeA8nL
y0vUCVS7LOfxVK1aVfxf7bKvvvoqValSRWy73vtPVmvYsKGoZ9W2bVvVyzZo
0ECMcdJyjAMDA0UON/dP6r0P0IzX+PmI3tvg7MZ11rXE3Ere1ZNPPknt27fX
/XugFd14fkCup29vLl1R4wKNeO/h55SI+Z0L3MpYOOxWRY0JFMTTpMBGVPnx
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
pvF04FY6kpNERyIjKCYlnW44e3dbzlNkxFFKTM8kdzyScCvjM336dHruuedQ
J9DEwK3Mj15uFRUV5fI+G5ns3buXWrVqRS+++CJt27aNMjIyxHfjxvcxdi72
rPj4ePF35d8SEhJo+PDh5OXlRWPGjBGxuzOBWzkH9mZ25MaNG9O7774r4mSu
42R9jHlM4JIlSygtLe326/y74vi6U6dOIq4JDQ0V5wYwN3Ar/bCcXkEBPrVo
0NK9dNni3Pua5fSS/M+u4ZLPlgHcyvhwvB0dHU3Z2dlS1wu3kgfcyvxgTKBj
8PXvyy+/pKZNm9LChQtFXF3Ufau4fCuOt/h61qVLF3rppZdEPJabm+uU7YNb
OQ4fs44dO4p+yH379lFWVlaR77OVb6W49ObNm0Vs88EHH9DFixdlbDrQCbiV
fmRErSY/75o0bMUeSspUe1/Lo51DmtKMjTbcyfI7jfDzogodJ9PB+Ktu13cF
twK2gFvJA25lfuBW2mGv6t27N73xxhsidipuH9pTy4J9iseOPfHEEyIXyxl+
BbdyDH5+2LJlSxoxYoSYc6S4mKSkWha8bHJyMnXr1k0ck5iYGBdtNdAbuJV+
OORWeedpbGAjmvhjOCVlFb1sxIzOVL/qc7RwbxSlu9ltE24FbAG3kgfcyvzA
rbTB9yaOt7t27Upnz54t8V5lb51A/pw5c+aIPpITJ044fA+EW2nn6tWr1LZt
W5EXyONXS8LeOoGZmZki347PB1zjzAncSj8ccau8hC0U2LgnLT8QTRYbhyo7
aj35e9emjuPWUvyVovuwjQrcCtgCbiUPuJX5gVtpY9WqVaIeB9eBsydeUlOD
nT/v448/pn79+jlcsx1upQ2OPQYMGCDahQsX7FpGTQ12djUe/8l1L1Cz3XzA
rfTDEbc6v2MkNeo0hfafSSbbS16meZ19qZrfINp16jI5Z/S2HOBWwBZwK9fD
+QRcQ5qfyQ8cOFD8Fi0Wi7TfI9xKHnq5FfcH8Pg32d7uDOLi4uiZZ56hTZs2
2Z1vqnZ+K463X3nlFVq8eDFdv35d87bCrbSxZs0acY6q6TtUO78VX1f5POIY
HM82zAXcSj+0u1UO7QwKoM6TV9GZ5Mxi33lu3QjyqVWBxq89SFey3OeYwq2M
D29v69athevIBG7lOi5fvizm3qlatSqVL1+e7rvvPnrwwQfp4YcfFn/nf+N7
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
Kt9iEG08fdmu/quca+dp+5xP6LFqj1BQ/jEoMb9NI+7oVq6Ea8NVrFhRtVdx
47oHy5cvxz3K4PC8MZwnp/UY89hP4DhwK3MDt1IH1ynVOlbVEbcaOnQozZs3
T3WOFzAmcCv9KMqtokL6kPeAJXQk7hrFhI2kRrUeoVL1+9LW3y+JvpZCuVZ/
kfTrTPKtN5g2HLpQpDPkxm+ngEZ1qV1QKMWWUFvQmsOHD1NISAgtXrxYanvs
scec5lZ5Scdp3bpfKTk1nW4k/o8G+jak8mW70Y+/XLhjH1otQUlnI+i7sX2o
ZtVHqEwZfq7eNt93Y2zOJeYoI0aMuJ0/K3tfG7HxvCJqxwMqjZfr0qWLyOXR
+3ugFd0WLVpEtWvX1nR8ldy6oKAg8Tl6fxd3b/Xr18e+NHH78ssvRZ3VCRMm
6L4t7tCeeuop+uijj0TtUrXLtm7dmt5//32Rh6x22Y4dO4qcKz1iAM6ZxjgP
5wK30o8ixwTe/JPy/rxJN+karejtRzUeLEVtv1hDMSm3aikVzLVSiPox38le
n0oHzqTaGPMXT5MCG1Hlx4MoPCrZ7nGB3EfNz2K4jo3MVqlSJSfOb3XT6nNu
0p9XT9CYJt5UqUx7WrQ9mtJv/PVvOan02+5VNOTVOlTxgTJ/OZUSzzWkyRuO
0VUX5VvxOAR+jt+1a1fp+9qIjetxa+3T4OW4nhz2pXEbPxuuUKGCZrficYFt
2rShnj176v5d3L3xuMy2bdtK35dPP/00tWvXjrp37677PjBza9++PdWpU4c6
dOig+7a4Q/Py8hLz6rHnqF3W29tbPBd85513VC/L+VbsdXrct6KiouBWTgZu
pR/F1mC3/EaD/RtSufw4YlLYgb9i+sK5VrdIpSVNm9CHE8Mo7krR9actZzeQ
v3dt6jDB9nuKQsmpkd14XlhXzh18M/MszXuvET36UGuavHgDrQ4eQ/VqVhUx
W+nS1nFcS3qjzQtUofw/84+Ta/OteIx3cnKyLvtbS+OxJt9995145uXsz/74
44/F3LFa4m6e72rBggViLka99xGa7cZxhNo6Fkq7++67xT1L7+9ghsZjAnkO
udzcXKnr5fnKfvjhB/xOXdz4Psr9+KdPn9Z9W9yhvf322xQaGirGBKpdtn//
/mL+c66lrnZZfr7KfVYpKSnSvzNwPnAr/SjOrSynV5O/F9dfeIPWHIq7NS9T
UblW+ZzfMY4a1+1Oaw7E2Kixnke/zOoi8rG+D4+mDDc4tM7Mt8pJ+o1+2nGM
ktMyyfrT4ndPokZ1b82rc2cfVX5r2ZXGrthFcWkZlJv+Pwrwa0ADl+6hRIvr
3Mrd8q24T5PnrndFTYH169eLZ4BaYm8eE8ixIq5hxob7w7nuiBa34tr8yB9x
DqgTaG6Qb6UOrjPL4wG1zDXlSL5Vr169RJ7w9evXVS8LjAfcSj+Kc6vbte1a
jqL90bfG/+Wc30IBBXKt8hL2UtMm9ejtqZvo/NWcoldkOUVDArypXNdpFHk+
jdzhbuZMt7KcXkIBPn1o4//FUrblEkVu+pbeeawmlSsibm874EsKizxN1zNz
rNadQSfzY/WohOuU46KfhTu6lSvrBHIdCh4zpLZO4D333EOvvfYaxcbGumS7
gPPgesNNmjRR7c/333+/+K1wfwdwHNSyMDdwK3XMnTtX9CFdvHhR9bJa3Yr7
jPl+x3Np85+B+wO30g+73Kr0e/+/vfsAj6rK3weehN1VEEVARJEqJRBCCqLu
/ixgWxVclbq2tYCA6B8pigpEpYqAKCCIjd6kS0elBAgQQJDQAimEEEhCEkJ6
ISHv/35PMsmkMjPJzNyZvJ/nOc+uw0xyczO557xzz/kebDh6CTKLz7DW6kBI
glovlR61G/09W6Hjm9/ir4tJ5a6hivb/Fp73NsSHy7TvY6X7LlXNGnsHP/D4
46hTr17+vD/j8Vqrzuj6TB3UreOCEYu243JaGRXarfz5qiNmK2tbt26dmvtu
zthb5gPu3LkT166ZVWWf7ED+tmX/WKkHaWoddpkLKPOFOU6sOsxWzo3Zyjwy
Dn7mmWfUONhclmarwMBAPP/882reJjkHZiv7qXC9FS5j3tueaFTbFe69/LDr
zDmsH+KFN6atRXhCNA6tngz3Zg3RZfAcnIpJrqA2RTJWD/BGk9pvYZOW0cq5
s6U7Vtk7uMT4rdOzAzF/SyDiUzOQez0De+f0Q6tGt6Hf1HWIvppZBT+F6Zit
SpPf/YgRI3DXXXeZlK9kLqDUZ7JkPgbZh8y7eeKJJ9R+wDfKV/IeqFevHnbt
2sXsXIWYrZwbs5V5ZOwr+9YvX74caWlpZr3W0mwl98kmTpyIuLg4s15H+sVs
ZT8VZyttbJl5EZtm+6H53Q3gVqMG3LSxh6s2vpB5Um5u3TB54UFcSa04LeXG
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
yDHI9VTylKyrqVu3LurVq4e//e1vuO222wr/e8yYMbh8+bLVr72y7kTGk9Xl
Gl8VJANLvTkZt5nKkr2D5fcvtQflvSL7bFQ38vNLfXpzf35zs5WYOXOmqtV+
/vx5Sw6VdIrZyn4szlYFa62+XrkX8Td63ZWD6N2hFbzfmYvgmNTKHbANMVvp
n4yLDPV+iUjfZP3M4MGD0ahRI9SoUQMuLi5ltltuuUV9ZiI1zThPUD9kr9qH
HnpI7aNkTq10S7KV+O6771RWqI7rgWQ92wcffICLFy+a9TpLspXUaezSpQvX
uDkZZiv7qShbJUccwpwJYzDiky+wbGcwkjKKrqW5UVvh6/EGVhwIR4b8mpJD
sXDyBEyYvQ7hCSklagJmYfNIbzSv1xNrAy/AUW5dMVsREVWdDz/8UO1h6ubm
Vm6uMrS///3vau861jHTD9mfVuofmHPPSliaraQvkvlq+/btq1YZOyMjQ92z
k3Vt5s7TsyRbCdlnWP4+zc1ypF/MVvZTXrZKj5A6Ffei2zsj8PajTdDgFjdM
3xqIpOz830nUFj949JyJvSEJaq1V6Orh8Gh6u9ZnPoB5ZdQEvHJkHjxb34NB
P+5ATKpjrLpitiIiqhq//fYbPDw8TMpVhlazZk013pP5UWR/Uhdw1apVaq6A
OSzNVkLqvEu/dKPa485kx44deOmllxAaGmr2ay3NVvK9ZB3dyZMnzf6epE/M
VvZTdraKxqz7PNHtwyU4G5uGzaN80ayuCz5avrvgOYa1VisL11pF75qJ9vc2
1PpDV4xdFYArJW9O5ZzDOJ92aNDtCwSeT3SIva6YrYiIKk/6cqn7JveiTM1V
xvMDpR4dxwP2FRcXp+YDHjt2zOzXViZbSc0MmUcaGRlp9msdlcwHlD2ZTa0N
aMzSbCX+/e9/V9v1bc6I2cp+yspW6WeWw7vtq/m11TOD4efjjnpaHzdieUD+
c3Ij4OfbDl8Zr7XS8sfeGb3RsuEzWBpQdk3243P7o80992H2zmAkO8CtK2Yr
IqLKk3VTPj4+Zt2zMrRatWqpGtFXr16t8uN6/PHHMWHCBNYJNMHBgwfRp08f
i/JRZbKVvLZ3794WvdZRvfPOO1iwYIFF+agy2UpeO3/+fIteS/rDbGU/ZWWr
0GUD0HbwAhyNTEbEej94NK0Hl1YDse10NGTmb6m1VgXi9s+EZ8th2HD4IrLK
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
sjap6SLjkV9++eWGtSZMyVYytv7qq6/Uei4Z4/D975yYrewnLXSZlq0aY4iW
rWIrnBOYg5TUDO1v0PTfSfqZ/PmAY9YcQEKm4/0uma30Lz4+XvXHnCdORGRb
SUlJak2UfL61ffv2ctdf3ShbyVhv6dKl8PLyUntZ8T5icTIGkXmSnTp1UvcL
ZY1UeeOSG2UrWS/31ltvqTohMr7h2kbnxWxlT2m4GBmJK2lZyK3qCJGThMjz
F5GWmQ1HTCfMVkREROWTsfnixYvRoUMHdQ/r+PHjpcbrFWUrqYPXtWtXtb7q
999/r5Y1AU0h4xCZfynrozp27Ig5c+aoPUhKKi9bSQ6We1Vt27ZV+UwyVnUZ
21RXzFakR8xWREREFZM+8vLlyxg/fjyaN2+uxv6DBg1S96KklriM7yRbydoh
GdvNmzcP/fr1U+N8Dw8PzJo1S/U71aWvrQwZF+/atUutFZS9tbt166ZqKvr7
+6u69XLeJVtJDtuxYwfGjRun9q5q2LCh+h3ImMbU+o7k2JitSI+YrYiIiEwj
faXM55NxvqyZ6tmzpxr/169fH3fccQduvfVWuLu7q3Va33zzDfbt26fyAMd6
5pHzLPcG5T6g1PwYOnSoqndRr149dZ7lfMv/l3uBH3zwAVasWKEyruwRXF3G
M8RsRfrEbEVE5LzkM3+u76l6xrX1pU6C9ClS70LmqUkmYM39qmM4z9Jk3bGM
p2NiYtS9KcPjPM/VE7MV6RGzlf599913eOqpp3D27Fl7HwoRORhZB3ThwgWu
5ycip8NsRXrEbKV/8vmcXDNuVJeWiKik6nJtJ6Lqh9mK9IjZyjFUl98PERER
kSmYrUiPmK2IiIiIyNEwW5EeMVsRERERkaNhtiI9YrYiInJeL7zwAmbMmFHm
HqxERI6M2Yr0iNlK/3744Qd07dpV7fNBRGSOPXv2IDw8HNeuXbP3oRARVSlm
K9IjZiv9k/rJsv9kamqqvQ+FiBxMdbm2E1H1w2xFesRs5Riqy++HiIiIyBTM
VqRHzFZERERE5GiYrUiPmK2IiIiIyNEwW5EeMVsRETmvXr16Yfbs2awTSERO
h9mK9IjZSv9+/vlnvPjiiwgNDbX3oRCRg/ntt99w5swZ1gkkIqfDbEV6JNmq
Y8eOePTRR6tFa9q0KSZOnOhQ2SosLAw7duxAcnKyvQ+FiBxMdfncjIiqH2Yr
0iN5P+7atatatYiICIf7DJfjIyIiIqIizFakRzJmr26NiIiIiBwbsxURERER
EVHlMVsRERGRLb388sv44YcfkJSUZO9DISKqUsxWRGSJhQsXok+fPqqmBRGR
OdatW6fGG9nZ2fY+FCKiKsVsRUSWkPrJmzZt4v40RGQ2rjMlImfFbEXWdPbs
WWRkZNj7MJxWZGSkmlNjr79X47HRH3/8oY4nNze32HOkTvu5c+eQk5NT7HF/
f391z6tkbcS9e/ciJCSk1OfZ+/btQ3BwcKnHAwMDcfLkSWRlZRV7/PDhw+p6
lpmZWezxI0eO4NixY6Uel+uf/FvJ9+vx48fV9TE9Pb3Y46dOncLBgwdLPS6Z
U66paWlpxR6Xn0l+htTU1GKPh4eHq5+55ONyLvfs2YOUlJRij8s1W85dycej
o6Oxc+fOUjXxL1++jO3bt5eaeyX1/uV3VvJxycrbtm0rlZnl+23ZsqXU4/Lz
b968GYmJicUel9/Txo0bS+0rIO+P9evXl7nfgNzLSEhIKPW4PF9+jpJjcfm+
MTExpd7/W7duxcWLF0s9LnsqXbhwodR7VM6P1Oks+R6V+p3y+yn5+O7du9W+
biXfuwEBAer3X/I9Ku8H6VdLvkfl/VPWe1feh/K+K+s9Kq2s92hZ7115j8rf
QVnvUfneZb1H9+/fX+px+TuVn63ke1TOWVnvUXnvlvUevXTpUpnvUVuT7y/v
D94zI0dn7zEAlY3ZiqxB+vlXXnkFderUwZQpU3hvwwpkfNC1a1fcc889+OST
T9SY0Z5/t88++yyWLFlSalz2n//8Bz/99FOp8VT37t0xc+bMUu8NmWc4derU
UmPvV199FePHj0d8fHyxx9988034+fmpsbexAQMGYMSIEWrsbey9997DkCFD
1DjP2PDhw/HOO++oa6IxObd9+/ZVfZixzz//HP/73/9w/vz5Yo9/8cUXeOml
l1SeNDZt2jT06tVLjdWNzZ49Gy+88EKpPZjnzp2Lbt26qfGusaVLl+KZZ55R
n1sYW7t2LZ566imVP41JznjiiSdKPS5j3y5duqjxtzEZc8ueazLmNyb//cgj
j6g+wpiMrx9++OFSj8vvQx6Xcb8xeX/I40FBQSjpoYceUv1QSXI8kktLZqLH
HntM5cOSY+Qnn3xS5bGS2eTpp5/G8uXLS2UNOc/z588vlQVkb+zvvvuuVP6U
3+PXX39dKk/KGqJJkyaVyoevv/66er/ExcUVe7xfv374+OOPS71HBw0ahGHD
hqm8bEzet++++67KBcY++ugj9O/fX10DjMnfxRtvvFHqPSp/R3J9lt+dMblW
9+7du9R7VP5O5e+15PxfWS8lf98l37uLFi1S14OS79GVK1fi3//+t8p29iDX
IPlZWrdurfZPlPc+752Ro5L3s/ydNW7cWBdjACrCbEXWIH16vXr14OLigpo1
a+LLL78sNQ4hy8XGxqoxUK1atdQ5vuWWW9RYueTn67Yk14yyxim2eLys65W9
HpdjdKTHS55Tcx8XfPzGj/M9Wv7jtiKfU7Rv3x6urq6qGbJ8ycxOpHfyeYzx
GKB27dp2HwNQEWYrsgb53FY+Q//HP/6h/u7d3Nzw3HPPqc/O+d6qHJmX5ePj
g7/97W/q3EobN25cmXOsiIioyJw5c3DXXXep66bkq0aNGmHevHml7lkS6ZXM
hfb29i4cA8j7WO5FcwygH8xWZC1yf1rmLt10002Ff//yGYt8btijRw+MHDkS
CxYsUPP1ZQ7h0aNHrdrkM0uZk1NyjYQ5ZD2DfF4kfyPy92LtY5b5TjIWGDp0
qJr/d++996rzKedSzmmNGjXUPcKSc42IiKg0Gdt8++23aNiwYeFnU3IdlbnV
MkdW5hLLfE+p03Po0CGrX+Mdscl8XpnzLPO5Lb3nJ/cwZf2ejBNk3rC9fya9
tt9//71wDCDz/8oaA3z66ael5sqTfTFbkTXJOgVZC1C3bt3CfsyQs6TJ/Sxb
NbkGSZM5ivfdd5/KJNJ3llxHbkzWZci6fln/IHP05ZomX8OWxy3NcL6Mz6GM
BRYvXszPW4mIzCDjeqlf4uvrW+z+vz36JUdthv709ttvV+sbZ8yYUWbdF2Oy
BlP6LJnLJvcO//73v9ulP3XExjGAY2G2ImuT95KsQ5f13HIdNr422KsZ96Ey
515q2RlnLFkbL58VtWrVSvW9Ja9p9mxyPZUaDdKPcZ0AEZH5JF/J3PVvvvkG
Hh4exTIWm/n9qfSl8tmj1EiRWiXGfZPMq5A+q0GDBoU5wd7H7MjNMAaQe4cc
A+gTsxXZgmENs3xuJfXMZG6wzL2QNVj3338/OnToAE9PT6s2uR4Z1n+V7Bfk
XtbYsWNVXytzFHr27KnqQ5R1XZN5jS1atFBzG615vHJO/vWvf6n5k4MHD1b1
QAz1i/n3SURUedI3yWdpUqte5gp+8MEHqs6n1KaUNS3W7pccsbVt2xZ33HGH
uudUVn8qdeukJqTM+5D9JWSeiNyjKuu5UktY5oTY+2fSYytrDCD7Qsh9Ko4B
9I3ZimzNsGekoYaVrZp8viO5RPLJmDFj1Nx6qa1j+AxN/ldqTDdv3rxYP3Dn
nXeqGtkyB1/WhUl/IV/L1sfPvTaJiKzDXv2SIzbp/6TJHgHyWansDSA51LC2
WtrNN9+s6lnVr1+/WB8rc0Fk3wzZ80DmXkiutUd/6oiNYwDHwWxF1Y1xHyrv
d1kfKv2A4dpv6Bukn5A9ZmQvGbn287pGRERUxDiPyp5ycr/FcD/LuD+V2iGy
H5rUvzDkBCJnxWxF1Zlc3+U+lMxPvPXWWwv7AbmftXDhQlXHiIiIiCom/ams
AZI5IcZzP9q0aYOAgIBK1eglciTMVkRQGeqJJ54o7A8mTpzIvSKIiIjMJGNJ
yVOGuYGyJ6PM/SOqLpitiPLJ2tsmTZqodbryN0BERETmkftXw4cPV3UqpD6w
zKsnqk6YrYjySQ32p59+GrNmzVL7chEREZH5pA57x44dsWvXrgr3vCJyRsxW
REUOHjyoagkSERGR5aQ/5b62VB0xWxEVYe0iIiKiymN/StUVsxUREREREVHl
MVsRERERERFVHrMVERERERFR5TFbERERERERVR6zFRERERERUeUxWxERERER
EVUesxUREREREVHlMVsRERERERFVHrMVERERERFR5TFbERERERERVR6zFRER
ERERUeUxWxEREREREVUesxUREREREVHlMVsRERERERFVHrMVmS09FMtnTMDn
Yz7H2LHjMK6w+cFv9GiMHmXUxowtfI7f6HFYfTASyVnO9d7KjtiO0W/0xYC3
+uGdIUMxdNhwDB/2Lt596028+b/X8XpBGzDgfXz86VeYt24Pzl/NQG6evY+c
iIiKZGPfspn4/LPRWv821qhvk/7Lr3jfprWxhc/xw7ivVyMyLhlO1bslB+PH
kYPQf0A/DDDu2wZpfdsbRf3ap+NnYsXmAEQkZCDHqU4AkWWYrchc2VH7MGPC
RLzb5xE0uL0WXF1dVbu/Z1+MGD0So0aOxMhPxuCLiZPgN/hV3NXg9sLnfLR8
N+Iycu39I1Sp7JgjWDn/R0z1ex9d7mqAWupnbYO+73+GGd9+h5kzZuK72dr/
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
jour1qfkf16XLw+nVoyCu9pbxB3PPdcFd9S/FZO1a3Iir8lERGYzzlajVh5Q
9f8M+xTG//k9PFv/p1TN9ezs7KKxk6l9yw2fZ3nfcKN+04yzUdS3dR6D/bJ3
Y+FeX7kI2zEP7Vo0Un3ag8afXRZKxvL+WlbSfobWL3+L4Kjk4v+cE4JRPm1R
V8uri/aFIzFyK3zbN8+/Z1Vy3VbWZexdsxTf/bQSJy9dxdUQC/t+o3P2qvpM
siAxpQdjuHYsny7ScltartnHrtbfmTGuOLd2FNo11fpu11ex9vBFZBb8+4kF
/0Wb/3yJvSEJrHXlgJityHKl17cav2tOz/FF2zGLcDSmqFZD8LKX4DFhFf6K
Kchbhdegrlh6oPx9Fw19RJdRKxAeX3rOccSvftr1qV6FnyUavoaLq/acfQXP
MfH7m8bEOoF5OfhtnA+a18/fB2TovB24fCUYfj75n3N1GVXO/spZhmPVnjOi
xP3AvFRsHtcTzerXVPM/3pq1EReTsyrzwxARVVvFa1nsLl7LQhuX+3q5Y27A
UaQa+gytL3mp4/NYtS/YvL7lRs/LDrW4b7hRv2nG2SjWt5Xa30oLDHtn9EbL
htL/uGP27yeRbDyHTcsrw7Tjq+OS3+fVqFGjVHN1zb8ntkjLq3GntHPvXn79
e8PnlfIdLO77kYMAwzHfX5S5ov0nwPPewdh0NCr//pSZx55m7rgi6Qj6d5C6
wa4Y9OPvao9q5EbAz9cDI+duR3SqOXNnSC+YrchyFWeJ5HNBCDx9wWheXTo2
9PfG61PXIjwhM/+hwmuQ8TWvtMI+opw5hsFLh8Fd3bM34frq8krR50Mmfv+q
OB/Gzq3L/6yqcB+Q80cKr9/lzqPMLuo/e0xeiwtXM4v9c865pfBplz9Xok3f
6Qi6lMS6gEREFqiwTmDuFQQF/qldg9MK59VlR6zWrr8DsdIwv8zUvuVGzzMa
25vbN9yo3zTjbNywbwtR36tuwVw943kVBT+DV0E+eXkadgafR8zlGETHROe3
uDjExccgJjYemddyip37V3/cjosV5AuL+35N1rlf4d2uqZpP/8XaQCRmJmFB
R288XzCPz5JjV1/arHFFDnZN7o17G2gZ7zE/BJyLR/yBWfBqNQjrD0UW1uog
x8JsRZa70fU2r/h61oLP375YtrfoHr/xNaiCues36iOuHPoBHVrdra6viwIK
7suX8zVcXLpp17vzJT5bvMHceZOYnq2ifp8Kj+YNjPYBOY/5vT3R6OaK+s/Q
wjncpT+/jMaP//XE3QXz3uXztV5frMOFxMzSX4eIiCp0o72DS86ri/h1GNo9
PgF7g0vON79B33LD58VZ3DfYMlslBy9Dh4J1UF1Gl+yfrqg1TzKvrtP7cxFS
as5gie9mXKNxpdQzLH9WnMV9v5KAeW9r51Y7rjbvLELQ8fXw9WyB77cfNZpb
aN6xK2aOK9JCVuX/vK5tMH3LHix+swN6Tlyq5TvuD+aomK3IcqZnCZF8cgG8
3Dvjhx3BRdetKspWWRe2wFvVFHItqENeamJF0d4bncdgb3iCef2fSUw9H9nY
oB1Ls4J9QHpM3oALV1OwZZQ3mtd1gau8toza77lRW+Hr0bxg/v9exBf29dnY
/ZUvWt75Cjb+GYnwHVPg0aKBqvc6blUArrDuOhGRWW6UrYpLxoI+Xug8dC6C
DeuhqixbZVncN9gyWxmfr9ZvzcLJS8kF93CSEXflKrZ87oUW9bWfofUQ7Ai+
jFJ3onKjMKvPZ9h59ALSM05jaMG9um5jVpZZezzafxY+X7QHocfWWNb3F7i0
cwraa/2li+sDeO7x21Dvpck4EHHV6Bxn4Y/x3iYfe6l7liaNK7SMV5Cf8+vm
l792jBwDsxVZLku73nqXub9VSckRu9V+V3VcemBl4IWimjy5oRit5pJ3xcrD
55FRzv3viF9HqznVXUatLGfeeBo2j/RCM+l/un2BgPOJxY4lO2Ir+mh9j9Qq
H7nUH/GG+2Ymfn/TGJ+PsvYAyRe6ZRo8mhfsceXyMtYcilJzFNJCftX6pvz5
CWNLZaJsbJ/QBy3uqKn1DyPhH27o27JxdNlouGv955gVe5AgfWreNeyd8TZa
Su1dt+ewePd5mFxql4iIkBuxHj4yX6zU/lYlJWP3D0PQ8u466Pq5UQ4wtW8x
4XmW9Q2m9JumMurbtGwVGFK6r08LLqrf52JUMyJU1lh/tgqBASvh3S4/AxWu
KzIStWUC2jd/vWBOZQ6OzH0brRtJ/fjHsGjfuRL5JApfdWyPPtr5Dk+It6zv
L/zRTmOUloPquriqdVOlamfIU85tNuPYYdG44tJvWsYrmMvi0n1ysdqI5HiY
rch82YgKO43AbYsxoGWTgjWe98Pvx43485jsdX5CteDgYJz4cy/mTx6ApnfX
Vftdudw3CnvVZ17piAg7hZ2/TEGrpg3VNavf6OnYGRiI0xHxyCzYYz49JgKn
ju7ElFdboWFt7dr5WD9MX7tT+z6ncTk1E7lGF5+8zLOY4t0WDVzd4N53EvZG
JOLadUOua4XbpUbsyAVqXymY+P1NkZsejZDTQTi8Zy1GPtscd9TM3wNk+mrt
OI/nn4u//tyPfft+x+yRXdG4Qa2CXNUVczadQUrh98pD+KYpaNesgaqlO2n5
fiRmyDU8v+9u1eh2tX/Hgl3nkZwSh+MHt2LygJa4u66rqpH0zYaTSCqoC3hh
//fwaHm3+rnctHw16adtOBocibSsa7xeExGVKRdxESE4fmw/Fmv9VpOGdfLX
xL46FhsDDuJ4Qd924mSw1r+dwN6N87U+sCnqqv2uXDBCzXdPMbFvMacPMr1v
SMsxr9+sWDaiI7S+ftcKDH2mGepJ3+baBoO+WIS9hw/jRGgsMrIKckjycfTv
IHsq5j9n+u/BSLqWjQ39ffDE2GUIvpyOyB0z4NGioZpTMXTOOlxKyURernYe
9i9F+9ZN0GP8GkReyZ/HnpcXi6Vvt1e1093avIZ5u0KQqp2T7OQorB/nieZ3
dMWKgAiojxPN6vtLOzinP1rdVRsurd7CptPFa6wbzr9px37F8nFF+mkMLVjX
VVa+I8fCbEXmMuzpJ/euVV5SrWDP8TKba8FzCmrIyt6A6Scw0Let2ie+davW
6PBwB9S6rZZ6vvuQxQiOzZ+/EH1gFjq0vhturVujdYcO6NChFmrdIl/zASze
F1rqXntedix++/lTtLinAdwK6/hox9mqKyasCERCqqHOqmnf3xTZERvg275F
/vlwLTofZZ4LV1e0vq8rPv1mNUJik5FT8s8sLw+xp37Dp6+0QIPbimoSyTns
OnACAs4lQOJTlswB8WxReF5q3lwTDwxZhFB13NnYPrU3WjSomf+zeXqhVq1b
tP7pI+w2ay9kIqLqROqd+6BZneL9ltReLbtvM+4DZR5XMFK0jGFS32JuH2Ri
3yDM7TfLPRvS17fP7+vbaF/rEe1rddH6k9ukP9Eee7fYPRzt+I6sxItazpB7
RPKZ3mvP3YGG9bTzsl3WAeQZ/QzNi/0MNbSv9f6s1YhJKn5vLe/6VexdPAkt
G8vev0V1+dzufwe/HL6EdKM5cyb3/WXIuZC/R1Xnz1YgvIz5h8XPfwXHXslx
xZE5vdH6rqHYdrT0HmbkWJityHx5uJ6bi1wL2vXCja3y1L4YRY9fL3redeOb
UXlGj183es31cvefkv1HcjNSEBMVidCQEIRHxiI165rae6vYz2DK97fG+ZCf
o8L9RfKPLSU+BpFhoQgJD0dsUiquyc9c1vcsOPbrRsetzkGpn+0671kREVUg
z7gvMKsZ+iRT+xZL+iBT+gZY1G+W+/1yix+j8XGW6sdkb8uMeJw8vBPrflmO
BXMXY8+pS0grcQ+u+M8QifjUTOSU8zNLzZDc7OL9eYbMvyjj6ab1/WXJQWzk
ecSlZd5gP+UbHXtlxhVx+LGjJ/qOX4OIK6xB5eiYrYiIiIioShj2n8rL4+d5
ZUpHsP9mrF29A2EJqSrPJZ9cDm/3F7EwIKTMWofkWCRbBQYGMlsREREREVlR
dtga+Basq8ivbXgVC//rjUaDvsfRSyn2PjyqAsbZ6tixY8xWRERERETWEBeA
Pp4t1bq0MRv8sW/pELRr+gKW7A1jTV8nwWxFRERERGQLWQhcMhKt7qlbUAOs
DSavPozECvZIJsfCbEVEREREZBtSdyM7IwWJVxKQmJFdbi0PckzMVkRERERE
RJUn2ergwYM4cuQIsxUREREREZGFLl68iEOHDqlsFRQUhJMnTzJbERERERER
menSpUs4fPgwjh49WpitgoODma2IiIiIiIjMINnKsLfV8ePHcerUKWYrIiIi
IiIiM0VHRxdbayXZ6syZM8xWREREREREZpBsJfesjNdaMVsRERERERGZJzY2
ttg9K5kPePbsWWYrIiIiIiIiM1y+fFmtszK+ZyXZSu5jSeaSGheyHkvqXUit
dtkL68CBA6rt37+/VNu3bx8bGxsbGxsbGxsbG5tDt5I5x5CBJA9JLpJa65KR
ZH2VYR6gca4y3LMKCQlR97GM85W8xpCx5OtIk6/JxsbGxsbGxsbGxsbm7M2Q
gSQPSZNsJDlJcpVkJkOuMswFlHtWkqtCQ0PVY/Jv8hxDxpLXSZOvYchbbGxs
bGxsbGxsbGxs1aEZcpAhTxnuVcl9KeP7VYZcZchW8pj8myFjyfOlGbIWGxsb
GxsbGxsbGxtbdWuSh4zzlOFeVcl5gIZcFRYWph6TvGXIWIacZchabGxsbGxs
bGxsbGxs1a0ZMpFxnjLcqzLkKslUhlwlTR6TfzNkLEPOKqsZshcbGxsbGxsb
GxsbG5sztfIykCEjGTKT8b0q41wVHh5e+JjhOcZZq6Jm+B5sbGxsbGxsbGxs
bGyO2kzJPiXzVMlMZWj/H4WoRUE=
     "], {{0, 452}, {855, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVlwdUU8kax+fem15ogQhICb0JUgQCSAk9FEE62AhJCKGEkAKCXRFXcC2I
iGBFV0AUXAsgi4pYsC2CvS/IoqKuiwUbKu8GHmH3vfPeO+87Z+b+8uWbb76Z
O3PO/xqlZEelwgAAKQHtojh5LImEkx+thv6IFUmFAhGfxxbJ+AK+hJkCoc6b
FLQDlJscsTgTRqOyRDJJVJAvIyExiYF/AhCgAbSANWBwuFIxKzIyTBE98fy7
fbgNFAnBDVtFrn///7+aOo8v5QIARaKcwpNys1A+hrY2rlgiAwARo36TPJlY
wWUoa0rQAlGuVbBgnNsUnDLO3WMxMVF+KP8OAIHC4UgEAJCHUD8jlytA81AU
e2Iv4glFKPug7MVN4/BQXo7ytKysbAUfRNky5S95BH/LmaLMyeEIlDy+ljEj
+Aul4kxO/v+5Hf/bsjLlE3OYoI2SJgmOUsyn2LeM7FAli1JmRUywkDdek4LT
5MGxE8yV+iVNMI/jH6ocmzkrbIJThYFsZR4ZO2aCJdlRyvx8aUD0BHMkk3PJ
M2JZynn5bGXOgrSY+AnOFcbNmmBpRnToZIyf0i+RRylrTpUEKteYJf3LuoRs
ZTyXM1mPLC0meLLOBGUNPL5/gNIvilXGi2W+yvzizEhlPD8zSOmX5kYrx8rQ
wzY5NlK5P+mckMgJBkIQDjiAK+MvlCkK9ssW50uEgjQZg4XeGD6DLeLaTWM4
2jswAVDcv/HX+44+dq8g+uVJX047AG7FqFMw6eOg5+DEUwBoHyZ9Jm/Ro7ER
gJPdXLkkd9yHUXRYQAKqQBPoAAP0/FgCW+AIXIAH8AEBIAREgBiQCOYDLkgD
WUAC8sBisAIUgRKwEWwBlWAX2AtqwSFwBDSDNnAGXABXQDe4BR6AXjAAXoIh
8AGMQBCEh6gQDdKBDCEzyAZyhJiQFxQAhUFRUCKUDAkgESSHFkOroBKoFKqE
9kB10M/QCegMdAnqge5BfdAg9Bb6AiMwBdaE9WFzeDrMhFlwKBwDz4MFcA5c
ABfC6+EKuBo+CDfBZ+Ar8C24F34JDyMAISN0xAixRZiIHxKBJCGpiARZihQj
5Ug10oC0Ip3IDaQXeYV8xuAwNAwDY4vxwARjYjFcTA5mKWYdphJTi2nCnMPc
wPRhhjDfsVSsHtYG645lYxOwAmwetghbjt2PPY49j72FHcB+wOFwdJwFzhUX
jEvEpeMW4dbhduAace24Hlw/bhiPx+vgbfCe+Ag8By/DF+G34Q/iT+Ov4wfw
nwhkgiHBkRBISCKICCsJ5YQDhFOE64RnhBGiGtGM6E6MIPKI+cQNxH3EVuI1
4gBxhKROsiB5kmJI6aQVpApSA+k86SHpHZlMNia7kWeTheTl5AryYfJFch/5
M0WDYk3xo8ylyCnrKTWUdso9yjsqlWpO9aEmUWXU9dQ66lnqY+onFZqKnQpb
haeyTKVKpUnlusprVaKqmSpLdb5qgWq56lHVa6qv1Ihq5mp+ahy1pWpVaifU
7qgNq9PUHdQj1LPU16kfUL+k/lwDr2GuEaDB0yjU2KtxVqOfhtBMaH40Lm0V
bR/tPG1AE6dpocnWTNcs0Tyk2aU5pKWhNUMrTmuhVpXWSa1eOkI3p7PpmfQN
9CP02/QvU/SnsKbwp6yd0jDl+pSP2lO1fbT52sXajdq3tL/oMHQCdDJ0Nuk0
6zzSxeha687WzdPdqXte99VUzakeU7lTi6cemXpfD9az1ovSW6S3V++q3rC+
gX6Qvlh/m/5Z/VcGdAMfg3SDMoNTBoOGNEMvQ6FhmeFpwxcMLQaLkcmoYJxj
DBnpGQUbyY32GHUZjRhbGMcarzRuNH5kQjJhmqSalJl0mAyZGpqGmy42rTe9
b0Y0Y5qlmW016zT7aG5hHm++xrzZ/LmFtgXbosCi3uKhJdXS2zLHstryphXO
immVYbXDqtsatna2TrOusr5mA9u42Ahtdtj0TMNOc5smmlY97Y4txZZlm2tb
b9tnR7cLs1tp12z3errp9KTpm6Z3Tv9u72yfab/P/oGDhkOIw0qHVoe3jtaO
XMcqx5tOVKdAp2VOLU5vZtjM4M/YOeOuM8053HmNc4fzNxdXF4lLg8ugq6lr
sut21ztMTWYkcx3zohvWzddtmVub22d3F3eZ+xH3Pz1sPTI8Dng8n2kxkz9z
38x+T2NPjucez14vhley126vXm8jb453tfcTHxMfns9+n2csK1Y66yDrta+9
r8T3uO9HP3e/JX7t/oh/kH+xf1eARkBsQGXA40DjQEFgfeBQkHPQoqD2YGxw
aPCm4DtsfTaXXcceCnENWRJyLpQSGh1aGfokzDpMEtYaDoeHhG8OfzjLbJZo
VnMEiGBHbI54FGkRmRP5y2zc7MjZVbOfRjlELY7qjKZFL4g+EP0hxjdmQ8yD
WMtYeWxHnGrc3Li6uI/x/vGl8b0J0xOWJFxJ1E0UJrYk4ZPikvYnDc8JmLNl
zsBc57lFc2/Ps5i3cN6l+brzM+efXKC6gLPgaDI2OT75QPJXTgSnmjOcwk7Z
njLE9eNu5b7k+fDKeIN8T34p/1mqZ2pp6nOBp2CzYDDNO6087ZXQT1gpfJMe
nL4r/WNGREZNxmhmfGZjFiErOeuESEOUITqXbZC9MLtHbCMuEvfmuOdsyRmS
hEr2SyHpPGmLTBMVOlfllvLV8r5cr9yq3E95cXlHF6ovFC28mm+dvzb/WUFg
wU+LMIu4izoWGy1esbhvCWvJnqXQ0pSlHctMlhUuG1getLx2BWlFxopfV9qv
LF35flX8qtZC/cLlhf2rg1bXF6kUSYrurPFYs+sHzA/CH7rWOq3dtvZ7Ma/4
col9SXnJ13XcdZd/dPix4sfR9anruza4bNi5EbdRtPH2Ju9NtaXqpQWl/ZvD
NzeVMcqKy95vWbDlUvmM8l1bSVvlW3srwipatplu27jta2Va5a0q36rG7Xrb
127/uIO34/pOn50Nu/R3lez6slu4++6eoD1N1ebV5Xtxe3P3Pt0Xt6/zJ+ZP
dft195fs/1Yjqumtjao9V+daV3dA78CGerheXj94cO7B7kP+h1oabBv2NNIb
Sw6Dw/LDL35O/vn2kdAjHUeZRxuOmR3bfpx2vLgJaspvGmpOa+5tSWzpORFy
oqPVo/X4L3a/1LQZtVWd1Dq54RTpVOGp0dMFp4fbxe2vzgjO9Hcs6HhwNuHs
zXOzz3WdDz1/8ULghbOdrM7TFz0vtl1yv3TiMvNy8xWXK01Xna8e/9X51+Nd
Ll1N11yvtXS7dbf2zOw5dd37+pkb/jcu3GTfvHJr1q2e27G3796Ze6f3Lu/u
83uZ997cz70/8mD5Q+zD4kdqj8of6z2u/s3qt8Zel96Tff59V59EP3nQz+1/
+bv0968DhU+pT8ufGT6re+74vG0wcLD7xZwXAy/FL0deFf2h/sf215avj/3p
8+fVoYShgTeSN6Nv173TeVfzfsb7juHI4ccfsj6MfCz+pPOp9jPzc+eX+C/P
RvK+4r9WfLP61vo99PvD0azRUTFHwhmTAgja4NRUAN7WAEBNRLUDqptJc8b1
8ZhB45p+jMB/4nENPWYuANT4oJ8aywEIQzXKTrSZoUxBnwoZFOMDYCcnZfun
SVOdHMdzUVDViP00OvpOHwB8KwDfJKOjIztGR7/tQ4u9B0B7zrguVxgO1e+7
x75eLlkYgH+1fwByJRMf
       "], "RGB", "XYZ"], Interleaving -> True, 
     MetaInformation -> 
     Association[
      "Comments" -> 
       Association[
        "XML:com.adobe.xmp" -> 
         "<x:xmpmeta xmlns:x=adobe:ns:meta/ x:xmptk=XMP Core 5.4.0> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#><rdf:Description \
rdf:about=xmlns:exif=http://ns.adobe.com/exif/1.0/xmlns:tiff=http://ns.adobe.\
com/tiff/1.0/> <exif:PixelYDimension>452</exif:PixelYDimension> \
<exif:PixelXDimension>855</exif:PixelXDimension> \
<tiff:Orientation>1</tiff:Orientation></rdf:Description> \
</rdf:RDF></x:xmpmeta>"]]],
    Selectable->False], 
   InsetBox["", {119.98267415808598, 93.64003459364079}, {Left, Baseline},
    Alignment->{Left, Top}], 
   InsetBox["", {106.75217371115471, 94.16607849738222}, {Left, Baseline},
    Alignment->{Left, Top}], InsetBox[
    StyleBox[Cell["",
      CellBaseline->Baseline,
      TextAlignment->Left],
     Background->GrayLevel[1.]], {105.20381806995346, 247.8552639216187}, {
    Left, Baseline},
    Alignment->{Left, Top}], 
   InsetBox["", {103.74479063882151, 244.00918821030143}, {Left, Baseline},
    Alignment->{Left, Top}], InsetBox[
    StyleBox[
     TagBox["",
      "RawBoxes"],
     Background->GrayLevel[1.]], {112.9058948492623, 170.84938416354197}, {
    Left, Baseline},
    Alignment->{Left, Top}]},
  DefaultBaseStyle->"ImageGraphics",
  ImagePadding->{{0., 0.}, {0., 0.}},
  ImageSize->{672.9921875, Automatic},
  ImageSizeRaw->{855, 452},
  PlotRange->{{0., 855.}, {0., 452.}},
  PlotRangePadding->Automatic]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.755184748707856*^9, 3.75518481549229*^9}, {
  3.755184858755072*^9, 3.755184921751588*^9}, {3.7551849519682083`*^9, 
  3.755184962987727*^9}, {3.755185210596285*^9, 3.75518521966365*^9}}],

Cell[TextData[{
 "This diagram illustrates a single qubit error correcting circuit. The input \
consists of a direct product of an encoded qubit ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", "\[Psi]"}], TraditionalForm]]],
 "\[RightAngleBracket]",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", "\[CircleTimes]"}], TraditionalForm]]],
 "\[RightBracketingBar]",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]", "\[RightAngleBracket]"}], " ", "\[CircleTimes]"}], 
     "\[RightBracketingBar]"}], 
    FormBox[
     RowBox[{
      RowBox[{"\[Psi]", "\[RightAngleBracket]"}], " "}],
     TraditionalForm]}], TraditionalForm]]],
 ", with a pair of ancillary qubits in state ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"\[RightBracketingBar]", "0"}], " ", 
         "\[RightAngleBracket]"}], "\[CircleTimes]"}], 
       "\[RightBracketingBar]"}], "0"}], "\[RightAngleBracket]"}], "."}], 
   TraditionalForm]]],
 "  The error box contains a Pauli-X gate which induces a flip error in one \
of the input qubits. The gates within the dotted line represent the syndrome \
measurements. The remaining CNOT and Toffoli gates represent error recovery \
of the input. "
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.755184427530991*^9, 3.755184681176059*^9}, {
  3.755185012267721*^9, 3.755185177424676*^9}, {3.755185223666773*^9, 
  3.755185267712008*^9}, {3.755187048968038*^9, 3.755187050890738*^9}, {
  3.7551870819636793`*^9, 3.755187092459662*^9}, {3.75985394438341*^9, 
  3.759853976369173*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.717288816998701*^9, 3.7172888342114077`*^9}, {
   3.717290655064808*^9, 3.7172907025014563`*^9}, {3.717291825221302*^9, 
   3.717291825974765*^9}, {3.71729197039258*^9, 3.717291972190946*^9}, {
   3.717292107496685*^9, 3.717292113042138*^9}, 3.717292209447484*^9, {
   3.717292465871908*^9, 3.717292470922391*^9}, {3.717292529473386*^9, 
   3.71729252990044*^9}, {3.717292985512982*^9, 3.717292985782605*^9}, {
   3.7173411626304398`*^9, 3.717341165881467*^9}, {3.7173412270263023`*^9, 
   3.7173412273970757`*^9}, {3.7174293285381403`*^9, 3.717429334410548*^9}, {
   3.755185296181872*^9, 3.7551853635460052`*^9}, {3.755187104148611*^9, 
   3.7551872452357683`*^9}, {3.755187283036993*^9, 3.75518730603126*^9}, {
   3.755188906817325*^9, 3.755188922117343*^9}, {3.755188998415567*^9, 
   3.755189004299304*^9}, 3.755189418115286*^9, 3.755197777246499*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{
          RowBox[{
          "we", " ", "define", " ", "the", " ", "bitamp", " ", "function", 
           " ", "which", " ", "maps", " ", "a", " ", "5"}], "-", 
          RowBox[{"qubit", " ", "ket"}]}], " ", "|", "k"}], 
        "\[RightAngleBracket]"}], "5"], " ", "into", " ", "its", " ", 
      "binary", " ", "form"}], " ", "\[VerticalSeparator]", 
     RowBox[{
      SubscriptBox["k", "5"], 
      SubscriptBox["k", "4"], 
      SubscriptBox["k", "3"], 
      SubscriptBox["k", "2"], 
      SubscriptBox["k", "1"]}]}], "\[RightAngleBracket]"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"bitmap", "[", "i_", "]"}], ":=", 
    RowBox[{"IntegerDigits", "[", 
     RowBox[{"i", ",", "2", ",", "5"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "for", " ", "example", " ", "these", " ", "commands", " ", "result", " ", 
    "in"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"bitmap", "[", "0", "]"}], "\[IndentingNewLine]", 
 RowBox[{"bitmap", "[", "31", "]"}]}], "Input",
 CellChangeTimes->{{3.717288816998701*^9, 3.7172888342114077`*^9}, {
   3.717290655064808*^9, 3.7172907025014563`*^9}, {3.717291825221302*^9, 
   3.717291825974765*^9}, {3.71729197039258*^9, 3.717291972190946*^9}, {
   3.717292107496685*^9, 3.717292113042138*^9}, 3.717292209447484*^9, {
   3.717292465871908*^9, 3.717292470922391*^9}, {3.717292529473386*^9, 
   3.71729252990044*^9}, {3.717292985512982*^9, 3.717292985782605*^9}, {
   3.7173411626304398`*^9, 3.717341165881467*^9}, {3.7173412270263023`*^9, 
   3.7173412273970757`*^9}, {3.7174293285381403`*^9, 3.717429334410548*^9}, {
   3.755185296181872*^9, 3.7551853635460052`*^9}, {3.755187104148611*^9, 
   3.7551872452357683`*^9}, {3.755187283036993*^9, 3.75518730603126*^9}, {
   3.755188906817325*^9, 3.755188922117343*^9}, {3.755188998415567*^9, 
   3.755189004299304*^9}, 3.755189418115286*^9, {3.755197777246499*^9, 
   3.755197802103374*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.7611573077079*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.761157307850915*^9}]
}, Closed]],

Cell[TextData[{
 "We also define the various CNOT (or conditional Pauli-X gates) ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", 
    RowBox[{"i", " ", "j"}]], TraditionalForm]]],
 ". Here subscript ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 " represent the control qubit and j"
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.755188714272583*^9, 3.755188819786117*^9}, 
   3.75519667425489*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Pauli", "-", 
    RowBox[{"X", " ", "gate", " ", "mappings"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"X", "[", "0", "]"}], "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"X", "[", "1", "]"}], "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Conditional", " ", "Pauli"}], "-", 
     RowBox[{"X", " ", 
      RowBox[{"(", "CNOT", ")"}], " ", "gates"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X35gate", "[", "in_", "]"}], ":=", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"in", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}], ",", "in", ",", 
      RowBox[{
       RowBox[{"in", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "==", "1"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"in", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
        RowBox[{"in", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"in", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"in", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", 
        RowBox[{"in", "[", 
         RowBox[{"[", "5", "]"}], "]"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X25gate", "[", "in_", "]"}], ":=", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"in", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "0"}], ",", "in", ",", 
      RowBox[{
       RowBox[{"in", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "==", "1"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"in", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
        RowBox[{"in", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"in", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"in", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", 
        RowBox[{"in", "[", 
         RowBox[{"[", "5", "]"}], "]"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X24gate", "[", "in_", "]"}], ":=", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"in", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "0"}], ",", "in", ",", 
      RowBox[{
       RowBox[{"in", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "==", "1"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"in", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"X", "[", 
         RowBox[{"in", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
        RowBox[{"in", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"in", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", 
        RowBox[{"in", "[", 
         RowBox[{"[", "5", "]"}], "]"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X14gate", "[", "in_", "]"}], ":=", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"in", "[", 
        RowBox[{"[", "5", "]"}], "]"}], "\[Equal]", "0"}], ",", "in", ",", 
      RowBox[{
       RowBox[{"in", "[", 
        RowBox[{"[", "5", "]"}], "]"}], "==", "1"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"in", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"X", "[", 
         RowBox[{"in", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
        RowBox[{"in", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"in", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", 
        RowBox[{"in", "[", 
         RowBox[{"[", "5", "]"}], "]"}]}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.717288849874586*^9, 3.7172889514051*^9}, {
  3.7172897694334173`*^9, 3.7172898211769543`*^9}, {3.717289880797332*^9, 
  3.7172899084254513`*^9}, {3.71729098736342*^9, 3.71729100289826*^9}, {
  3.717291118235838*^9, 3.7172911352781353`*^9}, {3.717291166168344*^9, 
  3.717291169408168*^9}, {3.71733951841728*^9, 3.717339530994576*^9}, {
  3.7173395726197777`*^9, 3.717339712948814*^9}, {3.7173397466733723`*^9, 
  3.717339808593835*^9}, {3.755189420577013*^9, 3.755189484993596*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"For", " ", "example"}], ",", " ", 
    RowBox[{
     RowBox[{"let", "'"}], "s", " ", "check", " ", "the", " ", "truth", " ", 
     "Table", " ", "for", " ", "X14", " ", 
     RowBox[{"gate", ".", " ", "The"}], " ", "first", " ", "column", " ", 
     "are", " ", "the", " ", "inputs"}], ",", " ", 
    RowBox[{
    "the", " ", "second", " ", "column", " ", "represents", " ", "the", " ", 
     "output"}]}], "  ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"truthX13", "=", 
   RowBox[{"Grid", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bitmap", "[", "i", "]"}], ",", 
        RowBox[{"X14gate", "[", 
         RowBox[{"bitmap", "[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", "31"}], "}"}]}], "]"}], " ", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.717290392525938*^9, 3.717290453029297*^9}, {
  3.71729051197536*^9, 3.7172905436748753`*^9}, {3.7172905889542*^9, 
  3.717290605882807*^9}, {3.717291188576795*^9, 3.7172911940213737`*^9}, {
  3.717291248907071*^9, 3.717291539875473*^9}, {3.717291635662105*^9, 
  3.717291651624445*^9}, {3.717292566392871*^9, 3.717292568968605*^9}, {
  3.717292968921476*^9, 3.71729299605324*^9}, {3.717341241708577*^9, 
  3.717341255782547*^9}, {3.755189594186593*^9, 3.7551896463861103`*^9}, {
  3.7551896777515087`*^9, 3.755189698284561*^9}, {3.755189733699733*^9, 
  3.755189823181224*^9}, {3.755189877926783*^9, 3.755189896206367*^9}, {
  3.75518993407332*^9, 3.755189949058283*^9}, {3.7551899849137897`*^9, 
  3.755190021293939*^9}, {3.755190228285551*^9, 3.755190242674095*^9}, {
  3.75519605866016*^9, 3.755196062709311*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1", ",", "0"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1", ",", "0"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1", ",", "0"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1", ",", "0"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "0"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "0"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "1", ",", "0"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "1", ",", "0"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "1", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "0", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "1", ",", "0"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "1", ",", "0"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "1", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "1", ",", "0"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "1", ",", "0"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "1", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "0", ",", "0"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "0", ",", "0"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "0", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "0"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "0"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "1", ",", "1"}], "}"}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.761157308047686*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Syndrome", "Subsection",
 CellChangeTimes->{{3.7551902804190483`*^9, 3.75519028321905*^9}}],

Cell["\<\
Using the above gates we construct the syndrome portion of the circuit. For a \
given 5-qubit input the syndrome gives us the following output\
\>", "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.755190290510195*^9, 3.75519030673176*^9}, {
  3.7551904311802387`*^9, 3.755190478408133*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"syndrome", "[", "input_", "]"}], ":=", 
  RowBox[{"X14gate", "[", 
   RowBox[{"X24gate", "[", 
    RowBox[{"X25gate", "[", 
     RowBox[{"X35gate", "[", "input", "]"}], "]"}], "]"}], "]"}]}]], "Input"],

Cell["Some examples of the syndrome outputs are", "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7551905050718*^9, 3.755190636469821*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"syndrome", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"syndrome", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"syndrome", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.717340363555234*^9, 3.717340409560525*^9}, 
   3.755190680979025*^9, 3.755190727376638*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.761157308274016*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.761157308400592*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.761157308535614*^9}]
}, Closed]],

Cell["\<\
Note that the first three qubit values are unchanged following a syndrome \
evaluations\
\>", "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7551907367225933`*^9, 3.755190773143289*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Error Recovery", "Subsection",
 CellChangeTimes->{{3.755190794908287*^9, 3.7551907997333727`*^9}}],

Cell["\<\
To construct the error recovery circuit we need to define two additional CNOT \
gates and  a Toffoli gate. \
\>", "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.755195478626972*^9, 3.7551955364060993`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"3", " ", "bit", " ", "toffli", " ", 
     RowBox[{"toff", "[", "in_", "]"}]}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"in", "[", 
         RowBox[{"[", "1", "]"}], "]"}], " ", 
        RowBox[{"in", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "\[Equal]", "1"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"in", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"in", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"X", "[", 
         RowBox[{"in", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}], ",", "in"}], 
     "]"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.717344002558236*^9, 3.71734401230726*^9}, {
   3.717344105841607*^9, 3.717344151878023*^9}, {3.7173443089994173`*^9, 
   3.717344366419114*^9}, {3.717344398235106*^9, 3.717344421242371*^9}, 
   3.717344526343038*^9, {3.717344559890678*^9, 3.71734457632685*^9}, {
   3.71734463105978*^9, 3.7173446534811287`*^9}, {3.717345770843499*^9, 
   3.717345795290114*^9}, {3.71734585689725*^9, 3.717345876506266*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"toff54to321", "[", "in_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"in", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "1"}], " ", "&&", " ", 
      RowBox[{
       RowBox[{"in", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "1"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"in", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"in", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"X", "[", 
        RowBox[{"in", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", 
       RowBox[{"X", "[", 
        RowBox[{"in", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "]"}], ",", 
       RowBox[{"X", "[", 
        RowBox[{"in", "[", 
         RowBox[{"[", "5", "]"}], "]"}], "]"}]}], "}"}], ",", "in"}], "]"}]}],
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"toff54to2", "[", "in_", "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"in", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"in", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "1"}]}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"in", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"in", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"in", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"X", "[", 
         RowBox[{"in", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "]"}], ",", 
        RowBox[{"in", "[", 
         RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", "in"}], "]"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"toff54to3", "[", "in_", "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"in", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "1"}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"in", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}]}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"in", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"in", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"X", "[", 
         RowBox[{"in", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", 
        RowBox[{"in", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", 
        RowBox[{"in", "[", 
         RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", "in"}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X53", "[", "in_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"in", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "1"}], " ", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"in", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"in", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"X", "[", 
       RowBox[{"in", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", 
      RowBox[{"in", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", 
      RowBox[{"in", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", "in"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X41", "[", "in_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"in", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "1"}], " ", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"in", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"in", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"in", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", 
      RowBox[{"in", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", 
      RowBox[{"X", "[", 
       RowBox[{"in", "[", 
        RowBox[{"[", "5", "]"}], "]"}], "]"}]}], "}"}], ",", "in"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.717345948613064*^9, 3.717346065172612*^9}, {
   3.717346159787202*^9, 3.7173462098064632`*^9}, {3.7173462438044233`*^9, 
   3.717346250519681*^9}, {3.717346305772409*^9, 3.717346343841316*^9}, {
   3.717347202236269*^9, 3.7173472753215714`*^9}, {3.717347371979095*^9, 
   3.7173474287579603`*^9}, 3.717347597478322*^9, {3.717350242652096*^9, 
   3.717350246611259*^9}, {3.7173502891599083`*^9, 3.71735029787805*^9}, {
   3.7173503399208603`*^9, 3.717350351631995*^9}, {3.717350402781796*^9, 
   3.7173504331967287`*^9}, {3.717350464404522*^9, 3.717350464956423*^9}, {
   3.717350644636024*^9, 3.717350648795539*^9}, {3.7173506864842653`*^9, 
   3.717350722293332*^9}, {3.717350804791428*^9, 3.717350821396511*^9}, {
   3.717369741118842*^9, 3.717369743823544*^9}, {3.7173697764686737`*^9, 
   3.717369803387944*^9}, {3.71736991830926*^9, 3.7173699873539743`*^9}, {
   3.717370022971901*^9, 3.717370104009982*^9}}],

Cell["\<\
Finally we construct the series of gates, shown above, given by the QEC \
command defined below,\
\>", "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.755195585952828*^9, 3.755195685017043*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"QECC", "[", "input_", "]"}], ":=", 
  RowBox[{"toff54to321", "[", 
   RowBox[{"X53", "[", 
    RowBox[{"X41", "[", 
     RowBox[{"syndrome", "[", "input", "]"}], "]"}], "]"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.717371828277555*^9, 3.71737198401007*^9}, {
   3.755195570990472*^9, 3.7551955804993963`*^9}, {3.755195690275543*^9, 
   3.7551957044621277`*^9}, 3.755196138917542*^9}],

Cell[TextData[{
 "Suppose the input consists of the codeword  |",
 Cell[BoxData[
  FormBox[
   RowBox[{"000", "\[RightAngleBracket]"}], TraditionalForm]]],
 ", representing a logical state",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"|", "0"}], "\[RightAngleBracket]"}], ",", " "}], 
   TraditionalForm]]],
 " as well as the three, bit-flip, corrupted states ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"|", "001"}], "\[RightAngleBracket]"}], ",", " ", 
        RowBox[{"\[VerticalSeparator]", "010"}]}], "\[RightAngleBracket]"}], 
      ",", " ", 
      RowBox[{"|", "100"}]}], "\[RightAngleBracket]"}], ".", " "}], 
   TraditionalForm]]],
 "  \nLikewise, the no-error state  |",
 Cell[BoxData[
  FormBox[
   RowBox[{"111", "\[RightAngleBracket]"}], TraditionalForm]]],
 ", representing a logical state ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"\[VerticalSeparator]", "1"}], "\[RightAngleBracket]"}], ","}], 
   TraditionalForm]]],
 "  and the corresponding  bit-flip states ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"|", "110"}], "\[RightAngleBracket]"}], ",", " ", 
        RowBox[{"\[VerticalSeparator]", "101"}]}], "\[RightAngleBracket]"}], 
      ",", " ", 
      RowBox[{"|", "110"}]}], "\[RightAngleBracket]"}], ".", " "}], 
   TraditionalForm]]],
 "  \nThese states are generated by an error box, that contains any of the \
four gates listed below"
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7551957696446857`*^9, 3.755195892596116*^9}, {
  3.7551959536281843`*^9, 3.755196009195228*^9}, {3.755196725850135*^9, 
  3.755197017664291*^9}, {3.755197148137957*^9, 3.7551972182125273`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"flip", "[", "a_", "]"}], ":=", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{"a", "==", "0"}], ",", "1", ",", 
    RowBox[{"a", "==", "1"}], ",", "0"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"errorX0", "[", 
   RowBox[{"{", 
    RowBox[{"b1_", ",", "b2_", ",", "b3_"}], "}"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "b1", ",", "b2", ",", "b3"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"errorX1", "[", 
   RowBox[{"{", 
    RowBox[{"b1_", ",", "b2_", ",", "b3_"}], "}"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "b1", ",", "b2", ",", 
    RowBox[{"flip", "[", "b3", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"errorX2", "[", 
   RowBox[{"{", 
    RowBox[{"b1_", ",", "b2_", ",", "b3_"}], "}"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "b1", ",", 
    RowBox[{"flip", "[", "b2", "]"}], ",", "b3"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"errorX3", "[", 
   RowBox[{"{", 
    RowBox[{"b1_", ",", "b2_", ",", "b3_"}], "}"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", 
    RowBox[{"flip", "[", "b1", "]"}], ",", "b2", ",", "b3"}], 
   "}"}]}]}], "Input",
 CellChangeTimes->{{3.735999658000565*^9, 3.7359996621999073`*^9}, {
  3.735999719317008*^9, 3.73599971954075*^9}, {3.7359997714714937`*^9, 
  3.735999882026775*^9}, {3.73600030230814*^9, 3.736000365352805*^9}, {
  3.736000438425209*^9, 3.73600045826747*^9}, {3.736000524812216*^9, 
  3.73600056631349*^9}, {3.755197054829464*^9, 3.7551970616958*^9}}],

Cell[TextData[{
 "So",
 StyleBox[" errorX0", "Program"],
 ", represents no-error, ",
 StyleBox["errorX1", "Program"],
 " incurs a bit-flip in the first qubit, and so on. L"
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.755197225998499*^9, 3.755197294139146*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Let", "'"}], "s", " ", "insert", " ", "the", " ", "000", " ", 
     "codeword", " ", "into", " ", "the", " ", "error", " ", "box"}], ",", 
    " ", 
    RowBox[{
    "we", " ", "get", " ", "three", " ", "types", " ", "of", " ", "errors"}], 
    ",", " ", 
    RowBox[{
    "which", " ", "we", " ", "correct", " ", "by", " ", "with", " ", "the", 
     " ", "QECC", " ", "function"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"state", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"errorX0", "[", "state", "]"}], "\[IndentingNewLine]", 
   RowBox[{"QECC", "[", "%", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "\"\< ---------\>\"", "]"}], "\[IndentingNewLine]", 
   RowBox[{"errorX1", "[", "state", "]"}], "\[IndentingNewLine]", 
   RowBox[{"QECC", "[", "%", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "\"\< ---------\>\"", "]"}], "\[IndentingNewLine]", 
   RowBox[{"errorX2", "[", "state", "]"}], "\[IndentingNewLine]", 
   RowBox[{"QECC", "[", "%", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "\"\< ---------\>\"", "]"}], "\[IndentingNewLine]", 
   RowBox[{"errorX3", "[", "state", "]"}], "\[IndentingNewLine]", 
   RowBox[{"QECC", "[", "%", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "\"\< ---------\>\"", "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.736000466746991*^9, 3.736000518129936*^9}, {
  3.7360005740987997`*^9, 3.736000701280588*^9}, {3.7360013406137457`*^9, 
  3.736001411229787*^9}, {3.73600144825385*^9, 3.736001496066924*^9}, {
  3.736001896807164*^9, 3.7360020196911592`*^9}, {3.755197304603695*^9, 
  3.755197381980377*^9}, {3.755197833718773*^9, 3.755197864665084*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.761157308894557*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.761157309012679*^9}],

Cell[BoxData["\<\" ---------\"\>"], "Print",
 CellChangeTimes->{3.761157309141121*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.761157309276535*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.7611573094268847`*^9}],

Cell[BoxData["\<\" ---------\"\>"], "Print",
 CellChangeTimes->{3.761157309619874*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.761157309815757*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.761157309939328*^9}],

Cell[BoxData["\<\" ---------\"\>"], "Print",
 CellChangeTimes->{3.761157310083239*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.761157310219981*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.761157310344475*^9}],

Cell[BoxData["\<\" ---------\"\>"], "Print",
 CellChangeTimes->{3.761157310462566*^9}]
}, Closed]],

Cell["\<\
Note that for each of the possible errors, QECC returns the original \
code-word 000 (located,in the first three qubits). 
Similarly, the code word 111 subjected to the error box, returns the original \
codeword after being processed by QECC\
\>", "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.755197396965871*^9, 3.7551975978801727`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"state", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"errorX0", "[", "state", "]"}], "\[IndentingNewLine]", 
 RowBox[{"QECC", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\< ---------\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"errorX1", "[", "state", "]"}], "\[IndentingNewLine]", 
 RowBox[{"QECC", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\< ---------\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"errorX2", "[", "state", "]"}], "\[IndentingNewLine]", 
 RowBox[{"QECC", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\< ---------\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"errorX3", "[", "state", "]"}], "\[IndentingNewLine]", 
 RowBox[{"QECC", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\< ---------\>\"", 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.736002034823188*^9, 3.736002038164093*^9}, {
  3.7551978706755247`*^9, 3.7551978990227947`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.76115731091143*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.761157311025548*^9}],

Cell[BoxData["\<\" ---------\"\>"], "Print",
 CellChangeTimes->{3.761157311151512*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "1", ",", "1", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.761157311354348*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.7611573114726963`*^9}],

Cell[BoxData["\<\" ---------\"\>"], "Print",
 CellChangeTimes->{3.761157311656026*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.7611573117840433`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.761157311901925*^9}],

Cell[BoxData["\<\" ---------\"\>"], "Print",
 CellChangeTimes->{3.7611573120301943`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.7611573122430067`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.761157312372897*^9}],

Cell[BoxData["\<\" ---------\"\>"], "Print",
 CellChangeTimes->{3.761157312498732*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["QECC Simulation", "Subsection",
 CellChangeTimes->{{3.755197928318802*^9, 3.755197933841206*^9}}],

Cell["\<\
We now consider a QECC simulation of a single-qubit bit flip error. Define a \
noisy channel, with probability p=0.1 that a bit value flips\
\>", "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.755197941503643*^9, 3.755198010510552*^9}, {
  3.759854140529715*^9, 3.759854144182199*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"noise", "[", "i_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"p", "=", "0.1"}], "}"}], ",", 
    RowBox[{
     RowBox[{"prob", "=", "p"}], ";", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"i", "\[Equal]", "1"}], ",", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1", "-", "p"}]}], "}"}], "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ",", 
       RowBox[{"i", "\[Equal]", "0"}], ",", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1", "-", "p"}]}], "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], "]"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.755219417143201*^9, 3.755219446864819*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "encode", " ", "s", " ", "ingle", " ", "bit", " ", "into", " ", "its", " ",
     "logical", " ", "codeword"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"encode", "[", "i_", "]"}], ":=", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"i", "\[Equal]", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"i", "\[Equal]", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7552182692512617`*^9, 3.7552182970052147`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"define", " ", "the", " ", "error", " ", "box"}], ",", " ", 
    RowBox[{
    "including", " ", "the", " ", "anciallry", " ", "qubit", " ", 
     "assignments"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"noisebox", "[", "i_", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{"Map", "[", 
       RowBox[{"noise", ",", 
        RowBox[{"encode", "[", "i", "]"}]}], "]"}]}], "}"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7552183183928328`*^9, 3.755218344750601*^9}, {
  3.755218409574601*^9, 3.755218419918062*^9}}],

Cell[CellGroupData[{

Cell["Simulation without error correction", "Subsubsection",
 CellChangeTimes->{{3.7552189361689262`*^9, 3.755218947642827*^9}}],

Cell["\<\
With this choice for p, we instantiate 100 instances for this error box. Let\
\[CloseCurlyQuote]s assume the input state to the error box is \
\[RightBracketingBar]000\[RightAngleBracket]\
\>", "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.755218358611388*^9, 3.755218387984542*^9}, {
  3.755218428867221*^9, 3.755218501245179*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"noisebox", "[", "0", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.755218521738222*^9, 3.755218523075716*^9}, {
  3.755218863178767*^9, 3.755218864842567*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.761157313131927*^9}]
}, Closed]],

Cell["\<\
For a given set of simulations we count the number of successful \
transmissions, i.e. number of outputs containing qubit assignments 0,0,0 for \
the first three qubits\
\>", "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.755218549638103*^9, 3.755218656881727*^9}, {
  3.755218698015586*^9, 3.755218714597163*^9}, {3.755218827470373*^9, 
  3.755218840137106*^9}, {3.7552190009009542`*^9, 3.755219017393396*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"success", "=", 
  RowBox[{"Count", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"noisebox", "[", "0", "]"}], ",", 
        RowBox[{"-", "3"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "100"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.755218676933134*^9, 3.755218683355927*^9}}],

Cell[BoxData["66"], "Output",
 CellChangeTimes->{3.761157313362156*^9}]
}, Closed]],

Cell["Thus the error rate is", "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.755218733925848*^9, 3.755218766853971*^9}, {
  3.755218882561071*^9, 3.7552188844397783`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"errorate", "=", 
  RowBox[{"N", "[", 
   RowBox[{"1", "-", 
    RowBox[{"success", "/", "100"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7552187710132227`*^9, 3.755218806319373*^9}, {
  3.755218891168096*^9, 3.7552188998879757`*^9}}],

Cell[BoxData["0.34`"], "Output",
 CellChangeTimes->{3.761157313597917*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Including Quantum Error Correction", "Subsection",
 CellChangeTimes->{{3.755218964924169*^9, 3.755218988987053*^9}, {
  3.755219030657198*^9, 3.755219050108523*^9}, {3.755219555032467*^9, 
  3.7552195577874413`*^9}}],

Cell["\<\
We now subject the QECC function, defined above, on the output of the error \
box, and count the number of successful transmissions of  state \
\[RightBracketingBar]000\[RightAngleBracket]\
\>", "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7552190672549133`*^9, 3.75521919069831*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Qsuccess", "=", 
  RowBox[{"Count", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"QECC", "[", 
         RowBox[{"noisebox", "[", "0", "]"}], "]"}], ",", 
        RowBox[{"-", "3"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "100"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.755219211009521*^9, 3.755219221504243*^9}, {
  3.755219287857739*^9, 3.755219290478341*^9}}],

Cell[BoxData["98"], "Output",
 CellChangeTimes->{3.76115731434212*^9}]
}, Closed]],

Cell["Whose error rate is now reduced to", "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.755219233058691*^9, 3.7552192451740437`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Qerrorate", "=", 
  RowBox[{"N", "[", 
   RowBox[{"1", "-", 
    RowBox[{"Qsuccess", "/", "100"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.755219283886816*^9, 3.755219297205842*^9}}],

Cell[BoxData["0.02`"], "Output",
 CellChangeTimes->{3.761157315097953*^9}]
}, Closed]],

Cell[TextData[{
 "The reduced error should be on the order of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["p", "2"], TraditionalForm]]]
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7552193172208023`*^9, 3.755219368682723*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"prob", "^", "2"}]], "Input",
 CellChangeTimes->{{3.7552193815466413`*^9, 3.75521938491152*^9}, {
  3.755219458901325*^9, 3.755219459643313*^9}}],

Cell[BoxData["0.010000000000000002`"], "Output",
 CellChangeTimes->{3.761157315920084*^9}]
}, Closed]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1156, 838},
WindowMargins->{{Automatic, 313}, {Automatic, 21}},
ShowGroupOpener->True,
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 125, 1, 92, "Title"],
Cell[708, 25, 60746, 1011, 371, "Input",
 Evaluatable->False],
Cell[61457, 1038, 1631, 45, 80, "Text"],
Cell[63091, 1085, 905, 12, 32, "Input"],
Cell[CellGroupData[{
Cell[64021, 1101, 2202, 48, 138, "Input"],
Cell[66226, 1151, 143, 3, 32, "Output"],
Cell[66372, 1156, 145, 3, 32, "Output"]
}, Closed]],
Cell[66532, 1162, 426, 13, 39, "Text"],
Cell[66961, 1177, 4313, 120, 180, "Input"],
Cell[CellGroupData[{
Cell[71299, 1301, 1765, 36, 96, "Input"],
Cell[73067, 1339, 6022, 166, 589, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[79126, 1510, 97, 1, 36, "Subsection"],
Cell[79226, 1513, 314, 6, 38, "Text"],
Cell[79543, 1521, 236, 6, 32, "Input"],
Cell[79782, 1529, 153, 2, 38, "Text"],
Cell[CellGroupData[{
Cell[79960, 1535, 541, 14, 75, "Input"],
Cell[80504, 1551, 145, 3, 32, "Output"],
Cell[80652, 1556, 145, 3, 32, "Output"],
Cell[80800, 1561, 145, 3, 32, "Output"]
}, Closed]],
Cell[80960, 1567, 211, 5, 38, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[81208, 1577, 104, 1, 36, "Subsection"],
Cell[81315, 1580, 231, 5, 38, "Text"],
Cell[81549, 1587, 1202, 29, 54, "Input"],
Cell[82754, 1618, 4927, 135, 117, "Input"],
Cell[87684, 1755, 218, 5, 38, "Text"],
Cell[87905, 1762, 422, 10, 32, "Input"],
Cell[88330, 1774, 1845, 57, 82, "Text"],
Cell[90178, 1833, 1595, 41, 117, "Input"],
Cell[91776, 1876, 282, 8, 40, "Text"],
Cell[CellGroupData[{
Cell[92083, 1888, 1856, 37, 327, "Input"],
Cell[93942, 1927, 145, 3, 32, "Output"],
Cell[94090, 1932, 145, 3, 32, "Output"],
Cell[94238, 1937, 86, 1, 24, "Print"],
Cell[94327, 1940, 145, 3, 32, "Output"],
Cell[94475, 1945, 147, 3, 32, "Output"],
Cell[94625, 1950, 86, 1, 24, "Print"],
Cell[94714, 1953, 145, 3, 32, "Output"],
Cell[94862, 1958, 145, 3, 32, "Output"],
Cell[95010, 1963, 86, 1, 24, "Print"],
Cell[95099, 1966, 145, 3, 32, "Output"],
Cell[95247, 1971, 145, 3, 32, "Output"],
Cell[95395, 1976, 86, 1, 24, "Print"]
}, Closed]],
Cell[95496, 1980, 365, 7, 57, "Text"],
Cell[CellGroupData[{
Cell[95886, 1991, 1076, 20, 306, "Input"],
Cell[96965, 2013, 144, 3, 32, "Output"],
Cell[97112, 2018, 145, 3, 32, "Output"],
Cell[97260, 2023, 86, 1, 24, "Print"],
Cell[97349, 2026, 145, 3, 32, "Output"],
Cell[97497, 2031, 147, 3, 32, "Output"],
Cell[97647, 2036, 86, 1, 24, "Print"],
Cell[97736, 2039, 147, 3, 32, "Output"],
Cell[97886, 2044, 145, 3, 32, "Output"],
Cell[98034, 2049, 88, 1, 24, "Print"],
Cell[98125, 2052, 147, 3, 32, "Output"],
Cell[98275, 2057, 145, 3, 32, "Output"],
Cell[98423, 2062, 86, 1, 24, "Print"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[98558, 2069, 103, 1, 36, "Subsection"],
Cell[98664, 2072, 310, 6, 38, "Text"],
Cell[98977, 2080, 930, 28, 54, "Input"],
Cell[99910, 2110, 618, 16, 54, "Input"],
Cell[100531, 2128, 671, 18, 54, "Input"],
Cell[CellGroupData[{
Cell[101227, 2150, 128, 1, 35, "Subsubsection"],
Cell[101358, 2153, 358, 7, 38, "Text"],
Cell[CellGroupData[{
Cell[101741, 2164, 293, 7, 32, "Input"],
Cell[102037, 2173, 9087, 206, 306, "Output"]
}, Closed]],
Cell[111139, 2382, 436, 8, 38, "Text"],
Cell[CellGroupData[{
Cell[111600, 2394, 493, 14, 32, "Input"],
Cell[112096, 2410, 71, 1, 32, "Output"]
}, Closed]],
Cell[112182, 2414, 187, 3, 38, "Text"],
Cell[CellGroupData[{
Cell[112394, 2421, 260, 6, 32, "Input"],
Cell[112657, 2429, 74, 1, 32, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[112792, 2437, 222, 3, 36, "Subsection"],
Cell[113017, 2442, 311, 6, 38, "Text"],
Cell[CellGroupData[{
Cell[113353, 2452, 581, 16, 32, "Input"],
Cell[113937, 2470, 70, 1, 32, "Output"]
}, Closed]],
Cell[114022, 2474, 150, 2, 38, "Text"],
Cell[CellGroupData[{
Cell[114197, 2480, 209, 5, 32, "Input"],
Cell[114409, 2487, 74, 1, 32, "Output"]
}, Closed]],
Cell[114498, 2491, 250, 7, 40, "Text"],
Cell[CellGroupData[{
Cell[114773, 2502, 168, 3, 32, "Input"],
Cell[114944, 2507, 90, 1, 32, "Output"]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

