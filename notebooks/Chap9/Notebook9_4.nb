(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    304776,       5871]
NotebookOptionsPosition[    300422,       5735]
NotebookOutlinePosition[    300992,       5759]
CellTagsIndexPosition[    300919,       5754]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Fault Tolerance", "Title",
 CellChangeTimes->{{3.755721391928113*^9, 3.755721397270772*^9}}],

Cell[TextData[{
 "In Notebook 9.2 we demonstrated how a single qubit flip error is corrected \
with a QECC. So if a quantum channel is corrupted by a bit flip error that \
occurs with probability ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]]],
 ", a QECC  reduces that error to order ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"c", " ", 
     SuperscriptBox["p", "2"]}], ","}], TraditionalForm]]],
 " where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", " "}], TraditionalForm]]],
 " is a constant. The 9 - qubit Shor code, and the 5 and 7 qubits codes \
protects against all 1-qubit errors.  "
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.755721403819346*^9, 3.755721692946363*^9}, {
   3.7557217352019777`*^9, 3.755721838657865*^9}, {3.755790978223324*^9, 
   3.755791247561117*^9}, {3.756211562065606*^9, 3.756211651379025*^9}, {
   3.7562144894755898`*^9, 3.756214559066111*^9}, {3.756220106135818*^9, 
   3.7562201226261387`*^9}, 3.756226892901018*^9, {3.759854671408791*^9, 
   3.759854673701497*^9}}],

Cell["\<\
However, in a quantum circuit with several components each error must be \
diagnosed and corrected. Fault tolerance guarantees that a computing circuit, \
when run multiple times with the same input, delivers a reasonable number of \
responses that an ideal circuit (i.e. one in there are no errors) would \
deliver. More precisely, we assume the definition\
\>", "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.755721849132568*^9, 3.7557218719133663`*^9}, {
  3.755791277654817*^9, 3.75579173566722*^9}, {3.756211689224107*^9, 
  3.756211701306669*^9}}],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote] .",
 StyleBox[".. ",
  FontColor->GrayLevel[0.5]],
 StyleBox["For a given error-correcting code that corrects one error, an \
implementation of a gate acting directly on encoded states is considered to \
be fault-tolerant if the probability that the implementation introduces an \
unrecoverable error is bound above by c",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["p", 
    RowBox[{"2", " "}]], TraditionalForm]],
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 ButtonBox[Cell[TextData[StyleBox[ButtonBox["1"],
  FontVariations->{"CompatibilityType"->"Superscript"}]], "Citation",
  Editable->False,
  TaggingRules->{NoteData -> RowBox[{
       RowBox[{"Phillip", " ", "Kaye"}], ",", " ", 
       RowBox[{"Raymond", " ", "Laflamme"}], ",", " ", 
       RowBox[{"Michele", " ", "Mosca"}], ",", " ", 
       StyleBox[
        RowBox[{
         "An", " ", "Introduction", " ", "to", " ", "Quantum", " ", 
          "Computing"}], FontSlant -> "Italic"], 
       StyleBox[",", FontSlant -> "Italic"], " ", 
       RowBox[{"pg", ".", " ", "235"}], ",", " ", 
       RowBox[{"Oxford", " ", 
         RowBox[{"(", "2007", ")"}], " "}]}]}],
  BaseStyle->"Hyperlink",
  ButtonData->"00006FEF"],
 ",  where c is a constant and",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", "p"}], TraditionalForm]]],
 " is the probability that an individual quantum gate introduces a single \
error."
}], "Text",
 CellFrame->3,
 CellChangeTimes->{{3.755791744308189*^9, 3.755791893213294*^9}, {
   3.755791925748404*^9, 3.7557921023536463`*^9}, {3.7562305681042967`*^9, 
   3.7562305681415854`*^9}, {3.756230602727977*^9, 3.756230602765738*^9}, {
   3.7562307786145487`*^9, 3.7562307786261253`*^9}, {3.7562833376457157`*^9, 
   3.756283340776523*^9}, {3.756283415784711*^9, 3.7562834157948723`*^9}, 
   3.7562836832708387`*^9, {3.7562838219566*^9, 3.756283821977255*^9}}],

Cell[TextData[{
 "In our discussion below we assume that each gate and quantum channel in a \
circuit with N such elements is, according to the above definition, fault \
tolerant. But first, we ask the question: what is the probability of error in \
the output of the circuit if its elements are not fault tolerant ? To explore \
that question, we again define a noisy channel whose failure rate is \
determined by ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]]],
 Cell[BoxData[
  FormBox[".", TraditionalForm]]]
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.756211023602108*^9, 3.756211228421239*^9}, {
   3.756211742144702*^9, 3.756211795088478*^9}, {3.756212033185775*^9, 
   3.7562120629411087`*^9}, {3.75621416254847*^9, 3.756214183107645*^9}, 
   3.756214638975206*^9, {3.7562269297986517`*^9, 3.756226933769575*^9}}],

Cell[CellGroupData[{

Cell["Error for circuit containing N elements.", "Subsection",
 CellChangeTimes->{{3.756211244722579*^9, 3.756211310636088*^9}, {
  3.756211363410008*^9, 3.756211366121526*^9}}],

Cell[TextData[{
 "In order to simplify the discussion we assume that our circuit elements \
(e.g. gates, wires etc..) are only susceptible to a qubit flip error. That is \
if the incoming state is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftBracketingBar]", "0", " "}], "\[RightAngleBracket]"}], 
   TraditionalForm]]],
 ", and error causes it to flip to state \[LeftBracketingBar]1 \
\[RightAngleBracket] and vice-versa."
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7562118744014187`*^9, 3.756212012681061*^9}, {
  3.756212079793771*^9, 3.756212088422525*^9}, {3.756220195357518*^9, 
  3.756220208452787*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"define", " ", "a", " ", "noisy", " ", "quantum", " ", "channel"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"noisychannel", "[", "i_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{
      RowBox[{"p", "=", "0.025"}], ";", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"i", "\[Equal]", "1"}], ",", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"p", ",", 
            RowBox[{"1", "-", "p"}]}], "}"}], "->", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{"i", "\[Equal]", "0"}], ",", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"p", ",", 
            RowBox[{"1", "-", "p"}]}], "}"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}], "]"}]}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.755861000602522*^9, 3.755861009460125*^9}, {
   3.755861040309317*^9, 3.75586112967126*^9}, {3.7558625758614073`*^9, 
   3.755862576668497*^9}, {3.7562110089101887`*^9, 3.756211015629571*^9}, {
   3.756211325992852*^9, 3.756211334497617*^9}, {3.7562118094428177`*^9, 
   3.756211821514409*^9}, {3.756213201441914*^9, 3.7562132016728067`*^9}, {
   3.756213307439704*^9, 3.756213307785467*^9}, {3.7562133397022038`*^9, 
   3.7562133415474243`*^9}, {3.756214007170628*^9, 3.756214012210621*^9}, 
   3.756214140622805*^9}],

Cell["\<\
We feed, into this noisy channel, the state \[LeftBracketingBar]1\
\[RightAngleBracket] and count how many of its outputs are flipped, because \
of error, into state \[LeftBracketingBar]0\[RightAngleBracket]. The latter \
will allow us to estimate the probability of error. \
\>", "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7562118403698606`*^9, 3.7562118434965353`*^9}, {
  3.756212101506198*^9, 3.756212252437298*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"noisychannel", "[", "1", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "100"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"perror", "=", 
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"Count", "[", 
     RowBox[{"%", ",", "0"}], "]"}], "/", "100"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.755861216993697*^9, 3.7558612469718122`*^9}, {
  3.755861859069652*^9, 3.755861913573565*^9}, {3.756211826025444*^9, 
  3.756211834558757*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.761157555630431*^9}],

Cell[BoxData["0.02`"], "Output",
 CellChangeTimes->{3.761157555840829*^9}]
}, Closed]],

Cell[TextData[{
 "As expected, according to the frequency interpretation of probability, that \
calculated value is close to our prescribed value ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]]],
 "."
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.756212281722172*^9, 3.756212346882598*^9}}],

Cell[TextData[{
 "Now we take that same gate (or channel) and repeat with another channel, \
who takes the above output as input, but is also susceptible to error with \
probability ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]]],
 ". "
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.756212361530242*^9, 3.756212522878127*^9}, {
  3.756220248345169*^9, 3.756220249290484*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"noisychannel", "[", 
    RowBox[{"noisychannel", "[", "1", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "100"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"perror", "=", 
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"Count", "[", 
     RowBox[{"%", ",", "0"}], "]"}], "/", "100"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.755861276891227*^9, 3.75586136823674*^9}, {
  3.755861925389267*^9, 3.755861928675459*^9}, {3.756212349954215*^9, 
  3.756212350931981*^9}, {3.756212528222168*^9, 3.756212529718442*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", 
   ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.761157556057198*^9}],

Cell[BoxData["0.04`"], "Output",
 CellChangeTimes->{3.761157556163129*^9}]
}, Closed]],

Cell[TextData[{
 "In order to get a better insight of this simulation lets plot the circuit \
error rate as function of the number of gates, or quantum channels, each \
contributing uncorrelated errors with probability ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "."}], TraditionalForm]]]
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7562125794781027`*^9, 3.756212751235273*^9}, {
  3.7562160830698643`*^9, 3.756216083362145*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p0", "[", "n_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"state", "=", "1"}], ",", 
      RowBox[{"notstate", "=", "0"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"t", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Nest", "[", 
         RowBox[{"noisychannel", ",", "state", ",", "n"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "1000"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"Count", "[", 
        RowBox[{"t", ",", "notstate"}], "]"}], "/", "1000"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7558621322426157`*^9, 3.755862133931487*^9}, {
   3.755862241033271*^9, 3.755862323676283*^9}, {3.755862397240897*^9, 
   3.755862411494358*^9}, {3.755862466384943*^9, 3.755862480289111*^9}, {
   3.7562130749905043`*^9, 3.756213114374119*^9}, 3.756214068779231*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ptable", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"p0", "[", "n", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "20"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ntable", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"n", " ", "p"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "20"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7558623314160624`*^9, {3.755862369769289*^9, 3.755862382794963*^9}, {
   3.755862484473806*^9, 3.755862525446663*^9}, {3.755862606258897*^9, 
   3.755862606897382*^9}, {3.75621279563923*^9, 3.756212865685473*^9}, {
   3.756212898780286*^9, 3.756212916372608*^9}, {3.756212949597073*^9, 
   3.756212991572143*^9}, {3.7562132250419607`*^9, 3.756213225322348*^9}, {
   3.756213319182198*^9, 3.756213319755814*^9}, {3.75621402856953*^9, 
   3.756214035644511*^9}, 3.756214072398779*^9, {3.756215248956697*^9, 
   3.756215262838179*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ptable", ",", "ntable"}], "}"}], ",", 
   RowBox[{"Joined", "->", 
    RowBox[{"{", 
     RowBox[{"False", ",", "True"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<N, # of gates\>\"", ",", "\"\<probability\>\""}], "}"}]}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.7558625098288927`*^9, 3.755862547994438*^9}, {
  3.756212780091176*^9, 3.756212783272921*^9}, {3.756212873387541*^9, 
  3.7562128862221413`*^9}, {3.756213007028631*^9, 3.7562130122005863`*^9}, {
  3.756215191086544*^9, 3.756215220301566*^9}, {3.756215266842924*^9, 
  3.75621536563013*^9}, {3.756215653880083*^9, 3.756215692804368*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxTTMoPSmViYGAQAWIQDQEf7GfNBAN7qIADhL8SyudwMDEGgc1QvgBUfieU
L+IAoQ9A+RJQ9YehfBmH9DQQOAblK0D1n4TylRzOngEDKF8Fat4FKF8Nqv4i
lK8BNf8ylK8F1X8FyteB2ncNyteDmncDyjeAmncTyjeEmncbyjeCmncHyjeG
mncPyjeBmvfAHgBoDU7f
       "]]}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7K3v+/dOz1tkDxVwqHypZsixZg2Uz+EQYbnl
RNm+9VC+gMPhrxox/Ye2QvkiDhD6AJQv4TDniMKGooyDUL4MGl/BQb71deAO
uaNQvpLDvPfLj3mbn4TyVRymOXfnPP8N46uh8TUcrlaAHHgGytdyWAHU3el4
AcrXcch9/nvlx0tnoXw9B78kAaAXYPIGDp8u+QJFLkL5hg4z8oSaD5yC8Y0c
2sVunvsefBnKN3YA8R4vhfFNHNSBoSMTdcUeAA6JWhA=
       
       "]]}, {}, {}}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"N, # of gates\"", TraditionalForm], 
    FormBox["\"probability\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 20.}, {0, 0.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.761157558052518*^9}]
}, Closed]],

Cell[TextData[{
 "In the figure we plot the total probability of error (in blue) in the \
circuit as a function of the number of gates",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", "N"}], TraditionalForm]]],
 ". The orange line is a plot of the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", 
     RowBox[{"(", "N", ")"}]}], " ", "=", " ", 
    RowBox[{"p", " ", "N"}]}], TraditionalForm]]],
 ". We find that for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", "\[LessSlantEqual]", " ", "10"}], TraditionalForm]]],
 ", the probability of error scales in direct proportion to the number of \
gates in the circuit. For larger values of ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]]],
 " the curve saturates and\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "N", ")"}], "=", 
    RowBox[{"N", " ", "p", " "}]}], TraditionalForm]]],
 ", is an upper bound to the circuit error probability."
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7562153954662237`*^9, 3.756215453719743*^9}, {
  3.756215546857436*^9, 3.756215554789062*^9}, {3.756215610319013*^9, 
  3.75621564953129*^9}, {3.756215709153563*^9, 3.756215735297151*^9}, {
  3.756215779216186*^9, 3.7562158652591543`*^9}, {3.75621593695193*^9, 
  3.756216018044633*^9}, {3.756216115852964*^9, 3.7562161554439783`*^9}}],

Cell[TextData[{
 StyleBox["Exercise 1.  Explore how this graph behaves as you adjust the \
value of ",
  FontFamily->"Chalkboard",
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox["p", TraditionalForm]],
  FormatType->"TraditionalForm",
  FontFamily->"Chalkboard",
  FontWeight->"Regular"]
}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.756215750563393*^9, 3.756215770396247*^9}, {
  3.756216022769231*^9, 3.756216034979512*^9}, {3.756216161551517*^9, 
  3.7562161687348833`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[TextData[{
 StyleBox["Exercise 2. Find the asymptotic value (i.e. as ",
  FontFamily->"Chalkboard",
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"N", "\[RightArrow]", "\[Infinity]"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontFamily->"Chalkboard",
  FontWeight->"Regular"],
 StyleBox[" for the circuit.",
  FontFamily->"Chalkboard",
  FontWeight->"Regular"]
}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.756216174466304*^9, 3.7562162424832363`*^9}},
 Background->RGBColor[0.87, 0.94, 1]]
}, Closed]],

Cell[CellGroupData[{

Cell["Error for circuit containing N fault-tolerant elements.", "Subsection",
 CellChangeTimes->{{3.756216272435993*^9, 3.756216286055197*^9}}],

Cell[TextData[{
 "According to the above definition of fault tolerance, the output of a \
fault-tolerant component has an error rate determined by the quantity ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", " ", 
    SuperscriptBox["p", "2"]}], TraditionalForm]]],
 " . Later, we will show that for our simple flip error ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "=", "3."}], TraditionalForm]]],
 " "
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.756216294977394*^9, 3.756216422766364*^9}, {
  3.756216498836862*^9, 3.756216505589324*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"errorcorrectednoise", "[", "i_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"c", "=", "3"}], ";", 
     RowBox[{"p", "=", "0.025"}], ";", 
     RowBox[{"pcorr", "=", 
      RowBox[{"c", " ", 
       RowBox[{"p", "^", "2"}]}]}], ";", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"i", "\[Equal]", "1"}], ",", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"pcorr", ",", 
           RowBox[{"1", "-", "pcorr"}]}], "}"}], "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ",", 
       RowBox[{"i", "\[Equal]", "0"}], ",", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"pcorr", ",", 
           RowBox[{"1", "-", "pcorr"}]}], "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], "]"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7562165327823153`*^9, 3.756216662708293*^9}, {
  3.756216829964612*^9, 3.756216835622323*^9}, {3.7562169560345373`*^9, 
  3.756216990246017*^9}, {3.756217089010548*^9, 3.756217120339271*^9}, {
  3.7562173322603416`*^9, 3.75621733416988*^9}, {3.756217706840219*^9, 
  3.756217712825362*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p1", "[", "n_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"state", "=", "1"}], ",", 
      RowBox[{"notstate", "=", "0"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"t", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Nest", "[", 
         RowBox[{"errorcorrectednoise", ",", "state", ",", "n"}], "]"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "1000"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"Count", "[", 
        RowBox[{"t", ",", "notstate"}], "]"}], "/", "1000"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.756216711152347*^9, 3.756216726088776*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"numgates", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1table", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"p1", "[", "n", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "numgates"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1table", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"n", " ", "c", " ", 
        RowBox[{"p", "^", "2"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "numgates"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7562167485927353`*^9, 3.7562167518504333`*^9}, {
   3.7562170213750143`*^9, 3.756217049578979*^9}, {3.7562173378599777`*^9, 
   3.756217338334854*^9}, 3.756217689301257*^9, {3.75621778562455*^9, 
   3.756217788752328*^9}, {3.756217837580305*^9, 3.756217855307269*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p1table", ",", "n1table"}], "}"}], ",", 
   RowBox[{"Joined", "->", 
    RowBox[{"{", 
     RowBox[{"False", ",", "True"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<N, # of gates\>\"", ",", "\"\<probability\>\""}], "}"}]}]}],
   "]"}]], "Input",
 CellChangeTimes->{3.756216891268647*^9, 3.756217809711129*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw10TtIQlEYwPFTU0hDg0RDiEWESESpvdP7+dbRWqMhaK22wCGCqKChkIie
RGX2Tu1tjdIYrdIojRG0SGse/XdALr/7nfu9bJmYHpmsVUo5yj/9rJ4f48Wy
+BXLjRu8kKqncJ3UF5IzbtMsbiA+h83icuqzgJu4v4yb5TNuToeLK9jK96u4
VaJFfSGB28i3jtvFqq9bNrCN/JvYLr+2sbV8aQt3UG8Hd8r7mz57uIv6+7hb
RnP6xQF20M8hdorHpAseYRf9JXGP2HV52zHupd8U7pPGcjdx8wnup/9TPCA1
lecZHmSefw/Jd0w3eI6Hme8Cu+VDpytcYg/zXmFDXks64TUW5k9XPS+S1e2l
M8S97CNL3Es+rHzs54a4j/xY+dnXLXG/PFfqYRVgf3fEA5Kp1McqyD7viQcl
pcdLYhVivw/EQ7K7rQ9WYfb9SDwsibxuEKsI+38iHpElnW4Rqyj/R874A4ys
10g=
       "]]}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7P+s/HjJNynBHirggMrngPILoHwBB+v7/r3T
85qgfBE0voRD5Us1Q441PVC+jMOvuqw9JZM7oHwFB8stJ8r2zZ8F5Ss57PLk
YdJub4PyVaDqZ0D5alD7J0D5Gg6zZoIBlK/lEJUCdgGUr4Nmvh7UfYugfAM0
eUMHSZYwPt1Nc6F8I4cdcq2vA3fMg/KNof6ZA+WbOMw5orChKGMhlG/q8CYQ
pAPGN3Poznn+e+VHmH3mUP8tg/ItHMDGyayC8i0dbp77Hvx46Woo38rh9k9Q
ACyG8q2h7oWpt4H6dzmUbwsNrxVQvh00fFZC+fYOnY4JTy8owcx3cACplmCB
uqfBwUEzpv/QV401UHlHqP/XQeUd0cx3cvAxB5m4ASrv5LCkwJbr+mIon8EZ
Td7ZIeTx0tnAIIPKu6DJu0D9uxkq7wqNr01QeVc0eTdo+MLk3Ry028WAQQiT
d4fGx0aovLvDprnvlx/z3g6V90DlN3g4XPZNEoiw3AKV94TbDwBmh+ta
       
       "]]}, {}, {}}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"N, # of gates\"", TraditionalForm], 
    FormBox["\"probability\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 50.}, {0, 0.09375000000000001}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.761157567413492*^9}]
}, Closed]],

Cell[TextData[{
 "In this graph the solid line is now the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     RowBox[{"g", "(", "p", ")"}], " ", "=", " "}]}], TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   RowBox[{"N", " ", "c", " ", 
    SuperscriptBox["p", "2"]}], TraditionalForm]]],
 "."
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7562174409674273`*^9, 3.756217486911722*^9}, {
   3.7562175628274317`*^9, 3.7562176064214373`*^9}, {3.7562176378765583`*^9, 
   3.756217679546932*^9}, {3.75621790436884*^9, 3.756217915332094*^9}, {
   3.756217988096428*^9, 3.756218063813545*^9}, {3.7562180969960546`*^9, 
   3.756218101008855*^9}, {3.756218157439568*^9, 3.756218182260644*^9}, {
   3.75622491844494*^9, 3.756224921153513*^9}, 3.7598548714744883`*^9}],

Cell[TextData[{
 "This figure demonstrates that with a set of N fault tolerant gates, we can \
limit the circuit error probabiity to a new bound ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{"g", "(", "p", ")"}], " "}], TraditionalForm]]],
 ". "
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7562174409674273`*^9, 3.756217486911722*^9}, {
  3.7562175628274317`*^9, 3.7562176064214373`*^9}, {3.7562176378765583`*^9, 
  3.756217679546932*^9}, {3.75621790436884*^9, 3.756217915332094*^9}, {
  3.756217988096428*^9, 3.756218063813545*^9}, {3.7562180969960546`*^9, 
  3.756218101008855*^9}, {3.756218157439568*^9, 3.756218182260644*^9}, {
  3.75622491844494*^9, 3.756224921153513*^9}, {3.75985488200918*^9, 
  3.7598548950579777`*^9}}],

Cell[TextData[{
 StyleBox["Exercise 3. Plot the above graph for various values of ",
  FontFamily->"Chalkboard",
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "."}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontFamily->"Chalkboard",
  FontWeight->"Regular"]
}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.7562181894808693`*^9, 3.756218234809622*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[TextData[{
 StyleBox["Exercise 4. Given ",
  FontFamily->"Chalkboard",
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox["N", TraditionalForm]],
  FontFamily->"Chalkboard",
  FontWeight->"Regular"],
 StyleBox[" circuit elements, for what critical value ",
  FontFamily->"Chalkboard",
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox["p", TraditionalForm]],
  FontFamily->"Chalkboard",
  FontWeight->"Regular"],
 StyleBox[" is ",
  FontFamily->"Chalkboard",
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "(", 
    SubscriptBox["p", "c"]}], TraditionalForm]],
  FontFamily->"Chalkboard",
  FontWeight->"Regular"],
 StyleBox[") ",
  FontFamily->"Chalkboard",
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GreaterSlantEqual]", " ", 
    RowBox[{"f", "(", 
     SubscriptBox["p", "c"], ")"}]}], TraditionalForm]],
  FontFamily->"Chalkboard",
  FontWeight->"Regular"],
 StyleBox[" ?  If ",
  FontFamily->"Chalkboard",
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   RowBox[{"p", " ", ">", " ", Cell[TextData[Cell[BoxData[
     FormBox[
      SubscriptBox["p", "c"], TraditionalForm]]]]]}], TraditionalForm]],
  FontFamily->"Chalkboard",
  FontWeight->"Regular"],
 StyleBox[" do fault-tolerant gates provide any advantage ?",
  FontFamily->"Chalkboard",
  FontWeight->"Regular"]
}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.756218240443842*^9, 3.756218315975771*^9}, {
   3.756218400812749*^9, 3.7562184408294773`*^9}, 3.756218505730859*^9, {
   3.7562185854942303`*^9, 3.756218676721026*^9}, {3.7562188823127537`*^9, 
   3.756218960290783*^9}, {3.75621912246067*^9, 3.7562191389985743`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[TextData[{
 "If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", " ", "<", " ", 
    SubscriptBox["p", "c"], " ", "<", " ", 
    RowBox[{"1", "/", "2"}]}], TraditionalForm]]],
 ", then we expect that fault tolerance allows,  for a circuit containing N \
elements, a fractional error bound given by the quantity ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", " ", "c", " ", 
    SuperscriptBox["p", "2"]}], TraditionalForm]]],
 ". For a maximum tolerable error \[Epsilon]  "
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7562189917243967`*^9, 3.756218992364663*^9}, {
   3.756219050447672*^9, 3.7562191075431957`*^9}, {3.7562191506307297`*^9, 
   3.756219197048717*^9}, {3.7562192864221983`*^9, 3.756219440629582*^9}, 
   3.7562196955161467`*^9, {3.756219795338377*^9, 3.756219836165222*^9}, {
   3.759854912163651*^9, 3.7598549258499203`*^9}}],

Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      RowBox[{GridBox[{
         {
          RowBox[{"N", " ", "c", " ", 
           SuperscriptBox["p", "2"]}]}
        },
        GridBoxAlignment->{"Columns" -> {{"="}}}], " ", "<"}], " ", 
      "\[Element]"}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], TraditionalForm]], "DisplayFormulaNumbered",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.756219453959643*^9, 3.756219474398851*^9}, {
  3.756223217717474*^9, 3.756223217720194*^9}}],

Cell[TextData[{
 "This inequality limits the total number of gates allowed in the circuit. If \
we require more gates to complete our task, we can increase ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", " "}], TraditionalForm]]],
 "only if the error probability ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]]],
 " is reduced. This could be problematic as the value for ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]]],
 " is hardware dependent. There is another way to limit the right hand side \
of this inequality as ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]]],
 " increases. It is called concatenation."
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7562194825645*^9, 3.756219705866721*^9}, {
  3.756219850902628*^9, 3.7562199658573*^9}, {3.7562249759186687`*^9, 
  3.756224991905114*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Concatenation", "Subsection",
 CellChangeTimes->{{3.756219976724319*^9, 3.75621998307965*^9}}],

Cell["\<\
Before describing concatenation, lets first review a single-qubit QECC for \
bit flip errors. The code involves replacing the physical qubit states \
\[LeftBracketingBar]0\[RightAngleBracket], |1\[RightAngleBracket],  with \
their logical qubit assignments \[LeftBracketingBar]000\[RightAngleBracket], \
and \[LeftBracketingBar]111\[RightAngleBracket] respectively.
After being subjected to a bit flip error they are processed by the circuit \
shown in Fig. 9.3 of the text. Disregarding the ancillary qubits, this \
circuit maps all eight possible three-qubit assignments into the space \
spanned by the codewords |000\[RightAngleBracket] and \
|111\[RightAngleBracket].  That is,\
\>", "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7562199970646772`*^9, 3.7562200406800127`*^9}, {
   3.7562217531507607`*^9, 3.756222093330002*^9}, {3.756224743785398*^9, 
   3.756224768995956*^9}, 3.75985498246482*^9}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvXV8VEf3P37j7koSQgR3tyItFFqKFSjUaSktUEqLFqfyVHCHYoHg7l4k
kAAhgRAXQpR4Ntms27X5zZm5u0nt+3no0/7+2vMKYbN79947M2fOeR+9kZ/M
Hj/NlmGY+c741/gpi16ZN2/Kkgne+I+JX83/fPpXn3064qsFn03/bF7fT+zw
mzPxv274BbxGVrKSlaxkJStZyUpWspKVrGQlK1nJSlaykpWsZCUrWclKVrKS
laxkJStZyUpWspKVrGQlK1nJSlaykpWsZCUrWclKVrKSlaxkJStZyUpWspKV
rGQlK1nJSlaykpWsZCUrWclKVrKSlaxkJStZyUpWspKVrGQlK1nJSlaykpWs
ZCUrWclKVrKSlaxkJStZyUpWspKVrGQlK1nJSlaykpWsZCUrWclKVrKSlaxk
JStZyUpWspKVrGQlK1nJSlaykpWsZCUrWclKVrKSlaxkJStZyUqIFZHAIcTT
v0Sh6Y8oIhNCRvy+gA/UIF05/puHd1gB/8/D+3oExyCeRSYtMmo5ESkRUuHD
4XQqxGkRq0BIL4q8iI/Cp8Xf4PD7LGdEBnIkfF2Ea7D4S2IFfm0k10dcLeIK
ES/Dl5AjpMOHcORoAb4I5+fhTz0SlEhvwK/wu1p4U0MOhhEJAnlLC98UER4O
j4mchuXwNfCbLFz2jyTSW4JLGekMwLV4xOJ7MfLIKMIPgiEJ5CMeH8LppC/i
0wu8NKX45Cx8FR8mGBFXipAMj6UCDxwfyTUgLQxVh28H3zUnR1oFMnEGMl64
KJlm/EIprQKeHz1eMHiNx22qQwYlR+ZQR29bgBFziMNn48mFYW71CvjR6fGp
dAJMjoGcjaVjFI0c0uuQAEfCeTX4PnkOvsghMhYWps5IlwnOjv80M4z4wtzG
IWnGRDghZha4XfgT7sSETJg38JswIi09v8DxAr2WERnVyIAvDywnLa4Ad6WB
G8eTpuWBfwjXYS5CCp4XdeRTkU6JCa4mAhMgyrxqacm0iK9HBq1RYhR8BbmI
32TJlTh8OpMMGfG8wCxw5P5FyiAcnUhkZgNgJfhI4EUyNCQ08hEczFF+oGeh
HwE38qJomUsDXJ9sMTLh8FX8jhE2IzAVXjQ9uU1YKhGupaaLzxP2hm3Iq/F9
GMkq83QMcCNwFTwnZHLkiNfjaamFGSC3hrQGxNJtKxLeFWDjaJCxCE8avlgV
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
TIzPmYDor9fvir963ge/dmzXfuIqSCTDcFSAToNwP+qiExum2GBIFtBx2ZrY
h1dPwzkdQzuN+x4CcxxmZ405bPf01M8fQKafb7f5G341K2ilWlYydnifZs18
4rJLqinA1itenINekES92SqvR9XxM8b0iY7o8VROeN4gQ+W3pg2JALMytP35
R+VyyuECmWuDVpVxo4uvvSvj7hc5KJN8heOk+lqTTnZg3SLgt+juV59k0dWF
EWGcyZZkXtoG+9QhpO/4r6vI/qIWJcxSXQmGZFDQ5B22eO2laqpQDM/ST+30
s/EaMeWnbKrOQHETOxT6O9HuAdBniaeKnuMbMpJb+7oNHT2pmoZlQaty0DiN
pLVLgRWeI8VHdO8L6tqnH40d3CmqdWkpqxdo1zQVrWyyoAvBEo757d5ufA//
Ky+Z88ZrHSNaFisMoIvZ59kXd8F4HSPweGWSsKUVxxjU3zuxep4TZhufiCXr
9lz/Nc6NsWHsvXq/9VUxHTsRBaAVFU+vr5wGKdZBUbO3H6+oV3wwuBsWjLYR
EYezCtRkAkgYHf9X2fD0Ui9/u0DGNqDF0PQGUASgyotuvPdqF6fmHU5naUkM
Apsy0EiKQB0KyQz/JGf9oQkGz5me3N7l4+a26pdfy2gzserEr4a08oIMizZn
Morg8qxgrj5VygrjB7sz3oxzYPiopw20+aTMiFRqAG0GZd69gR42IYz7KyO/
KaSlWDBQPeltIqJGq83UkPewp7etp41zv/FzCqUcWkhykLp3ihXI9OzBuQv2
TPSIyStIN0KS8yxJLSPtgYdEAsko+BcaCnIzg/wiR4/5WM8h3iyozVLOAsmA
6U30ilhOVt79/I3Xo8OG59QgspXqATYQRy6FZBY5afZjmEsMRNaS+A3bpebG
vFGt2oR3yQDf6IuNl6hm/FpJ153XyE6s+QrPv2NIq7OplUQWqfDlJJOEB62t
pmdQVZxZOceDQLKL6U8JjtTjHUcbl9FsAqPIVh36OcDWceinK/NoOSH8UnJS
pSkFnzSLwOyh/htkhmS/cxaJ5iWQEkcxtqxMWjYqwjNqaL6C3Iy26tDqGR4A
yTr2Hb1YBWuqk0w0DD5UeXvXzfHHn7r3GTX+Y3n63T7+DBV9F5PzKEY1kcpy
aHSQndDdjcHq1TWo7aWYbR2DvaDexCvi18fPlTBmPNXENWoymrISu3vCkc5+
bc4nl9RRWcdWofybrYMDXFq/ekdGWFdU0N50SErOa4Rk8FtXd2DdkjBfl7vJ
qVKHLoH7S0hGdC4rKg3qwm/nfRLq7f/Tz7up9cGS3qYYD0MNC95prEWT/hUk
0/8Bkin5Z2f6eDA+jL1ncDe8Z+WUVyF9F+MJjZh1r6+TrTNj7xre5lzctZ0b
vnZmbBnHqC7jvqkUpM57xNDQIXX+0Q0LMJS1cfV7ZcxbK9etsrOxd7ANaDtx
Xi0BVTwts+IwmKk88eMy8NC6B3f/dFmOZMULSJV9c+vHjHvLJT/vaMwnhyFh
1c9b3IaSTvpHIRlxFWkNVYWzXn+9b0jr+npoZKpWlWADx5WxZxyiuoxfah4v
y1EBqy488eN0YD9X/8GT56fkl7Xx92wOYY7+V5Of6al7D3oT4buVK5/e7erM
eDFOdkFdTmc8JzMPbYkhc0uZhKEsng2PwFZXUgolSEbSTU2SMMdWVbn86b32
zVsHBfVLqzDQrrw8NJYze1ZJhSYv7USsIevLn2a2bNHjzbGLTBztyGtuiyF1
F7b0hhWgEYFgAD+SoElPvOXrGNYyoltm7nPS2FAgTa4MlCGl5n4iyRrlscFH
6nyl4lBago0Pr0y5HePtY7Ni68kqmiKuLDvx8zQInXi2aTFpg1yKMQi045bQ
kHdi1XSAZB5RvSd9tn3dD34A3tpGT1z1HK71HPFyyJ0EY/r5sXVTHKGevGPv
UZ/uWLMUG1y2TqHd3/xPPQwG70WVlnp4VLlXN4IblnHt/tLb3+rhLkmDX53y
wq5vmzszX/+8oUjqPSt7cQ56UdLzFKLw9ajm7owxvSIie+TJSZYFK0cZJ/r7
QZmVXfOOl9NrpJxeEfo/gvmcfru3B4N5wyG07aXsStJlUUK0JnX9wXWLIJcs
otuVlGyKsIltJ6C6nJNrZ7mDYAzqNm5RBU/uAAijaB1mDSx87Gzwp77DP1xd
I9KmACX6wmutQsJdQkemyGlQFStNPUAaEzC8mvKkAN4gEoTldU/uDQwLGDbh
g3y6fyEmwBJjCZhaamFNWvjSYAS5BUVW0ulAd9uWkb0zcrUE5EstJ2mz4kb6
AyqzvAEWd1nxvNde7h7eokwFfjxW/uz0mq8IPm/e482llTztLYaRMAv3X5V8
cu1CLLQYj9CXR3+8dvUGcLS6+7Sb+FUF5VqO9FCEEddc/s90sOJdfbpNn/vo
2bNevu4BBKGdzC4jWZEwDD3ocbki73ZHJyYEQ53gHufTGmqo90OVcWr7N/a+
oTPXHQMtwEJqCcachiai+B9krD+FZBl3Nge6u36/6UIZiVA25N56zcs2AJLp
Wp1Iz4O1JmlXBCRrawviB9kz/uBP7nk5pYZ0w9ByEPTFaFKtyosb5IHH6PnK
SLOv9Q+QjAgEgzL3QW8vrESc+06Ym08BBvQ9Nrcuh+aBRcr8jPbBnYPC+ydX
qxroXUsNPAXS3IVFUgs1RLBrTXlJblR4l3Fjp2uNTQCGlDQlNPWb6U3UjMU6
91lJ4sVgx8CI5gPS82U6S09yEmgjdRwWSCbZNk30LNcEkt2aN6rtn0Ky/3O8
EiQzt97itbUn1nxJIdnptEoSuFSRJsMUkukpJCNSq+LMqq8gYyo87Hx6AXEW
QWcz6ZzQ/hcgH8rZ3zYkyK7Fa08UtLF2g0gDztTlAjxnqY/724z1O0jWpJju
N5BMiyqTl42K8m87Oq+WOEqUxcc2zAHJY9N2yHs/K+kac6RdNBYmfOnxHSsg
4dNzyLCR75tyHvR0wVDK3iG0+/VnVWQsAifVMem49NtDvKAE1Sks8nLsvvY+
AZ6Mi7tfqzs55cQpAUOFEKdRK2TeGeAFZa1Ooa0vpJZSlwUyVKK6pG+/msaE
9Fh1JsnsHLYE16AXrpSjKBJ51fD82IbFkf5utx4+MUMyE9SQizTXGtpysVTd
gnUPBYfQ8JqrVxUk9gjyc7XxHTzi09waPVkszI+s+SLInFz7F5CMp5DsGIFk
tykkQzkXernhsbu5+He/nlNdB2sP/TjB4YaVWXrcYF/GzYZxCom8GHc5dvs8
qNJ1iew/ZU2N2SFPbFFsWhWe2LQUEt7d/HoOf+PnLRsYO0cHe9/ek7+vJwxl
jnfpEV64dctc4TzhHSfMK5Y2O4v0BbK0wx4ezVp1ealMTaMPiHZc4aTebMis
kyQHz/8AycznQRJmxozN1hTOfn1En2atqmt1YGAaKk6umuWIIZlT5EtTfjKP
18hSQ0RZdH3jEl8qwN+Zfr+gvH1Qs2hw/b1yJ1tDMD84V414YTg1m5s43JPB
gtEhqMPZnApI3jZVYdAFrKJOxLoVivcDI688yZMgGUn840BbUGiKL1f149wv
Qt19tp5+JCWlg6sKmtxJHolGSCbHZmlFXmpks85jxyxlaRk1FMZxFtEtmHsl
QmIAtWWhb7la1NVf3bUaklEDgnZfvFVBZAXxbfJUmoGThJPgMU8y1UwWW4Ju
WEN12s39fl6OP+64Ui7VLxSfWj/dHWMA15A2n26SOqPCXiJLrC+9smUeuExd
23V57aNfNvwA7g6Xlj3e20qA+nNkrDLS86hLzm6ZCrrVrWvXEdN3rVoIaQl2
gf3f32S23xUNFGCo8s+v/xIY1bVzzwnzSDEqyECe08ufXG7rwLRp3w/bQqQK
svLFOehFSSV5jSBwGYchWVh0rywlubqpBmWe6e/NOODJCW7za44MNABpgkvk
EpY2CQN8oYLePiziVEqRUmIGUGOiUnl4wyKouIzqczUtl+g20t0VsGvpsdXE
WHAJ6jtlPR6hlLYtENdNffqJbd/b4yt6NO8+am6V5KMuR3W3flo0097npfVH
nkvWt6jW/x6SgUVJjmdRxv2Bwd7DJ03No/uX12BuNQDa5llJiPPQm4IYoUaR
ZvBw2I4+uW+DPRi8/sfO/0o7Z3LI3J+dCCyp+c1fQDI4rLp07ohXeoaGV8gg
G1PQVxxbM4N4yUIGfrRRymBEKqwF4EXNoxOblwDbeEb2Hjpp8/p1DpgzXAP7
ffBjJUw23goycB7jKVXIzq77HM7jGdzy/U+yKoq7eziFM3aePt2vZKtItaYB
sihgIkyq0pQ+vgx4KSM7X015TgL9esSWPk2/6e3pE9H2pWoTwa5Icr9wUiHz
38rt+Qv6U0iWdmN9oK/L8u2nykl9hS43YYAthlWuzkEdrz+rIOUMIsUe2Myv
LUl83ZPBQswlsN21jDIDyeKhfisB1aue3hjoYdOM8Xl51PICZM5+BLcnx5p1
NtHUOlVufD9Pxo9x7T3h66cSRAGITiAZbWuIbfai1bMn+/o023Tyca2Usa+C
bmCSntKT5rpUJGN2q8jPSQajcvRMHh6moxfNdT4kuxrcr7T5g55oZnOUHNv1
xRd3f4fNOj+viD2nk2Sk44eBBi/5RtXBS3myTSEZSx8VBAxeHTdvZHsJkr3g
eMkQQJZSSCZoak+t+UKCZKnVZkhmlCCZAEl01DhFSoBkYLqGR2CznTRWYqk/
zUjvkDwSBVWf/2bpV0yznqtPJxmkfWri6DAgS01Kk5fcDn8PlRFI1iQnyuwv
agLJyPIBJFsyKsqr5bjCGnI5Rf7RzfOg3Z93r2krL5JEPCN0VKChLq7mwfk9
YEV6DBkx5hPN4zsDPRh3xtE9qv+9Ch0BQoKOOvvwRnuWOGdQKzwbDs0jL+6K
aesV4AzNtHomlsnJkZxUPYf/L3k0a2AklAaHR13MgEADsRmxfVSUeuMc4+g5
eNxHKqO0Rcz5Y0bJhyCatX9DydE18yL9nOOSIEcesnDEJl4yUcp5NTtUDSwy
P8hEL1PkpvXs0pux83YKjth9+BDBoNITGRo1o9kXL0Ey8a8hGa9Eyed6e9o6
Mk5+UYPTKgVS3qliScgNQhBFDz97pQ22072Coq7cubx960xbLNy8W3229uJz
yQtPUlvgSSmVjy/ukyDZsFE/bdvM2Np6eQV9uup6Q+NNwWzwuvzH13e7k6hT
70nLn0sucWxZ1JlkOe+PfsPTt/mNtDKlBAYwujaa2aORQ/5BSCZKs601VRfM
GfFG/9D2VTU6BfBF2alVM5wZO8Yr+rN1p8rMzZ/B1QDVV6XZJ3cT/ODb+b3p
SeX10b4hLbGwb/tGchnp6g9QR2ukwy7Jmd07GkMI96BOx1NIXgqqwiwNS6B8
cngthmSMR3D4pdQ8OTI3CBLxqDUGZDDRPzVC2rVTEXZMt7HzFVR5CQZSUkn4
nac6mQZ06zAkqyvKjGrWfvxbK3Qm1pIbi3U2x5lEgvkpIWkFYe+LkOeMx5W6
b8tSjEMZj4CBb32aU6aWOsObE2VN5AE6onnijE0dj8Az9Wk3jgR4uP6w9TJN
CeaVT09ugWwxJiB64sZrxJGrF0xKCajoytPPbARB5Nyx25DJ29Z968kwtu6t
pv0U18ATSCYq1CLNtSjKvPSTnQPmxZ4dh03dt34ZNricvKKmro0jFYU1iK/V
UT5XFT4+u84ea16P9t0nzlfQB31ATxW9WJYybcRL/t5tLiXppFX416le6pNv
VKHyu5+P7hMa3TtdTYJ9+hKUfr63O+PAOPq06fW4WlNPVkNnIsE8oxY9T5/2
cjvwkoWEXsiA+lOW+pkBGCkPblgIJmdknyupWcj8LA9AX7qCI+s+Bc70ip6y
7tcSck5kxCpPBxtNn/z40i7iQgzt/fbCXJ6qWgUyZj6+esDZIfCVkbOV8Owv
lraBpQ91kPo1kdIDAk5MKOteLz+XsR/OzCHPlIFnyvF6zlxgaEkVohFyuml5
KWJds3fLcjsbxsbZc8iYaU9Lqg2Ur0RLAi2S2BL9JiXejNFYY3XRF6OH9WzR
tqYaOgvz+uLD6wCS2XhET1997bml0lk0kKrmtKTLuxhQBJE9h07auGkNHruL
d9QXP12Xsq1QDSkeRaKq7vGNjfZ4NTxDW0/6OL0gp6eHYwvGLiJ06KMy2rGN
RUaIq2h4g7ImZ+rgbmCCter86+M8sg3gmXT18qIPRr7azCvo5pO8Kpp4YAJ/
uEEwK9Z/jv7cS3Zjk4+f4zd7TlXAlBpN2feHuLphqzqw5eDEKg30HwOnHX2A
kVZZkzWrTxtof9Ss9fnHuUYkefKIsK1V5l/r72kXyAQMHLNc8oVCo1fzc7BE
ixhWq3PjBrgz/oxH7/FL8yQO0SJavoTkJpokoCvNv7ba257pO3ppGfVHwVPn
5GYBYiQtOKmgx7K/tPp5Vnhgh0kT5kGdcZOmIiJCjagDVL4emhtTLxrcmQbp
so+snw/r6BQ1YMLUtLJCE9IbWZPUv0vCVsLvvWQC7C0K5lH13TmjOrZuQSDZ
C45XypfmpZ0iaKpPWCBZWqVU4SsazfX4LH2mEsmALTuz6kvwVDRvdSKzglRc
cpYnLsGRAkkOMaTfvHWS8fbrO2GylrPUB5LIhWCU2k1SWSA0as0XZCwBoaaQ
jG3chr+DZFVJi0dHeLd+p4wAX6Qu3L/uczB/nNp0nfhtjZRSpSCqEPHq2t3f
zIH0V99hQ0d8pE2+2xe8ZBgFdL3whPq+zP49lRzlJnR3ZUg/z7bX9u1u5+Pj
xDi4hXa4kErFIOmFDY5Eky7tVl938Ke5hEWffVxEU9PhyTW8XleU1dHPvXVo
i4IytUqkj2eC4sXf9k4kfzSU7Fg0OdzTZv3uQ5eS8n9NSE5MuIN/7t17cD/h
Hnlx7879pIR7D5Lj4/APfv/23QdJCYmpcXHpD+4cOLqfcbJl7GztGKcWQa2P
Hb9RpeFVlqIS8+//FpI9utTdjXFk7G39O15MqVQ1zYTUa/B4e3jDvPmHtL56
+8rmrbOcwL4O7zR2ebXUHYTYtBi/y5/FfDfTE39s59nj1VE/rllla8/YOLq2
n7hGhmiTRlqAoMMqI3blVA+sW+19u01Y/Fx6PiY26bSiVndl90ov74Apy7bV
0jwEeKRd06ZkXBNZLTQR4P8tNUIyUYJ2opTrojVU5s8e/ka/kPY1dfBwNL22
5NTKzwAtuId3GPd1NTWrkA66jmDoIi88/cNsAJZuwR3emvYwr6KtfyBUXIZ1
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
e6I+u3HawV1jlbH+R57xl63kC1LVoMjg6FKoJ/PYa1SXW/fpAV3bdYz1+cHp
f9oW+NOw1YNnU+Jl7fKLTjx8YK9Bny3dVc9U4ukwjdzhzCfMdNd6w+YtK4YP
/OE5p98GPey1UwjJAnvcYVAv0CDRyS3rF/Xs0nFIv5HzF67PCD6GG2IOlFUF
hylkQkgmA0gm6GUsJJt6zbgxI4YfuKhFt3W+MPysgU/UslWnat6850qsBxzz
9vIG1LkGsOWygaYWEEnFJhjb3r3vd1Xgld373eXoJYOPoXsPQDElpJOCF9z6
ybnjTogNOvTD1U0YCs9A4xIuJ/x2IFlktIJkjEys7wgh2SmD+g8et5X7DIME
9rbNP/fogUbaDza2c06jhN2gm2c+dPWv2scqOw86fuH2nQ3c16hmzasPGabr
0HvY36esrQcQmtXZ7XUL5wwo6dOtfNSVf3i4mlP1mua99BcDJ3r32vvJd9Zg
lrJZmC3b5769d4euFaVDL//zc9VU4OxjJU6+tnHBG8O7l/bZ9+j1eW2Tt1mj
BpOifyNy3vnG/dcN6tHx08UbGrm9BoSGolUYwXcx6NCgs0tWLPoo1nXY2Rff
KyE3AaqYm4EYPOrHqKnvsR8BdRFIxm5ShmSvG0h2I0OyBCL8hnkv32H0YO+e
33vynXU4X3PD7dvnvjeifXm38oFX/uU5Dre5NXrz+2OP2NeA/l77/XRHHq7z
jfnfvP7eq083urX70KNmbNW7MOCsds0578gunWIHjBz9k3oubnJ044a/XTah
pF2sw6jvz9+FAFVkqUxeNtY/ddWFZb0P/MebX1CRDuY0SM7H+04gmYx6yQiS
HT5wZHVjsoHm6xjN+O7JR+zbvrT/wNFjq3Oaq8ib19595diKsljXwQcurEOV
ZN4su2X2G/dB4KNX36c+mh+nD71NO+b/o0eX9rGOB/3uTx+gsktjT2kfcwtT
umHKVecd0aEk1rnPXv9aXk/uEzxPzc0FoYTcV/WLPu3VqW+fURNaclRVAbVw
Lksm8EUoe44NkvDOnTtWDOt34Dnj787rb4Rkfpgn6RkKzDVtu/bis3v1HbJk
+VqKY4JCFfLfc7Yt3LCJpF7TgukvVVWV3jHplTjX0hr6rG7esWr8D44yiqH3
/mduzaKEdaoNWP3b9efGSirLhv1w4a7mLEy3TlevvODQMQaiDBlzwjKJHO3s
0I2f3XPTmbHS0ooRR27Yga2/tUjtWj/hcOhd03fv8ZsVWpoGYsWXTLz24lhZ
r8oRx365DU+8U/ks8pFqanrikov37tzpsQ8+WUVAIuO0mYDaOnzwB2IYolrX
fHbp+GP6jzjWQDLwqzh47GPem/bWPwy27Nlz4FMf1+I5Fy1abKxe9tmAdj26
lu931e1PANWZexCDQ7eTdC6x6oqzjwEIMeRHhmwwt6FG6waXGo9A+fC00w/v
XxXrMWTE+dvTCH7kLt2y8p7rzjAisHLIj1dscdCmw4OS/dSORa8Nr4gN3fvI
jTndhE5+Kq9rBclsL/FEfuX0gwf0O+nsa7dyI6AW6jT+jZBMinTD9kt+eebw
wb2WL1/p4CFrewDJXB3P7tp+1c/OPKr/6Ma6dIJ5pNbfMe30Q/eqiPUauM9p
W/M2LhzfeueNPzbSpueQY5ds1OB+1HVe3Rfjjty/U2zoiJEXxCGRwrxpnUyu
u+2q841l1GX42KXbbV/01Ko5b0Cbvk599n7skzX1iN60t75l7pMG2Hes3Pui
O76AVljsCkjrhmV/u/bXFVXDH3t9kT2JL+uGYbI9LoHb/dgtJFv/2b3du3e7
8dEpXMnuNWunYerrz1S2i/Xo0eOld+e2cEQ5vmXeW/uUGpF98DV3PokyR1D9
EhraWe2v2/bFE4bAOpYOPPa8+ze4dJJjAr21Rng1Y6998ofWr5zydH/wSvf/
yVl38kHweDoHHWoKcF2s3bLko6rK/oNG/bQ+TWIHWrD6OpBCgo1KIJ8WqLjc
tGz4oKPPOvV66M6FMKw1JIPhUPUiBmQzXsPK3154au8Bw5au2I4xd/DncC8C
A5l8F+PwwaFgmtxiDlvBjg5SpHZBEwyGZG2cL3YWhYpyF7sVu43brjvraEic
7jfqg5WYIYanx1Iqjo85wwjeHC+x+rozD6+EK0d/vLIeJUZKqQx1uEIh7ki/
oWX2i30rO3Xf70ebHEwGAsPdc4OajACSBdr/vxqsUawEoFUSHvuOMroGIFmP
0advTWGtFvovjbW4ddGbfTvFOnQceeEVj+zKK0dsefaBaw3a7N5l1HPvLPch
bQVgq7ExdcOGP15yfmlZhw5DDjBwyHXSO5bPPPGgg8tjg4aOHFePQATZx/Ub
v/rjZecaDu018LDPFhsLKbth9YcnHTy8q7FZR4zdYZgVwmcZrIl2dK723Yf+
1LOs9A8PPVerLSTzPRtro0AbR4BgLsnqZ/50+eBeXT6cvYJVMMzU9nnVkaNR
wVduPt2l62b+5vyzeu9zSh2pWGEMoGwTnDQq0NsA8FCECX2Ca0QUOT+DXKy0
diwke3wGQTJ8el7EV0+E+ZbBfJdsTOvkV6s+PvmgfTrHuo4cdUJNjtrI58CX
4m3esHBqZaduHasGX3TlzWmh3EzzUw//sXP7WFVV5atvzchJdHuBfqzeNv+1
viWV3bv2+H9XXBGXXjzV/PT993eJte/ac/AT737eTJsuXWQOFd+w7LiqWK+9
j12zi1sWQ9hSWla1kExxYekeQjIrHiH/qhUkg35H48YeNnBkLXrJ0PtnxNTm
r+ZP7Vle1aVirwuvnJgwOjHT8twDfzRIoKKqw0vvT0koOnUUXI6icdWdvz2n
vQGcQ/b7fEVNLuPWrJj20yP2ipVW9t7v51syeAIaJJljUoNys85XCz64Z2Qf
qBaqqOp9212P1CGkxzA0pIql4S0adGbZ+w/e2q1s2A33rDJrm/XD1GcETi5H
dpmBDJM2GIE2sO/oE35wmatsXuLuA5e4jsrzncSiWf8a1KP8408+Vza1TFKe
J7SZ/caFxvX0goODpUjMmzG5R1XpPY+/SsLf9yF24OYSaxfMH1Za0rnjkF9c
/WfDpypf++o914K/ovuoZ96fh453R8CZX9kd86bs0yHWpUvFhBse3mFIPFn3
Gh5wUNZn2D/fmY7k4mPaibNu9qcjqjqVVQw466p76pNKt+yc/PANRs906r3/
E298jrmIeTRJzGKmq9cvGdNz4OihB6+J53eSGP+/OHccKs5QndXpnZ9dPu7I
gSOONpAMWzo6VCSVqt058YrzStuXdBh46LRFqx1Rt3nN+z8+dN9OsUEj9jq1
IYvtII0q8Smr1cm7jZ9Pea0v1HwZPLrXjXc/Ac8wAsdJUDQcUdGO7fPfGmxM
qs6jz73i3gZDNvmm5x/4g9EO3XsOffbtOZDm4bYQ4hLpltcf+Uv/jrE77nuC
W5eAWGvB3Q16dwN5sdnoJ9NrF4zq2fOoE8/n1AtjKGJ2R5BkYCGZtZ68/NJ5
0wf06vjR+29omzS8B8cLOTqdq91x1ckTjhw4rLEh0cKw3zPKb/P8Kb07lHfp
NuDcq2+tgzB2cvI9fy0vjXXu0fuld+bkuT9yi3a3bJ73yeBYh14dh51/2UQD
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
olP8gg4tcJOol+y7z5UtjuIojuIojuIojuIojuIojuIojuIojuIojuIojuIo
juIojuIojuIojuIojuIojuIojuIojuIojuIojuIojuIojuIojuIojuIojuIo
juIojuIojuIojuIojuIojuIojuIojuIojuIojuIojuIojuIojuIojuIojuIo
juIojuIojuIojuIojuIojuIojuIojuIojuIojuIojuIojuIojuIojuIojuIo
juIojuIojuIojuIojuIojuIojuIojuIojuIojuIojuIojuIojuIojuIojuIo
juIojuIojuIojuIojuIojv8/Dh//aEV/HK1zvvZcrYX5UWrtmb90Hv/Av4Q0
1yidd7UwlwpznWf+SC1982PSfAK3zGmZ1dKDL8DXc65ULnzdfBd+zvCVjhZZ
DU+C/7jmW/Qk80VfKqVSWjfDEzxzIXzum/+Z2ye0nzZ/+wJ+cLV5ELy/C1/2
tGe+5Hn4UvS6NBeYiLlaSV+n8XOpYH4CXonnbj4JnmP+L2F+Sgi6Lbw53kTy
bfFa/DxcuuAxDvzbpy+Z9xdu8EsJLwT3x5XF1zC/S8OSKrijQ3cTObPCZmI4
T1hO8wtfwa2lygntwZb5wfOl+dynJ5pPFL6AgPVXCjZFunQZrEoeH6HoS2ad
tZmggM0xfzvmMemMjgcE4Fri8OFbjkukIGhe5t85eJZoO8EpyWuBi0bL7sJS
eFrmzb4qfIiHS6ulA/umYN1gYuZLPu6ONItgJokbZObim5fxXAWkZe6WBZKQ
QqaA1hQSNd3Rh1+48Kmb1RmibCUyvG8wtQxSl1S48AqvN3/MDeI6nyHyhl9o
XCKzJpJ5h9+KfmVe1sEv8QbxvKOUwiOyFPZXgi5QuJXARIacYKeJyHGtLMNK
83rAkMgIZl0FLgX8Cm9i+DTjSWQrwZxpCcyna2D25qvmEa4T0rKChylFJOwC
3xp21mlfJeEDWHtiPVhk4lb4G683xAl7Qfcyd5Ee7a8ggje05GoXHu5J1QIy
JrIW39GgtVKuBMllKEzl4XWAf5iNfbuWNGFDcpooze6foJvgXphFprkLX8Gg
S2AHcko6CjlRKKII2DLp044K/EOramgsA9TowY8gQT0HPwHZ5QBx4m4pYk8N
/wCWgSvzuDuafwN8StxBDO7jq9v992iz+A/86JBQxz8g+miv2zzwmyzPzW0F
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
EnyYDb9kdJMjAPlCwSCxfYADQw9HZXXaiufj5MzaLbvP3K6/cO1W3o2snKzM
7Owb17Oyb167lp11MzP7Tlb2rdxrmblZp7KuX0u/lpeTkXvnahZ66+bD+xgX
Jyzl5xQVmbjl+KV6MwQC5JCy0EWlTHgCcaljQUtirc3JPO4UmPjh5gvYRejF
vEtj5OAgXaOTj+XWGCmNkRS3bFCeQEDWiXGPjjl/NX3Hmo8gvvaOS31hVSNx
gFYy/ccgaot3rP4bKKl6BIx8at7H69YzTt6uTMSI+Yug+AudFGRyK8t1V+/8
+k0E7Ri/mAHPfYk+x8iRI13Bil2dues9XRnvhCdqTMSJmaCFQpDMgKSXHbnH
/qv3k3mLdvVdafYrSPJ2NL719DPjIpO6FGaFfSAX9CLivxs7xMLLw339GI/4
ES++jb0NTA/A8NumrL4y2oOJZ4AFdD6/SoczomjH45IT31l5c5Q3TsOGDzhS
2CYBFcwP0mfvWbdcznj6Bw65lFcD7H1QXzcQOT20YoDMYGvoxY7s9X9NYqKn
fJt2yUaCSo50O5uIRrd0cCtEvq6n6lJCWMiESbMuZl27mpNz9ToyrqzrN65m
XUtHlnYzO+tG9vXrWTduXM9F/3zjel7WtZvkv8VZh/OuXXj11dcZGeOM4JAX
8+7ixWVlvRoeNhQlgUhtT6TALRApNRJMmdT56Xv8A2SrN+1TkpgRnInVofci
KkzluZPd5QEMNNfT/j5OJ4gaBxsf/CS6fVNvWckEH1kAE/DojBUdHOwpaCnC
hSfJY5CT3tRWWzLKx2cEIxsx/4sOKt0t0Jwqnh0JvgLdAVdSU3qRYaJ9Ev7a
okfXrei3/fT3xZKWYXQlzWLH6TdnTIhJmFKlIkV8DTIwhA2oWIpgsqpM59e8
7i5jnGITT9xuh75ROED0KMRiidAlLxEgdcad33wQBlmyiRdvV5JMoIEEmJqy
A58vckaoSz54xPyVLVi62QwlEOwouxsOfvFmMOzi8KTnl9+1hx4m0dzV/vHC
UUlBzObdWzpIVgTOYYnNwuGQCggtHLJGU0nu+KCACRMfOnqr8MzNGzlZF29f
y7x2LbcgPTs360rWjYwrObfSr9+5nn0tN/vs9ezMjGtlWZk1eZeul149mZ99
6B//fM7FWQZxmXf0P5Z8WlDTqbFR1GZzRKOsI6lNXvBIe0xdjYufnjMuPFXR
DbN/8Nxn0oeL+fZ6k1hyY5SfG+MalfLCjyY6A5o1A4/aTivEgJNrFe9cnuQd
ysgGDf7LF6DDzBkIXw57UQvWxMBVZXQqqWv3r3nX3QUmcZwtKCcjpGmKDDIY
avKUOWtPU8lB9ATDk6a2aMhMSHiXxPLt+R9a1n0hWcXltf4B8o82Xu5TuMS6
cOCHekVt3YG1n4FUbETC8TtlnfZfpVKWFtI5iCfR63tQDOjpEs94T5nxdhU5
T41WFBsKAp3GRRRpRFapLrs1xkcexARPnQW9mTj1rIVqL4Bwk4aAdkun2HX1
879NkwXFrdp3i3Yp8vYcMkuKffi4ROdnfWP1zfiw1Mnj516+fOMGOLCMm9ey
4ZS8npF1PRsdjjnXbuRey7h+NTP/Rjayrys37ly6XnA762b5lbOlWSf+/vps
UAF2YkI8Pd/89/v51RoFoZeT+bf0TETBjkUaJI1dGY/Raef1hXMHxSelFoO/
69/9WqgSmobieoNq69r3PZwZn5Cwq0WNWghfOYEOY+WBKUoqA+hHam3a2lUe
MsYnOuR8QRlGJjYs7UJHggKtzAo7kO+9tea1AYl+zE87T0t9tT28qCPbh+V1
6PjAhwg+2USeyOZQZQwq9Nqn6ORIplFT+K+QTHRAMhhHcvODWbGhCbObesk5
yFJpBBwBsVyPvjpjqp+zP+M2ad47NcSErCbcjaAVy288EMK4otgwOvJsUS3Z
SlYCnNCNl95+RO7iybjJ4qcWnd41NsYbCJCh0RcLGrR0GJwNmBoGpS0ve5Jf
gDPj75XwcFatBufwCTvSZFYUL3vx4Wi5z6kr5dIUAD1VO6e5HTrYiO8of3/e
aODfuvgwLiGMm48r1m9HBoRwigv+C9aJdwVWiQvj5cr4wPEoZ2T+6H2uWKvc
Db0FgTJZCOMU6hc++FZRLV4ozJ3DBib24fjdC8mOYkh2CecN9GL5xUfDXb0B
xiecrGjopkNAcB3ZqBbv5Ez2lLs6+bgmDcspLzqZ9o03ujavxJF//bSFpmcI
hrOK6sp9a95wR1cV4PPU6//YvG8HOlh8nYNH/v2rZpZG2bjRGu31msPfvA4F
UN/oqYu+a7FzBXkVgpZ11zZ6uMjGPvUG0P4JlOVMvL3EJo0zkyBZ/0uXv4dk
AnmGCJI12SGZ0g7JbHoDtRO1ePvsGH+EnpIHP79cIWCXYhNwto3tqcmZGuEW
DxXtgecKamhPJQhFcghCqKvuTPR1CkJ3HDvu0l2z1DStg/Sg8vqe1UtcGCe3
kNRL5e1KOrRd76BC0T8msevWh89GM6Hjj9+oJ40pUMiCwTdm0mBrI6RldIxa
q1tKLriDIYUxzq6MmxsowqPn4cSgc9DdGczMWYb+i56WCyTEGFdsd3BIov+D
3ALQmGXEJuUg+O0Z/tScl5B3MPM0uwjuy2YlXoeo6FG2pFmdn7ELQbLPN/96
f0jGNZsqbjzoG+DBBI+fu6qFzH+EbJWWJcchbGwBj8oyaCsLpvki4w8YP31V
O0ehC3akNImOokhgqnGK3uq8cT4+ySgwfvbLdoxbOB7TvTleoqlg+zdXF2Qc
Z5xjhj75Xgcl1f8fv1iWQjK+Vew4Y4dkdMSSABN5KAAQTDat6dRXL3mhlY8c
hCJlI/WYVl6aMEw2MoQROsXOb98DSJYw5eKdGiIOQGq4oqri6q7/ADHAM2n8
i5820WGTuO6MnpKq6sDXS0Hc3jPksaXf1VHOJAsHiqZt0XNTo31l56/eUNLW
DAhbJUgGvl0ghChO33XtLDSzOKNQNojxcPdyBpthGC8v4sGQZSFrA8zlggxP
JoMfeskC3ZhAuZMMeRu5E3F0EYwr8mDIwEKeefZvZnvkJYp2mPEbSMaKCktn
41tPzkOQrLfHRrNPsHpAqMbCFRauIGOcvzsKsBPmr8c9XDyGZDDJBm8SXPkA
QaJWMf/iZHko4zEi6bmPgUuGp2BL/aIwypAMlYDPV9fu+s/bELqGx2WU15Ps
nJEIHXNQv0DWhj2qoip9d4iMmfzUP2us9o5jjgrpiP/LrOx9IVnplfUYkp3v
tBcucU4GKODIMyir9n71gQeujp0urGkT6epiL27B4ve0Am4WO9W1GVN8vYIw
l+wuOU9tFuIr8ZmIy6EwI0Otr7wxMcDLnwmaNP2DuxT5KLHyDBi5kexxm1Js
vbR4/nj3sORfr3dSOQis+kiJ7pg3RXIWolhXUZjpCsr3YW5u/sicZPiIBI+E
XRnDuDszLvA4sJMC5WmZB/KiyIN5uMO56e8E/CJ4Izo03f0Yb9/H576Cp5gZ
7oVk9nnZfSBZx/U35kiQrJ/3Kx1IhBXOivr27WveQwseEJl09lalkdYUpKko
4PeA7QY3re/Z+90HcLKHRF4sxrI2nBE9PhbvUCkQtgBfRV/6zrOjon28zqTX
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
tIucwaQ4DsEOpElrJnLDY75WMRcy96IjsCfBxaMPMkX1RYy8FjrndnvFBWzD
Y5yMIubW4VYbMMpTDDCqtszg0bBWzK9imh0T/W+LwxX5u1SKZoo6JcP+Kdq9
uQSFvVdqE3VxHQlXoXbI851RY510jKFbM5FWc83Lm/BQPHa+mqx/f35pO3mx
iXIx25j2Foy5cZkqkrmqOHvpt0aOF15qDghhgwfnvpGA/lfstuAGcCAwZHI8
PzHghAymRgkKgDaiML2BioVgEWoUFbfsT1gwS2dZkdjNJAGCSZQtRn0f08c8
xnKPkAzfLM1oCnSsdMnhzbgEC47boB9T7NeLa8KQjNMuklDgECqz5Zt4afLf
9vJ+kdqAXgg4z+BSiX+rWspt05zi28bx2ZFRo6utkoMrrGYaHQrWFPvFofyF
6DprqPHwTRi3JvlvufZFIXBMOaDlHNRnuYAxgp357iGy3SBZKaWUUkoppZRS
SimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRS
SimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRS
SimllFJKKaWUUkoppZRSSiml/H+X/wXU87SN
    "], {{0, 106}, {817, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVlwdUU8kax+fem15ogQhICb0JUgQCSAk9FEE62AhJCKGEkAKCXRFXcC2I
iGBFV0AUXAsgi4pYsC2CvS/IoqKuiwUbKu8GHmH3vfPeO+87Z+b+8uWbb76Z
O3PO/xqlZEelwgAAKQHtojh5LImEkx+thv6IFUmFAhGfxxbJ+AK+hJkCoc6b
FLQDlJscsTgTRqOyRDJJVJAvIyExiYF/AhCgAbSANWBwuFIxKzIyTBE98fy7
fbgNFAnBDVtFrn///7+aOo8v5QIARaKcwpNys1A+hrY2rlgiAwARo36TPJlY
wWUoa0rQAlGuVbBgnNsUnDLO3WMxMVF+KP8OAIHC4UgEAJCHUD8jlytA81AU
e2Iv4glFKPug7MVN4/BQXo7ytKysbAUfRNky5S95BH/LmaLMyeEIlDy+ljEj
+Aul4kxO/v+5Hf/bsjLlE3OYoI2SJgmOUsyn2LeM7FAli1JmRUywkDdek4LT
5MGxE8yV+iVNMI/jH6ocmzkrbIJThYFsZR4ZO2aCJdlRyvx8aUD0BHMkk3PJ
M2JZynn5bGXOgrSY+AnOFcbNmmBpRnToZIyf0i+RRylrTpUEKteYJf3LuoRs
ZTyXM1mPLC0meLLOBGUNPL5/gNIvilXGi2W+yvzizEhlPD8zSOmX5kYrx8rQ
wzY5NlK5P+mckMgJBkIQDjiAK+MvlCkK9ssW50uEgjQZg4XeGD6DLeLaTWM4
2jswAVDcv/HX+44+dq8g+uVJX047AG7FqFMw6eOg5+DEUwBoHyZ9Jm/Ro7ER
gJPdXLkkd9yHUXRYQAKqQBPoAAP0/FgCW+AIXIAH8AEBIAREgBiQCOYDLkgD
WUAC8sBisAIUgRKwEWwBlWAX2AtqwSFwBDSDNnAGXABXQDe4BR6AXjAAXoIh
8AGMQBCEh6gQDdKBDCEzyAZyhJiQFxQAhUFRUCKUDAkgESSHFkOroBKoFKqE
9kB10M/QCegMdAnqge5BfdAg9Bb6AiMwBdaE9WFzeDrMhFlwKBwDz4MFcA5c
ABfC6+EKuBo+CDfBZ+Ar8C24F34JDyMAISN0xAixRZiIHxKBJCGpiARZihQj
5Ug10oC0Ip3IDaQXeYV8xuAwNAwDY4vxwARjYjFcTA5mKWYdphJTi2nCnMPc
wPRhhjDfsVSsHtYG645lYxOwAmwetghbjt2PPY49j72FHcB+wOFwdJwFzhUX
jEvEpeMW4dbhduAace24Hlw/bhiPx+vgbfCe+Ag8By/DF+G34Q/iT+Ov4wfw
nwhkgiHBkRBISCKICCsJ5YQDhFOE64RnhBGiGtGM6E6MIPKI+cQNxH3EVuI1
4gBxhKROsiB5kmJI6aQVpApSA+k86SHpHZlMNia7kWeTheTl5AryYfJFch/5
M0WDYk3xo8ylyCnrKTWUdso9yjsqlWpO9aEmUWXU9dQ66lnqY+onFZqKnQpb
haeyTKVKpUnlusprVaKqmSpLdb5qgWq56lHVa6qv1Ihq5mp+ahy1pWpVaifU
7qgNq9PUHdQj1LPU16kfUL+k/lwDr2GuEaDB0yjU2KtxVqOfhtBMaH40Lm0V
bR/tPG1AE6dpocnWTNcs0Tyk2aU5pKWhNUMrTmuhVpXWSa1eOkI3p7PpmfQN
9CP02/QvU/SnsKbwp6yd0jDl+pSP2lO1fbT52sXajdq3tL/oMHQCdDJ0Nuk0
6zzSxeha687WzdPdqXte99VUzakeU7lTi6cemXpfD9az1ovSW6S3V++q3rC+
gX6Qvlh/m/5Z/VcGdAMfg3SDMoNTBoOGNEMvQ6FhmeFpwxcMLQaLkcmoYJxj
DBnpGQUbyY32GHUZjRhbGMcarzRuNH5kQjJhmqSalJl0mAyZGpqGmy42rTe9
b0Y0Y5qlmW016zT7aG5hHm++xrzZ/LmFtgXbosCi3uKhJdXS2zLHstryphXO
immVYbXDqtsatna2TrOusr5mA9u42Ahtdtj0TMNOc5smmlY97Y4txZZlm2tb
b9tnR7cLs1tp12z3errp9KTpm6Z3Tv9u72yfab/P/oGDhkOIw0qHVoe3jtaO
XMcqx5tOVKdAp2VOLU5vZtjM4M/YOeOuM8053HmNc4fzNxdXF4lLg8ugq6lr
sut21ztMTWYkcx3zohvWzddtmVub22d3F3eZ+xH3Pz1sPTI8Dng8n2kxkz9z
38x+T2NPjucez14vhley126vXm8jb453tfcTHxMfns9+n2csK1Y66yDrta+9
r8T3uO9HP3e/JX7t/oh/kH+xf1eARkBsQGXA40DjQEFgfeBQkHPQoqD2YGxw
aPCm4DtsfTaXXcceCnENWRJyLpQSGh1aGfokzDpMEtYaDoeHhG8OfzjLbJZo
VnMEiGBHbI54FGkRmRP5y2zc7MjZVbOfRjlELY7qjKZFL4g+EP0hxjdmQ8yD
WMtYeWxHnGrc3Li6uI/x/vGl8b0J0xOWJFxJ1E0UJrYk4ZPikvYnDc8JmLNl
zsBc57lFc2/Ps5i3cN6l+brzM+efXKC6gLPgaDI2OT75QPJXTgSnmjOcwk7Z
njLE9eNu5b7k+fDKeIN8T34p/1mqZ2pp6nOBp2CzYDDNO6087ZXQT1gpfJMe
nL4r/WNGREZNxmhmfGZjFiErOeuESEOUITqXbZC9MLtHbCMuEvfmuOdsyRmS
hEr2SyHpPGmLTBMVOlfllvLV8r5cr9yq3E95cXlHF6ovFC28mm+dvzb/WUFg
wU+LMIu4izoWGy1esbhvCWvJnqXQ0pSlHctMlhUuG1getLx2BWlFxopfV9qv
LF35flX8qtZC/cLlhf2rg1bXF6kUSYrurPFYs+sHzA/CH7rWOq3dtvZ7Ma/4
col9SXnJ13XcdZd/dPix4sfR9anruza4bNi5EbdRtPH2Ju9NtaXqpQWl/ZvD
NzeVMcqKy95vWbDlUvmM8l1bSVvlW3srwipatplu27jta2Va5a0q36rG7Xrb
127/uIO34/pOn50Nu/R3lez6slu4++6eoD1N1ebV5Xtxe3P3Pt0Xt6/zJ+ZP
dft195fs/1Yjqumtjao9V+daV3dA78CGerheXj94cO7B7kP+h1oabBv2NNIb
Sw6Dw/LDL35O/vn2kdAjHUeZRxuOmR3bfpx2vLgJaspvGmpOa+5tSWzpORFy
oqPVo/X4L3a/1LQZtVWd1Dq54RTpVOGp0dMFp4fbxe2vzgjO9Hcs6HhwNuHs
zXOzz3WdDz1/8ULghbOdrM7TFz0vtl1yv3TiMvNy8xWXK01Xna8e/9X51+Nd
Ll1N11yvtXS7dbf2zOw5dd37+pkb/jcu3GTfvHJr1q2e27G3796Ze6f3Lu/u
83uZ997cz70/8mD5Q+zD4kdqj8of6z2u/s3qt8Zel96Tff59V59EP3nQz+1/
+bv0968DhU+pT8ufGT6re+74vG0wcLD7xZwXAy/FL0deFf2h/sf215avj/3p
8+fVoYShgTeSN6Nv173TeVfzfsb7juHI4ccfsj6MfCz+pPOp9jPzc+eX+C/P
RvK+4r9WfLP61vo99PvD0azRUTFHwhmTAgja4NRUAN7WAEBNRLUDqptJc8b1
8ZhB45p+jMB/4nENPWYuANT4oJ8aywEIQzXKTrSZoUxBnwoZFOMDYCcnZfun
SVOdHMdzUVDViP00OvpOHwB8KwDfJKOjIztGR7/tQ4u9B0B7zrguVxgO1e+7
x75eLlkYgH+1fwByJRMf
      "], "RGB", "XYZ"], Interleaving -> True, 
    MetaInformation -> 
    Association[
     "Exif" -> Association[
       "Orientation" -> 
        Association["CameraTopOrientation" -> Top, "Mirrored" -> False], 
        "PixelXDimension" -> 817, "PixelYDimension" -> 106]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{817, 106},
  PlotRange->{{0, 817}, {0, 106}}]], "DisplayFormulaNumbered",
 CellFrame->{{3, 0}, {0, 0.5}},
 Evaluatable->False],

Cell[TextData[{
 "As shown in Notebook 9.3, with this mapping the failure rate proportional \
to ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]]],
 " is reduced to order ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", " ", 
    SuperscriptBox["p", "2"]}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "=", "3."}], TraditionalForm]]],
 "  In second order concatenation, the manner in which  physical qubits are \
mapped into codewords is repeated so that the new codewords are\n",
 "\n",
 Cell[GraphicsData["PDF", "\<\
9E14ARda;SD:9M3DaMP:=B0`86mRJPXl?0X_C6E^IgAX838i820P820P820:;dIY
K7AULR0_AVaQM6E4IF=_I6D:?Sh:LgAbIF5]2WSJ:n@bE300@PRIW<^UkiI[Z>2B
caG81@1:;0F32VE^I7=dLVEQK@YUKVA_HVX:<R0`86mRJPXl?0X_E7U`IB0_F4mR
JVESM0X_DgERM7U`IB0_AVmbK@X_@T9_N21K<20`83@`=20a<3=M2Rm6Kg9]E7U`
IB0a2Rm=HGAbJGPPFc4P<20`834P<20`G@X_DVEcKgEbHfEc83PP<21B2Rm<IFiW
M6PP<cTP820P820P80X_AVU/M6Eb82m6K65dIDAUHfmTI@Xn?PYcM79UHFd:N=X[
i39D<012@`EM@g<5GB<SD`>5i5`^OLmL@`FGO:i0;P1/C0Ja2VE^I7=dLVEQK@YU
KVA_HVX:<B0`86mRJPXl?0X_E7U`IB0_F4mRJVESM0X_DgERM7U`IB0_AVmbK@X_
AVmbKEAiL6DP<@X_D5A5F2i6JFaUCV5]IB0X;gIQLRmVKfaTIG9c;g8c;gMW<6dh
K6@e=gLcI7Id=GLg=35/L3Uc<30`<31WKRmD;daQE6EHJE@]<Rhf;S4_K65dIGQY
M2da;C8^L6AV:@X_D5A5F2i@HFMUCWE]HVEb834:;e1DAEP^BFiVKdAYHg@P>B0`
858:;d92KgPPFc0P<20a<c0d838c=CEM2RmBIG=_MG9SIG<P?3`:;eQ?HVYUHg@P
?3`:;dI]<B0a<20`858:?Sh_D79_He=UM21K82m@A4HPG@Xn?PX_C6E^IgAX83De
2Rm6JFadIG8P;dI/HGAUA6ESKfAU2Shn2W=dLVEQK@YhfS=D<012@`E34ce;4a<5
8b<CLhGTG:i2;V<m<k0DS0H;6T9E@`GdgG8=5Ecb^@:14001<0i02VE^I7=dLVEQ
K@YUKVA_HVX:<C0P<21_HVX:?3`:;eAiL6DP;eQ?HVYUHg@:;e=eHWAiL6DP;dI_
LVd:;d92KgPPFb0`830P<C4c83<`G@X_AVmbKEAiL6DP<@X_CF5dLVUh85/P<B0`
830P<B0`831M2RmBIG=_MG9SIG<P<C4P<21B2Rm<IFiWM6PP=3H:;dIYK7AULR0_
AVaQM6E4IF=_I6D:?Sh:LgAbIF5]2WSJ:n@bE300@T<5GB<C2ce;Bd/5GC<SHb33
@R4iUd_O<mM@`BFO:i0;0:Q526X:IFiTLgAbIF5]2VE^I6mRJPXa<R0`86mRJPXl
?0X_E7U`IB0_F4mRJVESM0X_DgERM7U`IB0_AVmbK@X_AVmbKEAiL6DP<@X_D5A5
F2i6JFaUCV5]IB0X;Rm/HGAUN6Ud;C4^L6AV:@X_D5A5F2i@HFMUCWE]HVEb834:
;e1DAEP^BFiVKdAYHg@P<C<P<21B2Rm2@Vmh85/P<20`83Ha<R0g>C9M2RmBIG=_
MG9SIG<P?3`:;dI_KW@P?3`:;dHa=20a=20`858:;dHh834e830PDPXn?PX_D79_
He=UM21K;e14ARmDIGQdG@Xn?PX_C6E^IgAX838c<0X_AVU/M6Eb82m6K65dIDAU
HfmTI@Xn?PYcM79UHFd:N=ZeTcm[@T4@a?_k55=ZhFIgkloKJ`DC/0]NIj`R2I5H
Y?;[Nlo;PhL88Sb[6kRIga`<aoP6hlgaokT/k^EE0S;UY0WU2aZ<TTBT44T=IHo]
k33OUKEK5OOWY<HH0Xe2gSaBm<@ih_?X]S_6_Uj^`NBchGBa7Q4XFaokaLJm]dHK
5`jTDB7gQEL?6c0G`lmlXIg=?URUZD=;S<5BYLHQ`G`;:YDJ`YRZFZVRCMfR6YWT
Ye3]<FYeH272946[j2QkOgl_7dVBWf8_kLR7[SG:m8>9b1<6ViAZSe7kDOSZ0mJA
cV`AaXL:IFiTLgAbIF5]2VE^I6mRJPXb=20`86mRJPXl?0X_C6E^IgAX<B0a=3Di
2Rm<IFiWM6Pb83Hd>CH:;daUKVMdJ3<P<0X_C6E^IgAX83Le<30:;dIYK7AULR0_
AVaQM6E4IF=_I6D:?Sh:LgAbIF5]2WSJSGP7E9?KdSKB@GZE7Y1N0dS_7JAg42TQ
10R414SX_AMA>]84@NU8THhDYDY_dPA1VWBY0R;85cfNNnniokoFmjf/UKakiYWI
<g^NIbL[7:`6aP9:3PQkR3X2SQ8@5PA:0eAdSBf5P@0PD5@@21@Qi>0`PJ9PT;o]
Q1aV44lT506GoPn4RRL4Q4;KE44X=50G0@OLmh81Q4D1`^;B`Q;B@21010RDnQ^8
l9@6Z8:lX@h0GD70O@@LPRCTD46hngU2WIaAj7gnOPA`PgT0`U9B4_bo``5:KQ1?
:1P41nR2D<h@=oB>H10<H8`0@b4X_gnTh9IeAZ7LYHF4O7al145^B464Yi<l3co0
1hYb1QQ1T11?KhP3h5O;03f@6nA?Jh:4700CIbSb;hLa`Q7U0o:40=0661@<PB?A
8Ei`1hPW0;dk`5Q;1j3_3X7o1MKi2l0?n7<h0651hGnUna?m:a4DoS/H10HSg=a1
L3lXg0WP28E10?[Z>X8XGa@o00Agn0D4`I08M3c86`B5PNcAP=nUP`3ZBXH04;[3
?odQ`Ii@MaAB40V5oNYAj5LJm36[`AeD46i^43P:BOR[?UFX9`B<?WLoXCo3MHDS
O>01OjlLXG07aem]>7Ri2iW2XAiN42gE?aRdRO3O=RL82R06U18G5a<6@3`045n`
/m2_3Dclg26oWKo=j1j20]`AkP17M1^@8:PS1?e16804ND<0:4l_B530Oc[n^B8D
5PHh@<4XP3g42@XWo7Mf]1WRn=LJ?Gm?Z2o02XRVWc00n>_e[bM[=<<L472HgkoQ
_dL/I:ZVIJZ[`_NWiGliUIDA_X000A4YP82D>10P;2`/3Y2@40<4oC>?0@SjYhko
R=F2>b80DWnERcjW_d_fo/<1kSl2h@7l<iLN0/eL283kgdAo21@3P]5_`_mW^_l>
nOnao5NFoiGXoefA^QL<m]_?oAOPoo63g:0`_cl8=7>mD6PEj2;@FX3o=m@LlYMd
MB4>D2ngooIZXD1X=BS1WM2<5Q2n9`RlmiLMRUB7nT8L3:0X/?=O[?W;K_Y;Kc0X
76:0@49ogC3X:23`_gaXTH5MdKL84Tg=gbh8FT?og5L=3THho1:KR9Ph0>CY2O8S
A<lJ_A8310RSENT0lOe=IX2@81b1@XL0d3d60A`AWXBo1R/<50<8PN1>mYhP/2/4
mMO@d8PoCW60T3g8lcl<024`e1<<PkQi`E1@Mg@Aog9908@P7Ui@Ka0<0TMch9Om
7iF2_C`mdK;mCBUd6gn_OmlA48P_14`h?h<0bdBj_8i/^jQAH_0Af1S1GEkYR4^b
k8dE@g7>?Pm`e/7;eYSdD;IcN7EWj:W1G5Wda4`P0noGRe7OQnmb`iHb=?=A66Zm
JlZ70PD3gdoN>D6H7A3dCV<BCn?Fb0nB3IU8kJb`[KQBcFN^XRBjA3N[_[blkT1^
?Y3J1KP1R/o8F3<HD8nElSYf<AmI/[:_X0H]7i8mXO2db_@bdC8M^lIl17eb[]bF
@?OMKlgZBMKPYdo_Lo]jWhXN5fYgEh^oRZJTXo:ociXgU=9?AifLNkl9RL6Y;7JV
DYJNa4IGi1K=^HAU9k7dHjZ`kdeb_jQGPi>NB]Q]oN3QAZljQ=R<G5kGdS6SkGZ>
bGLQhS_=:G7>o3E?fIDiZQd`cPHc3jY5HOWMf3C<0=bjSXDKgBU4BNViY@kValH4
_>08DI/_hgL^k1iW9`^;F:O;`BCk?km@5SN0<K/?>IYo_99=1e3BLe0JJ67Y/KZ/
N0gMiAOlmZ8GFV71TPXogFYngcKH5G>8H?o:A3dIUVCAW[gK/i?LY2EfmX7LS5M=
75F[?H_X]>E9c4^L2S7:cl<fN=>Q8O=0DFY^W2gAC9Bd`8AleTAW4b=CSl1B>TXY
M8Z<Q=;eJaUCeLM:lN7WL^7=L^VBXL3PQO73FjZ6NhUT]F^g3K^nhmPTfG/N2XWP
ffSWMca`]R_AhkZ?^YL4KMa=^]YB]Y`<>iBHFLYGoVTJHT]I6_``go7aSbOO=TlK
3_8]U>YR7l3RdSXW@mI/G``c]CoXNl:HnGIl[k^M:ggCEk?QlPckT=9nD4>jWbfb
25KAV2SFZ_:YSc[>e:X?Y==ffXc_fCG/f7SjWDSHjUcVgWZH^leFPmj1nhmb3fEE
00DYeebDU>SJ:me@CZT0K:9H/a1EhVnB5<BPlHI`TAVh88JcHb?Q>Ta1nb==hJhE
nj?VN?:jB`gg`k=^aTnD[KF<@_OkoL7WF4GQjY8o_0e45cl;FNR;_oMC@WCFOPgN
gK@fmf1@3MM]`Hfe_;MLLQ;MC5iXVCPmG6QQX7JXLbfbIR_BL_]EBaU2<cf0D9SF
Mi:>JV27Zk?=Rbk`3H;hh^cBG8n5bBQK;NfhN3n[9G4:lo@7ImYJ9Xa5oHKVHHP>
>JJA/g0E/gZNoE7aZk4P_QPH/LZ5=J2hJ:6;6cnBdM]a6Q71icQf9eMgMinU;^PL
Y/08iUf:IO_jbRK4Z?:;MKUKm3[I1fQ9Y7Jio/3T4eJ]f`V_Yekof;cccHSlYbeZ
bU`VZg?h:;?OBi7kKSV:MkR4L^ZfjO?LP<2eKml<Pd2R6nZU<:cdSQ=9Gna:1[bG
TjPDCG>UdZiGZc9e[1o=U/Io4Z^d3U95V27ZWRih]nK]YBQdeJFab:CUe/X=;L[c
AoJ]UEAd?6B[n=jHWTdkHKB?hffTTSiGQ9e[Z>Y<B4LbYFS;WmM?<iA;f^i:@O?H
gQ6fZJAeHF23FEjGiC>OCEW/X3FPjNo:3ChGSO3mTL@L?a2fIcaXJZ1EiaRP?EXf
PZB?8_XjHUWME[0_]>Om;W7<ZZ3Uaaac/`j7OX7RKYIVA7@ZQNbB0MNCnbn65T:l
TjOinmS[fIa=Bg@EC^]f5EIBgGUW8RFlBFIYiAH<Q951JaZTZHX_mE;4K0i5dn=<
=^XT7E^S0OAnQ/Da4Bgj?97ea9E0RJT_Ta`TD@BA6T@_;e><o5m@WY`hKPO4S=^@
ZcX_W/Z^5`ITIJdZY`o]c0AM_^fKcd>:>7:YW?P][MKHmUM=EBUJPiTUDf_Qm18N
G15dGfiYaekMLmFGXmgoFJ4hH`Y8:Ef4lGlb@:PmFZ;mhX[i8H^GA0;O0l_Z8b_^
g_UUdnSLe]A3a9]`VeWf9/j4SI=SJg99F7[RNQ>bQC<blYe@d^ZZ3DlfZlU6CbR8
n0AcYO;[o7SM2TeH^c5KPDcRE_ZEU`f6LAbQT]QaU[Rb7?U2XCMl8L]T3OmEEV;]
F1]Ke<Ai6JFe4>j8@4Q@@>a4gh1RoU@6gb?6K2S9[N/b<6SD7Cj`/5HomGTjX9aH
[b`Lhl2I0oVmO?/`3h3A<[^Rmi8VO7fSd^cSnVQoA2NX;=_jM4]QVYl8LooH7UD0
Bled9Q=?_]6?mNjb;L4efQj^TdXb1]QP6Nbc6[ZO4ka;HSQ_lA@oKg/WDeCg86>[
/foMNhiIbYG8So`9CH=VRYnk3;gZ`>`J8=F5KUlhMecjd2SB^_9CS[foQXX26dMh
8>ACT@o[EVg6R?SSXB8SPbgf;dd]dSO]7gP6fYnXgIgK:W;PZ^cNj6@@J6TTNRn2
8LC@2n0hNQ8D<mo9T32gB4_T=QAEoN2:_ZM@QdAbk>gYo6?`d4W3689Z7[<b?TM7
/nQ3ZoKRjDUS7ToV=cb??;kI1K2UGg[_b9^Ro9aKQ9Bf^/<9egH2RWEh@0Xcg6/6
[]?L/M[a/c:DLNW0Be87QDne5]CHU=`AUQ5A?NN^N^H=UVogeNMT]iB3jS:fGN/F
^_6FSOJi?dj?fHS<LI01<IF^[_OL8]mP98bBK/<2gB8@Dnogb^kA6FjdD[n:;?1k
AQVHV_SAVhGRP2lhjFDnLdnJFP?hbHOGlePY^Wfk/d:_cYQXMU5cDEQGVY3/j7T3
UOY]Kkf_Vf`JhT54aG_4Go7blj`KQ0^DJ9?N9ZCa1FkFL:ngV4dO;LM[U5K29<:e
7AW<ZObG??=]mnEnJ;05L9GO6hZfd0DDLgONjDj_SCjPlaMJ[6^LmioDjGh@6MPB
YgZ;^NnN0>Wg5J3J_W]S??d3hl_V4jGnUIQ:o=Rjmb]dLle:jfT]kmYA/8kJDLg[
0R/<Tc1Oi:Q^8E>D@Aa_oG<8Y2baf;6h0l?7mF?<7NH;CF4N2OcBA2SKho7^Pg1f
8=?Lck3jRVhc1FPW1DFLolVVI5m_H6NA_<>=Rim9m^>`kPHc]oh_CeOX?4Z6WE@6
jI9?TPoVg[IVgi;bagVcHA:[/Q@Re8<:KTg^cHc6:D4`lNhoUD[XlabKeWYDP72Y
=]gG?Z?dMBUX5BCPaafih;<G[YUiODCD[ID3DmDi<7b09AYfgVPP04NL]QfgLlV>
FkH_hd84mXB5;TPBlRG24WSEa>hnMHPiNXUhTQ5P[E8^cohCBig0ghUe?9Kg1J8E
H`[79Oj3P=j?/?fAXY5GR6?9a5i]7d>WChoMLgV5KBQ9`PEWhV>OSGK]eQ;YV<D5
Wkjo^KY`8jJ2PDJ9[CVXmPCIR^fBgYCIEQTf@AU3j=OMgike?V4Na<=3YV2:n@UJ
A2AR<Dj>E?4LOF4/=2WHabPnLa3FcRmd[JPHSWOi559AR<l01o[CUV]D<Jf`N<@e
9Nj2b/`=]cWl8jO^g7oM<VOaT[j`BaBUi@O/jGPQR3ee=jkG:_G^BjH8eK]Z7l9C
g=f[eGT[B[oE;VEj7gSZCcV<`RGP]enBCf8iBTG`ES?/FDQojmRDkfo;U^HMFM9Q
L/@LNDcM;IG22DYaTN5S2Z1n0h`Qh1WoZ9CRe5fScK/CIZ7MQKUPe/SU?ooPI5R9
jB<?0Oc[fMS]^VVC]SCbkZbT1IgAII;k^`O7fcJZd=9[Zn93JJC//lEVTBkF8jXU
diS;`1b<S;^hglG<8WLM9dcSMc`<`X;>[bH3iFhB/]6oIk[4m0<=^W6gT=UBAbG<
Ch;F=e9i2IWhW=bE@_U[n=o91KYDR8RAZ`b4BnAlVbI:>LRXKWPjadPF8[P]Y5k:
`33@<P@/c40IiJjdaV<:/S7j@8RLjNTjB@a2Wd?FImcLSkoNSd7D:mKD[VJ4gMPN
kRQ=QXRF[1YBKgLZ<i^M1[<OBZTE]]8T^LPA?[9F05A/?@_``JVf9ADC?BmBonXd
eEUgkiUbe]IjcYiBJ@G5B[_7jk738E:FiKM;4oLJl>:IHehVSGlE[S9`_?>1X?:4
OlJh=eolM:d=Qo6iil/BZnA?kkc]?Q>e=MCnN4akfQWRNjk1OY??45Vd<bHHE=0b
NW/h[JVDMW6/@gdT:`eLDi^M72igimDkAeKJFbbl@ngUP[Q2Vcjh?G56TZgLR_?c
Sk;mRL7=kH[MNYaJKToc?[f@]f1mkiH>>AYD78GAT9SO/4fJZFQ^GCbCo>1:>if<
8n]gTJ_WA@a:`m/Y:Vg_5Bc^>l14jMDGmLC2A5jC=K/ZJEW7l=3ZGY26=1XGO[Va
c9R7=m27?lK5cDZLiRcU]GW2e9o<M@EFa21M_G?5fC@@:;/lf__bjGT7l`CmOPg5
cLil>ElJV>AEJ:=/@K0OUm/NDSK;M3]<bYgE]P>ca;3]hkMe[V:m78gjPaFLC7TB
c=kBTKL^e_DDl1=A2oWk1Oh:lj[kXG9j5e6gf^gQa4b?0caXkBfiiMWV9GVg7WD<
S;RFnXUN85KS;c0F0J4WLIY[GLB9ZSj[;AOF;d>9fQVBZ7LMWPNXYE0?5WDolPVK
Ye_98QMTYcIKfGBVAnFNnK^b^kZbFmoK[JK6?P@k=QMLEY>mDL4fce0l7S[i8O[/
k:Tk2lb`nWVZhIN/>6ckUE9Z8ONCF`dWcaU=DSdje2LT/FeoCR^AYgC2MbT=?n3M
5;YY?`WPm9NAWNk<``ec>ejcPTX<Sm7DknJn>>;RYKWf/0Pe^@DoA/TbC2Nh7P_Q
:iB9^=7ai0f=>IjfE>nW[j`FG_SMiEj[]^?h653>@5K2fVK8W2/4i4@^nkJL>VhZ
Eo1ECW/n>U1K?[12CGadd]MVO6chP_fBoKDL5OgWl=ULQAd7AE4`3iVeJ3Um1/W>
=><d1PN_KY0VHcMmeWIAWXb:`h^EC9`1CoMf^QYQ:YO[O7EbN[;>F70DTPVE_Zo1
MKjZlS2SeId7naG?6Nk?G5^FK?92W]YYkYK;W::6fkZj[H@=MI747WgNW8gEPnLZ
ba^RNQR=>Pn@MChV1Uh1bCC8]]JaVP^3_4Ml0/mNUAFH?WYJZok=m<:0kHgfJ7@d
GdGKY6D7A89B0ES1WGj63gEPH<SFZIMaL/FCNTO1KJTUT9@0/j_jmUG6KYYjlh_B
>;jVM7gElaE;CBIkhMB6eCNJo@7=?Q7mASJF4mUd9?b4cmWEBcmTJ:[>7i_A:kPO
hoU=?6fQ<USRD9Mk4mkEgjLLPg/fOeJPXCeWh5`G[5M_eHb]=FRk4a^ZPWmX@^>o
=>U8/4TP>iFAUW0EM/_^7_YKFDehiSiGfoG:9gJk82<2G=9`_8lQ3d]3bEOeA5`M
2d4W2:ok4Z;?@/QfjXnmEgHjCd>d5l`3LWFWUT@EIQ<OUnTNFgnG=ZNCXB;gITV:
8/_4/ERE`HUDITTQR2^aX4`D=5SATU78IcEi6@/@_=f4Y=W3>S>eGZn:B96K/8So
NO/jAJcnKGbXIjP^B]i?[SZJMbg<GPF[8mR6^1gEbj3TFE/0hfZlj2e>_cZimO3d
O2ioP54W37<gX/0PUE<2QB;5???Bl9OAM[[glFCR<K=<TaL?fgJMc>FRLGY6UgOk
d>7E=iGP>XG>na5_Q5;DfLA=1F^0lY^hV:MlRmZ6Di50>[K1ZHX9^Mf`8nCfdWj4
;n:nmLY/>N^`ciFhoRO1X4MiXJSMXA0al/=2/mFQ/SZnB_:RY/YGKjnH9>;[C97Q
fEDcIGenVa^3?JUh9_T9:V9G6Yi>ZjJh?FAR`nb9<DlC>0=[4Q/jho63dcmYU:o?
BNHmgB4^Z<KEmMiHiWJQAIE4[2d3R8o62^57ncWFXmJmQYS3iWNRm>NBjF?MB0@C
GSaiMDQPI=E1>ij9d9=e^O/5obMGn6I?Vo0[bSVB]c91;:B7D@me@ij1IkRUib29
]@YWDM5[U0nbkS5[ac[5H9OeK[g/:]/TYEA<b3FYC0=<Lh7>f3Sj]0?]3;F3?QNn
Gc_fDXg>CHdS2C[Q3;g^TI@B_9hYNK=YCnn]3>H;DN_TDb0J42^>iHA9WEZd6<R?
`ie>2KCD=jDE^U1YLdVhaZKjXn0n4QLA5CN[X/lEnQ;bHJkVUji5QFG]V4<FeE`A
[klb5M?TTU9gbIZF_9kEFi3D@CRh;21WBDC9H^B9/^hbd1mUC:2h;=8MZ:Ghe2AZ
3oGFLO6c718T0gZ]Sa?LFYh9aM3MkS/Rbg/cnhBjb87NVnjA9FHd[VG6fDlF7h@k
iNUf5V^FFXo1<`Ue1LBM/AhG0e:YeN=GK3W_W5:EhilUS?K>6gamLRZSK6>HZ5nF
:_ZmTeOi]VQMQ1Ol3AIkdk9F7lW>CKj]?RkTYmd7@YI<m[O;M^510U;DQT8mAA^j
MI3@?8FiMod3>i<e3KNHbOJLek6/hh_]3c/9[[OOk5CHkXS8CUb<I?CaHI?]XARk
bV^/aW9[HnW^5o`/deMlbJ6K[1Fn]4f<:VjHllJ=R9inB=lRI;lfdGf/JjI>?@PD
^aWULmGJ436GTWO<22Y[0Y2=Go@dWXZRHQX[KUX;G<ZSRk/3fD[Z_ianCIXQc>lO
/::NdXUgc/MlHTU1GLLcQa2CL:ENoYUjUb<4Cc?U8@IoYNmXh2Vb6^VkGjBI9j^^
CKjf7S>7<k;_G7:kiH7hn9dX33OnY@UWH`7c1aB995RSmnm`=MFL3lZE[Rojj6dl
Z`?1bZGSf2odaIH=eR=m^Vg7hmB0lJcJBj9ahd=/=Q/CgidlOTX1JagEn[QUg=WT
OPhjPVL5Le`eT?_C:T>kHF_a1?[OSgK]:0KaBmaC<P>JUd^ea6UE<[B_EK24O6ZN
^E7QEB`>6WmP[c;l`CbQXW=JN9;LC>>KjD?`^J>H:DZmNBT7Qi<hV2ebGBeEOR@j
/5763Y^dUlSk1lL5blMZ4j]ml0b^mD4h13>NCN>Y:Kg;hnD:g4Ron4>D]nnd]9N3
HC:=e`<oFj[G9Pi/ZND_k?TfgnU7Flo1ZWdoLhWk7:n9FkaF8N]DeFKFaj=k5n>H
`nfTj6?]F6bF=MAU]A<B_9/P[?imVmV6E4WD^i:POeDoag^bV[5Ai9Hg4J7oiHI9
lm;U473n4iGmgK>LFeHioWiS:M?/f13QbPGGJK6W3TI:NgKL_E6:0DUb>7kVlYf7
/N_bUlWEVgj:GgY_FTaG;_5oojG@[BWC3`k8>9CeDkJG:8>aL_XV]QkR:9K5O3Q8
aaM`:<1NJ?MJggV8dCF2nHD]<nBLbn_[H20eZob2j0mPoF?Jk[HG=]=EJGMhY[<4
0Y[d4e]Zm6L^ALR<B[_ZBGgOKngR/l@Jm^:OnRPkSBN_]UdKGko9bf6K;HOUf1nN
nL^de6IZnDdoE9_5NCNd4nO^FNZZBmBTR:_H1N5lne`d?A?F?AR7<Skod/?15;K?
/bGTK]Ao/CCo]Yc]STR35f6V6RA5k8:_Ikh6FO;PV8/NWjZfYNAKi^M=neS3eoBW
QcG6<8YlUmhc@18M_CnN=ad6fE;XJS278:Ffod<mZX;hb<f[]G<J]AdloSF8VLPT
^I`^;H:BQdXPk3jhgnccBnU9N]=iTHUVn@7Qf=WgZFbTWHKV[LlSm:noCBCOhmGg
om4Z26hnL@6WEEQbGRd_c/f=DBK^kLS]BU2TFMk9ZSnkN7nh`jlT1QoDFUJ?CaO:
EKPJS/mJ8KH68@G[mKP24T61]mn?B69O7ED4FoPHji:X8ePJ3UJ7FIcTPaOIO`@K
CCY]7dUg;AmLoPAaGffAO]3FJXkBQA8J=<B=if7la?G9iZ2oLC2l^]jWomCa@jmT
XmS:L6f[S<0`fel1HiGALa5VN^9Fmi1jnVEX`D0C=hL]nMP?:hY[aCZICnUii@F<
=C84OIH<56G=o1d/2URcflQ=KN:flP>=^2<a0YaHnQVUH5ICbX]B=UgR3m`Ynb2?
VUGKoQe;_E^O=dMGYZk[2JfCV1iUDG<?<`]eL>SfC<deIZZAnI?WUPR`WV4UgD8/
A4<j42/[H8Vjk8BK<^V>:enWW0da@Ii7A2_7WYNHL_7niP/Hm`PX^fn8ORa@2LM[
==c;;XlUml19X5_JneU4_WEOiV_dJU?e=i0cTj2YDnIhc/kX[0GkFRPWOJU[Xc49
F<;5[]^Z[cBCJmoggKYFU49I8m><9Ym@V<>M7Ki7LX<QA;gb<GF7UPe[O:?h5:=W
dcbO:fOXA]jcBGGC=LU<VTdPU<3ZdW84/mE=n^?:cP0nSO@___OCHka:if3176fi
HfV:3b9jZBjae3BoM7J45HVW>H451:GELD<J:=D/J0fN2[0/?6]NH[19C9M?0f:D
]jNnWLbEl4bO=2oCM/;_b32LMEdDno2e/DdBahIUb:^Tg/QM:5RcAMPDG_Sm_3<A
jeaFGl`LHjKlaK?LmmZ59ikMmhJMDnXXM9^Heb^3P4?dB=UPZYgWDl]G`[N?LNe5
iJTNi>dXGJnOEbR5m>7MTVRgh8/JJ_Sn3JnYKSKlX@j/`BYmg]Q924;<SQMJbWPf
Q7c19/NS9TD<2ZP5V]Kj_lWPNaZQ_F1@MN_A]F87:dhcj;:_VihWO2g/e;SZHEBi
UaQQgBJSI3bGI79@c;=?]<X^k5:<]:Bj;4@Y[B/CHiHJ?NU;gU]A3IlgiX2Yhi/n
PkR<i4aZVA5bnH6LKnNPRhBI9n5h8^`VRk[U@JXdZ2nd0/DOk3:BRgFC>F8aME/X
Y><4R5b=lAOj5W]aD`AVIXhRM[K>IA`D7@Od8_M>Cd2dhfn3;6ocA58nU2/GX3/=
/cMBngb3Db8^J>4SccUCIDgbdEPVadFmJ]:d[f0a7FDKhhCeh]kkijEhLdg]4dhA
2RAnEO`YgQ[UgFDObkj?Xfca:^I<J:^>UDMQ7Y`/kg/MYBIR^0o7GeECI;ao_Ffi
oWWBY6[Lg<oIn6iK3J>/NY/9oU97R^:4g@G3lol1_fR1V0YUKVAcM79UHFd:IFiT
Kf9Z2S8e830PKf9Z2S`l2Rm<IFiWM6Pa834c>38:;daUKVMdJ38P=S4`>0X_C6E^
IgAX<b0`2Rm<IFiWM6PP=c0e<PX_AVU/M6Eb82m6K65dIDAUHfmTI@Xn?PYcM79U
HFd:N=Z=M0Tde6ok=lTfT^a;hD_fMLJnICOfOLlj64b=6LKH2B4R4JF/FH/A8[:G
=I@enbikFB=[U_nd?<ococg_NlkkWSWW>oNeGmMmOChg=hNAZK2:2mX93TFS/<8@
4K0LX:I_0P43H;2h21P/1^;V=T=PTO2oJQ2g1AcSSD2Si?jGPaX63/?RMNX`;=i?
7hd2M7b@04@LP4S9@JCU`61030bFoILS6R<7Z<=l4Bj0_PRPPdK1_D7LJVS?00c2
cAf;;o>_8l3Wc0m0I6FUQGj70bXNL0c26HH2m65HMkP7_Z8c30VHXYdAL6c0?e;`
:KQS/IibXZ9nOWhR<0m_4CC6CI5O2?13H=d14kPg7><;M`5n3@`H`3cPObHC0G43
I^h8kcmjDk@[ePn6P@=h1A;Q34Mihb=lD2i`380_3YQZj`66WW3D7fNm?`i2`=nk
0B0RT7nWna_m:a42mC/Hi^b<m_24X@8@:3O05H640hI@?A6/?eH8P:5LOSW2T=iX
O3c<5hI0`Yc`3[lkQ`5@5F<0QQo`kgSNcQR49mIKa1^1o3FRj:ldn5_F@;VXXCdl
h2R/=nQGOnX83=`IOnd1XWlfNa^5mT<5oAEL4BPGeem3^?QhRYZS45hnL6ge_bih
5NPo>SLh5Y04Pl7B/^80g0^0nc^kRoi:KaKP2Om]Q?aBhbL82O94N`:^n27P8@QG
>?h?5>@=lhD3F8`??2CXOa_n:H4P4<05hH`5W>1^21CX?mWaJ[S[7aVoO0c27k01
hk470L2oO_lnfN7QiH968@?nhoik_j8gcJ0Ve_Z2ObKn]deE5Nd?10U;P05Q<DT`
0?T5<VWl8NBOJHaPR;m]o:mHKI@[6Y3mdbgnV_kE/NmO0?3m9@Lol<mL1VPlJ^40
ggm0KP^F13_S?i3oKjSo3_Vo8OaGU_lGb?nk8JP?4_WKc?OKoWnHHAh8I<1O1caX
OK1h0^RSlCA0oKN[9O`?JOGQ;PPOSonfJV=QN2:XX=b@oki6Q3LDh@mg<D9PWMgo
X>F?g_`Gbi085=`8kHghmJ`0`_SEo9L=CbgWfoRW`a/?bMlV>9hiobbYPG96^obR
V9RT5033H6018?bBlI8T40C1Lm45k_lKa82X20Z=aHL0n?5205Ld1_A[Xa:bP2Sn
LOZUo2?;0::1L0cj]n8OUIam<1PlfGiS0Mo6_nCOc8K3oN7>X?4A];=li:f:b8K3
ebYGoHBGNVl<LRmI?^<G3Q[7=?XLGbIm`UnFLGLF/jobY:_Ub]B21]nNlPCkJM1J
KBEYM5fbLOg?h1>7AbH3BoFP/Gj63ggiJbY_fUW9[`VK:Bl7WgX5FhCO9ZXUO:o3
WNgU8g?I:9Ofd:m=dom=>fjbnmk8T_5bVI@^a@W^/g2ln@?Kl9M3g3U>VL=<W2AH
HEHb0IY]OjZQ_Oe1V^Mmin`jS`A18N_ahPE1=nO47Qh=1djo<Q?cKV;VH[k9a4Zd
Am<m`1>T^YZR`cPJE5P`mF7<_eJQP?diYM3C:N4[8Z]RjFD8TcQDMF^iKoOh>lQR
mQ<PT_OZ1m[5i?:RJSX73:LQOEVm@a`]]Ucl=YaemIf[jWC3_TFcjjfWebIT?kli
1hHX[MgG`VZJPgiFNTegOO`PO73_JMeQEoG7QNH@biM:kD[Gg?`P0Q[^=[5CTg;Y
[4n9LMRN2dfFL6fj:d8C_TmTCXQQD@Y1Mkn[7[=0i_?1h9/ba:f4gMLf9K>3_cl<
:JWJ=WPg=d@mR_BS/H/hSi0b>7MjogAk>ioIGEc3<N<NGdjjA_?mW9T4GV?i2WSE
D0A>M7^^Q454_BR0GBmYGW;/N`MGPHBfI^_BJ6UG[>gMP5]7/WTRVaHUi_F9TWW6
78_[LL8mZeGQWJXADFfbnbj[lo_5aJ[fm5oA5TOK9GhaZUd?_iQ9AnKLOfLBm[c9
fc1EDbG^`X^3QN5FLZO[6fJZ_Q`Ne@UDUVHgSQMjVUjLn0WQ]=FiN@_6mM]e_bY4
1hoKSJTG]3:o3U=V^;mG7BIFdFQhb4M`:N?:m4?^S>E9X^/>SEgE5]o?F5B_VYXM
iUh?W2=X7OgL/l3aJF21:`QIH_]BXZd6T9MlT4Z4O<C3<KX@U[HkNh?_@NbIJfc=
S;VOB^G4]O;dX@o`fOG>kX^ZedTKaL5dR[g[FT1n4Fo6S5j18=giB7;F[OW0C>ES
mXBJ6jGN]QDcM7/:DLDgK9^/2KUVeIERc;nAmbnOB3eio]UO<lLHeE5l=BfFNA5A
aSgb>8]SM02T9dK0F6jCUDKmHj4PU9oSPF^DeEdbieGZ>3:21HEQG[[>RXBDkbJd
A^8J>AbA`W;Ue;cDLfOm:YMeZ<Y4R<OK:]AdNPUd/3P2W]HPJI94ZG;@mG2;o]Kn
Y[GQ4JgQZlVkLJ957bm3Amgl>:6BSa?l_Y_6L0FGWHNSSAEjEgZODU0<>=iiZi39
1P4G1I>UWR_DOoGHZZ`n6/^HjG;OW/V>W2gi6TIFEOGjMKYB5k>SdZidbQX3QD=g
=[7=TgNk<_i62Q:@HMKM6mRn@bf22BY:NJWDfYX@S:h?i:_hccAc=@9RA1Y3YAJf
Y69P<6@oP8U]i>b><a^gkJcGEYQ]GMfbQ:64;hM=^/>1MUg^jjdgIBOd7iJMheS0
/jc5>oXjAo[?[L6_^Q=lPjAVVAj?f1jf0QL`ckfjdSS5VFlL43g>=?]/[B/bYL_d
[H^oFHQAlj=^42a6kJJZIUHSR8deH9;_LZ`^kkeF<D?`X<GCDRU]8bh^i<n_ajmZ
Q9<IifbJV=J6h3eMLHLM;6C<^]fS?6;LKXnMbP:S3gBjVE>5O=1gm5n9]C45c_PT
YFI73dT9Y=D;_:1/Kj4/7SRGOMmK>:_DUZOkV<6IWnUCgl4GfffgimPB7ZFRQHMm
KCmnXTS<e_`JTiLK^;9M36cEJ];cNbL<mdOjU0//aOcIEfFl>?AL?YL^G4F_gEV4
F8Pnj5BmXEcnhgR30icDK9f33ScRfSSZ?nP8hfh[NCo@ANogINJ;V1dJecX;U3ZL
:VVkOj;bFLeAmMR4TS3:ED4^ThfU^90EM@I87Ma]VYP1F:6DQI5<NRQ9dadoWR;Q
]L7GIEVJPHN5/]nHKWCb9RgbMIlfJ9nh6aaGSP@]6]80Uim1R?AlWHLmj8TAEBnJ
N3XimMNoNK@YEe/>gb]QbRoaV7;R1Xlo8aHhMTaK8fg;BIi=5WGMJle4=W8KJHSU
b;5IZ?2KZ^Z9;R_P63HUJG5ZFBYi/`NIB?WBX4m=57cGjlJ/R55@TRA>/SR2I`BA
<T4VHnPTj^Hf<dJnA@O;k@]>:VNQ^/5XO@X7fY71YiKD/fOG7SEB1RcZ[ii;QAEW
Um/g7/2`FNaTbXJ@]AcAC0;XMoK7KlD3f:jW;SQCjN^?mV^fgcbM]R7bN7EN5mSg
01Y:@Tj3a1dELkKX:9K2;hiIZ2IHZUh;FK7PCk`hIMXiRF0Fb]T:WgViID;3D<=@
d5P?SNlP`SDJIHZ/=^YM70Sc?kchP/W1Y]O:8XJJ/F?gQg5f6JFIdOVNKdCf4@Sn
DBS9lfb29@8CjYilG9?/`o0m<O:1Xb0bR8G/06il<9;XX>c::2G>XSE[1?<M26@f
kj5gN?flQnk3cF88V`1^/B>NYRa1Gk33bC?/WWc@=:jK?;c4F9aQeL92ORbWXBMV
l38UCJVQR67F74:X@DJVN8@]H[geGYCKla^f=nJD>J5cak[@@k<LYio?7[fc27n8
i4>jUCIWCSQm;XVOiZQIa@fW37nboG9j19<`QS2nk[h35<_>NeTDe;c/;P2B_>e_
KnAj^ca<Aed>O=A<AUZB]i8_=g9=;b^@fNhQmCH>@a5KT8^;l3E@OaNW[bT]bjF]
QcSSBEHILk_j1HFD2R2<eR5?P1YFkBSXTRn]6OGT6ciDDF7jj7/_>GCV<c:GIjGZ
d7YY]99g_9O0LZ9o:H:W:ALL[P^L<M>WRB;84N>OOLRM/UQJe40b7Ff1:UX5`lo5
2D418S/ffOjelm=HR8Y?2BkcTZM:WhR=A9kYV9RCgf=1I`1KU;mY06MQL[nVgUda
CM7>VL[1MVNaF5i@f]<fglnOVLIjGQ=T?bfYDMXc]IY<Cg?]^L=DKHYVeL6GkJmQ
O6`ZUi3E]0>K4<LY6AnAGAo1cHEac^=MAOU]XM30[/X1KQ2j_V`ffinX4oc<nbke
B2LcSBD4j]ng>KCjM1I`>o=h55oUKa6`EcE1?I39JGLml0kCdiNN_S_=U9V/majU
kXne5hYPE6G_Lm6SJZcEB]@PafeHW8_bmH=26H;nf`KA@g6j[`Vc1nGcV[h=9B?3
XLMl91AS3`afHel@b/mm:G0iNmGbLh<`ZNC:bJa0@jc2QaLiCaKJJB=YLDCNCBmT
5JXd4bSE=1bS;;kV^/leM[Eada/Wmd8;d4J=KO<3e16QG;S4A/h1LO660b?IDMWe
Vo7N/]64_8h;9FbDjiP9bb<iPlL5jigNPg/MSj_IUDUL8biUf;=JCTOaR4WhdA@Q
0bVF^HK4;;MX:obVXcj/6lXjWNL]LAZnN4kk/LNbE@1:HcL]n/8a0?O0^9`lY^^a
[O6CUZ]@0M`D`XcQNobZ_@6`kn:@YnlHTGo?U=_/SD6M[WA26IVPBN[8^PfV8?fT
dgZ_WGK3fP/NdU0nM^eB@Mc1V7FddO4?D2nDd5`SMgggk<7fX6i4dc2EeP?NRRY5
`Y_6b[eDf^=cF>jlaO>DS2JK@WkY=Yig9mW^_JS<BnG<GjeiQbIQ;Fo=F[ocFV52
QfICAE4>Z2M4>WXi31ATO2W:X8ZEk4omJJ2B:P?F85eXeNcT]_g]M:NI5]Bg>``K
SWYUNGITTk1llac2f_JPTaPJgoT]_MVY^^ELRN@OT6MLXK@H3iGcCNlWM2dOMWM@
=fN915;[Ka@MO?CNfdJWdcTY1cd:6:4Phe1CHhl;HW@V4k4<_OUfOH]]6Lb8XYQc
lXablcIji/8U?62kGmHkU<jSYn3ioR9=3AFBmU9`kIgdBYWEHi6^]YBgPZjm7H41
QKhAk5lL:U@3Bcm6?kog@dc9MjR1S>C2]mf6_M7XER]2F1j73?=`_PLXIC:JbLe_
W8<DA7HX_@@U]eH><;FklcgZnHGDTR<TFWGTjj]TL_JDC5l>l=5ZMBcdlMe;dk?7
VdDJ/c2KV;^^QdKn4V5JDMWd`Mm8;DlZiBLefDKX[USCLXZ[oY0LgceI?_bRIL/i
F6a3LPQ9jDgML9Hd>9C5NBZ:BN_DZik^EWV;4Vg6_WGSne7TCfl/M1V[J5<j;m>C
[>WMGQ<^afk29F/WALLCLn`AD<Z?Z6:>mNgjNZ]Ugk8`CZo=A=FNeD@EQWboi_o6
8G_D>U>^@U;oIMW5fNG=BKZ]F5;JQoDUE5EG@`]oR]k:SiY[7loQ29UaO;biY/iS
NBf/4kLhHVaEbdFR=O]bQJXKZieOdT0NfST/<VimkK_b68Zn69=baN77>VXZ_8F<
lYgQb@9FaH1HF8lBUA;gE8WHHHK1gR5ZdXd^ZNY>5/>71?UhAkKGoA^5^Z[A<m]B
l;JgcE?/IHmZ@8Z?Ei7_SCdOgF<YcPdMi6njmcKcZ:YPAcANW]BDVONBONfNg2;f
XTki;NE_M?k5Kb8dn<2J7nEkjnPWSKd^?2cZN7cKS;Mf>n^:O9I2X]MEe=RRCcPF
ZJL6BKIZ0bAkF9j2_1j=]WUm;PQGFXc[3hBXV@XfGL/cP[CNHH=gGC0Ejj4@;mI9
dIoh6?T4bOMm/8Z;S:d>gVFl9>[QJB2Y:deXN@Z?3NI_WAbKPLEZYIC<gJ`M;9?`
RCL?NMoN]];jXi24cQ`Hh?RDH_eToA_14LL@XCKIT?EBhN1cIUg^ENL2SK:JMKJO
jCMDak^ekJj6VI903X3[^h=ee>jG^ff<knVihjb5UnkN<LFL1L0T0GdSJlfRhGii
=]V;lMO/;QH=<5XC<<A5:D^69Dg?3_2aP0hc7RUBI;I6E7NYJmf:c[fbh4f?XKo[
?iD2FQIYDIcX7bT[bnVkoKAd0]TVci=BMUeQIB;]m@hlTMmeH14JV>iHgE6]U;^P
kDbPK:[5Tj9`C]b@]7TAkX/RT:4=chCN_FJkH56>4foOQIFXL0@4=2c8OAlDY<]b
i/ScgbI>^N_DYglfL_n;Z6^8n6a:n]ZW5ad;W9Y5:M@U:kb^n]h3Y4?/EYKVYb4W
neGE=MI]EO7f5653XmbgNSXh]=i]aAUZWI=emCaTMcQj6bNo6UgA^a?jJ5jWaSOW
LTFhgMAe4=Lh:HiZTUO=GBUL<UDQdYCYU;Enhm?[i^o:bBE<VNAY/5NEHL9dZBZQ
c[7g_R;AUXBEnW`k2B@HP^ZGebLMAo]AeT6g9Qg5Pi4GO5U;7N]h]I7IYj5ciAa;
UBLiNh=6;AoGPakWTVRD?M^jdN/9FkFW21mcGc>lCNBHFKfI_^1iN7bYA<HWH8X;
/i<b_O_41n@Jh^cE:RSI7727hgCJKSScn>YQdoYULj4B`WOHK?iUQ9cFC_Hk`jRf
BKiB1kQQn5MFZ<Fk<jmn4PK5Ecj[Lfg2VW8aGkjg1DITAJE[gKCUCS3Ol1e[8V2S
k0mL/6NJnj@J7l0MIV0fGo=Fo0ICZMGJW5:31ie>dR63l:1hi04[HV5DBgTZ<Mbe
;n;dMXf9b5[jgZT_KeR7Q`P=KhoY@X]jOOLh<^24WDTjVB7gT_GNR=ZKTWJ?[eGf
Kl/dOB@M===93j_68BmnDV557`aAW<g5Mlm_PnHTkYM3BU0a3SoE5D<lB@BGGG5^
/^iL[<N5kHAfbU_jAhiSmYm[=GGgiBF;BO;m>]KZ;biZHkbfE0[5GEG^cUYC8gaN
QKE<;kK^=0i/[GnV/LILnLZZ_[L_Ua0ohL96JU90=0dTZf2Y;jd9ha:5j?SWjf2h
o:hjmoTnFI^QUckWI:H[C;:jBLbAe6eV^TD`:ji5?kN^i;N64CKc5ocS[WYeA>@5
G=CVBcU_^7E5D^lUC[_9^BXTf9f]RN]AX?Xl[GUOBj9O_GFlH>?YZi]b_E/[KGgi
kAV@mc]Eb=1aN=?E3T97Wd?U2bc15en]/m>?C<F/EZIm/9n@^[XYVQD`l=<A]Ye3
lj:C<]JV[3OfR^?WMmdJFGT]ORc=a>/`]Z^GLP:G4C]j/4Q6VY1K7en_M2Woc8]M
2VT?mJMJg[9lBdbJ^XB:mWkh38`B^1ad^@bYM;<XL3O^bDNJ><FJ5IT=MTmQ_@6N
c[bOA5^jSXZ0HfDQMh]SB^kVm?/^KiaBWNnWnPof]ROg1I;XAdj=?ghY=71bSA:L
K7Pg4iV5iRB?7gmYC]h@>;3[m/f]1kKh<=6W4YXmT:[@BV]e731MPg_EOn5HX>52
Ym_n^HBBUIQMBj94XEIJCfkjj4jJOG>oUahLGI7ac7aSmljUPh:TY7iYaGGn3oVk
ZEZXa:`;MHDU:]:LGh?DkiTXR8YQCoGK>ghLNBnm2?]iFeKKjTNBJeiAaP3Ao7WO
jDm1f_4GEQ[[;e>^M8Ylnl;Ae=o::J0cJBYm^FW2VZf<k=XZlMJ]BDYFW/oS:Z/j
U`B;Uf?NemJCdDc@g=Q;<LQIhY;b[C1U<K>V_WmmTZUDknViA>o;cAFUM88ng_ge
PmJSD2RSRhFVgXR@h0Z3=od[cK?l>G_AVR:_b]J;GO^4kPoJZEhM7MeTNaDHZEj4
EKhTOP2WBD]o_ZXoYZahReo1d]eaDKlQA_5l=;O[o<hGn=b6QK[>L?3C^SX[ZY21
UfZHf4k63fJM:Yf[5:i<YaNNiBDm=PZA9hkU76c@gAnlg__8;;_j<_CPf7J5iOC0
ORRIR9F5R48nUK`Yn9/9X6kKMYMBbfM8j]bhoKCo6FnV/GRWTkcomIZ7k>:kk:KM
L[QKC]@KTm`eF9e7Y:::7g<<ccLcF34F<n4]c?if[f]96QCiikNN=eOIQB4cShPT
dNn^f:cTm4?U[`PIl1CbdR::HVg;3HbK]GNdQWYnm;<g:IW9KBR?@KLHE`c>:DQ=
[IZW`ND:[oS[gNL/AdS26bELJj7ZeNh9Tb9SKl`^l=^K4Pl8/dFQo49>QBQRKQ[D
J=3gZa7n:3^P/:J8=b66E`Ff3>e_RcMl]PFm7L=^W9eIOi5dC624gW58mfn>Sb0b
c`Z>hkE:Z^Z8S]ADYS8O^B:UCF7;WQZi<[F_N2;GIN7`ld:Gh_0;F@5]L0S3H9D]
Im0H?MVF^?U4h8O_GCj;d0aGX^kao:PmXmW2So`JRC4bE7M?c0/bS_ghBkOMJ6<o
dG/=bLfig;YND5/fAAoSC^[E@E6@dN2=YQB^EDh2jA9YBRL/L9H46oM7GeS67Bl1
=gL2_H>SkXKT]NT=Ei[BaQK8QKWRQSdJG[JXR6lUS6bKDXRegF1n=6;caZEj;?U4
9l=fjPd3FlVe7@KWm@VV/9<SZV2BCmQg]b037m9EES1W/OBUC@>UIlcM>[h]@[[/
`HCT>iEAODl/IQ8C<d3?C]:=8b]]YVHDc9^]i:iM_3/aZN@/^<lmEdjnHE0oYFXZ
:G__<:;i3F4l;X^cMJ@]hhgKZ]WGQ^U5NjLRbgHbTTVn2P4^h84ObJ_3EGkjf0O9
2e7fM0HLV99Fjl02QH9k?8bHYo8Z;]YZEae5Hl93@<:g04:Y@=]?b1fZk]?H35d9
5X6NL5eQi]5Yb`;C9J>hWU8EW2I_A1]3fm@ahi_ncmdJFf9SoEY6d/f<IF`KeX^F
GL8Ed>hBnoYXe@HY_cV?m]`3ZQ`=oWL<Ab_O=BDSjeI9:4/o?iQaHA4jY^Qn/W1F
Z;EC5nZBMQQHH?5i8g8A8bmO7:?kUTA::?a1M=@6]0:`BmOQ5m=dbk[XLY1YK:G^
NfXB9mZZDd_Gh]hIKB2a3Ch9jGAo9<A^M9kXkhVj4fn;`eXU]jBVdIVTQU/UUTAD
1OD6>Rj;DnaF2]R59E;;G8Lmb;mR`a1_BK7m/Ul8acnN`0iU_MWJFNm?[0Cf2d`k
GWkI0km3jf;UDK5?A^Mc5NkWf3DmfBc`I_m78TkA@7VjLDVcl;>En6jKPDCJM>NZ
a]UL_I:FG/T7@OFS;B0:;Eb]f1Q28=8V9N?nHU;Y?[nTDcTbiFO5m5`E[QokmNdl
KG1]LIK21__UB`?UH[ZMQ05IFCocnK_W=[B2`lnOVCaY:Ga;RhROW1XW?M:SGo^A
j@^NBT0bh5[_S_@MO0Ya]jo8g?=>ekVRZVDU4gBoh5EJMeJJ7;^VTj:LimRUoU9o
C3aCC@Cm4cRAeZkI05o^hm<3dfAYFUAS_H2/U4GK56B0H6=7[^`UmjGQ7^Og71Y2
`lA_[TIXTX[5_@j;[6cDLJTB:ARHV<Aj?PUKOi_MXlfVc;2009od<:NW_?4>JCY`
clQZfK:8]B/]b;oeOQV]GJOh9^919VUi`?UDY5KURjbE6e[aej7;C>]KE``k:42_
<fTR8P@g5O^V/dS8VhRRE1QNm;7/lC@l[8jeNljU1//D4dJ3g8OF20_n1j30^<0:
IFiTLgAbIF5]2VE^I6mRJPXb=b0`86mRJPXl?0X_D79_I7ESIG8P:71TIUAUF2da
;S@`;S4e:@X_@g9UHGA_LR0XE6EH:@X_@g9UHGAYKfi4HGAU82Q4>S8`<CT`<C4a
<C4a=c0e;C0h9c0`9bT:;de_I4AQM6DP:4@j<S0a>C0a<C4a<C4g<3D]<3PW<30W
:@X_E79QL71UI20_AV5/LfD:;e1DAEP^AWE/K69QKViULR0XE6QYLb1YLb1`I6ID
IEP/85IULW=YKfhP<bha=34e>C8f=Bdb;SH]<Bhd<2ha=B0XE6EH84aYMVDP<S0a
=2TPJg1QM6QcIF4PMVEbLfU_KR0f;S8^<2T:?Sh:IFiTKf9Z2SHP<21_HVX:?3`:
;eAiL6DP;dmRJU=dK@X_CR0a>0X_AVUbLg@P<C8i2Rm<IFiWM6PP>C8f820P820P
80X_AVU/M6Eb82m6K65dIDAUHfmTI@Xn?PYcM79UHFd:N=[=EU]_fcHDO]N_>6m=
/5TR:Ek4XBS@>15F]>j2a>gBYGjPILKAZTR^90O[O_d>:LVg^TQAm666OBbN6cmn
>^M870QXB3A@2W4/P<H@9a`X1aTCX0:Da9E43`DD_ic7@1?D96S5::U5`?1BJ@:<
XXU@H0a=j<mRH0Cc9_PW<Cdjh0[e55M<XQn9PnO?PfSjIFDQ^SA;6dCSZVa]fCHP
4=UE45gIYU[GVFd`gR/VMY6K/nXO^2FXh0CQTGPFH7R=LISNNKehhA=Oe]ERWMTJ
CUJ;^jVm6M6@Ti2:DmbW]ZJ]d8;ZHIUGiKUY;IbLohK0=F9g7dGhR2C?27V6OY=Z
lIC;]3J[UEe0U9ZR`A=MCRm^`WAM57=CUPk;m3i_0;lMYUoQ_JdKg1[RT78Z=9=R
a48iH8F?3R:lbAn]Xi=o?8E?:m?N=mK0HalY@aJBdn7D=go<okII2nkje@?N53I`
hPS9[Vd;]m7UNC[kbCBaYfURob>J^ZY;/Mj2j7XmKogB:FT@YGWM]>=kDf=a1M4K
/eW88?XcGf1JeaBn7Uf2Lm]TMKibA=6^0:<cdeQWL]gR5AMUERgbL^WJIZM4_`l5
CgI@L;d1`LQA4=R9nb0H>`31hP74;BRU`VA?DT88R?kg]OW7Y4oZaG7]/=mF/n>l
GD]:@m[;Xji<RMiCbU3e<TVBD?OBLBJ426D_>`moE<I2=/PMT=e^BRNQ02TTJPBC
N:dDEQmNNdnJ^2bJ^gdhAj_`DWIi90>IJ?BPS13W`XQ;X:DkS7H`4^Z1L^F2R8N7
2A0N4ah2@jVCKZ/hS15fPU8a_SWT=nD>IAaclR=bH3of57FB>NRcPc;MUUUGMVo=
0e[NGKaj=aWo<YiLOg0MTaIVf@3_?<kl]8HAdc3B4^lEaMiAB^3@O]UTOVP[PK?5
[7jgnO:nGkYmW<f5h1a[CI5W;l]UHF54<O5eJaoNhoS7>>`9=m=>8U<^ikG9?]Vf
MWVR^JVS;:nc`Sj/RcIO5ElRngVM?i[2UYTmkM2U>JITO3<Rmdnb?O_@>XP/_k^c
]D_Ah;4X>MP3Al3^=^PPSR6KMLgGloim;?leCJlnC13KeCM9iPB95[hQ=2Q1MTPF
I8mT]mb@c<@1bFBPF>YMRZ_BA_oJ^]XSCfc8f`?h=7LllLULe]WGCboXWUh^>N`m
_<0m_N1XA8XAk<V8k@]7hmhheVi<1m7[O86PO2DLN8h=<U<]PbiTnhka7llUGHD:
IFiTLgAbIF5]2VE^I6mRJPXb>20`86mRJPXl?0X_E7U`IB0_F59UIPX_BFiTIGPP
Fc0P<SUM2RmCJGYU838i2RmG85/a838P<Ed:;e9_Kg@P<SHP<21B2Rm9KVI_838g
830PDPX_BD@PFca2>393@cDb<d<d<3Pc@C@b=D53<dHh<44f>C@e<c4b=ChP?48h
<T=3=C8c@c@`>3=1=38e@D<cASP`@CHi=3Dc<C8e?Ud:;daUKVMdJ20h=b0P820P
820P2Rm6JFadIG8P;dI/HGAUA6ESKfAU2Shn2W=dLVEQK@YhfQG;cA50@1@3h6CG
[Wm;3@[QX0ImV>7TY2UZD@eiQfnB70;P8eL@9aaR4_D4cXO]GSXQgF_KdMnFGS89
4RFG@TZYY9I6FXH777Ok39`fL;W`0mRD22D:IFiTLgAbIF5]2VE^I6mRJPX:Kf9Z
2S`l2Rm5KV=_I6U^Ib0_CF5SDVm]HFi5KV=_I6U^I`X_D79UHFeRK6DP:4ECHFi^
Kg15Dg=/HG=XI6mSMFeUKWASK65cLe/a<71dGDECK6EVM69bHF=[HG9dJF=/IDEC
LVUWJ7ARLV5SJ`Y5Dg=/HG=XMG=UL65SJf5WIE]eLfE^HFeULee5DfaUIWARLV5S
Jf=_K6mbAE=bJFMXM69bHF=[82EeLfET86I_LR1VKfid86=_K6mb2TECLfaQLfQe
LfE`HF=[HFMUAE=/IFIdHW9QHf]QKG=cNFeRAE=bJFMXM69bHF=[82E]HGAXL`Y5
Dg=/HG=XMG=UL65SJf5WIDECK6EVM69bHF=[HFecKF5dJ4ECLVUWJ7ARLV5SJb0U
KF5dJ7<:AE=cK65cJ7EcIG1QHf]QIfEKMGAV>5e5DfaUIWARLV5SJfU^L7EdIFiS
AE=bJFMXM69bHF=[82EeLfEVMF`PM6lPM7U`IB1TJG9UHgA/NB1TJF5SLVUdJF<P
HfQQLV5SM6EbL`X:2TECHFi^Kg1UKV@Y2Rm5Lf=QL6ETD79UHFeRK6DP:4ECHFi^
KfE`9CE3I6mSMFeUKWASK65cLbDe@S4`L7@U=D@U=d9QLWAYHfaU9CM49C119CE3
MG=UL65SJf5WIBDe@WEcIFiQKFEc9CE49CM2Hfm/Kg8U=d@U<S0U<SEeLfET9C8`
IVmb9C8`IVm^M2Db<6=_K6mb9C119CE3MG=UL65SJf5WIBDg@V5]Lg=iKF8U=d@U
<S0U<SE]HGAXLbD`@BDe@gEcIG1QHf]QIfDU=d9QKG=]HGAX9CM49C8`9C8eKF5d
J7<U<44U=D=eLfE`HF=[HFMU9CE2MGAV>2DeA2Dg@VU^L7EdIFiS9CM49C8`9C8e
MG=UIWE/9C8`M6lU<S1dNG1U9C8`I6UbIF=dK7TU<S1TJF5SLVUdJF<U<S1SJ65b
HF=dIG9c9C119C119C11AE=QKVi_IG1UKV@Y2RmCMF9ZIF=d82Q5Df5^KVmdAE=T
Kfa/HG95DfA_K6aQLR1l84ECK6EVM69bHF=[AE=cK65cJ6mfIG9/JFiU8315Dg9Y
IfQdHW9QHf/PAE=cK65cJ79QKVM/IB15Dg=/HG=XIG5eJGHPO20`830P<215Dg=/
HG=XLV5^IfaU84ECLfaQLfQ_M6U]IG<P87`P<20`830PAE=cK65cJ79QKVM/IB15
Dg=/HG=XKgAYKFEc821l830P<20`84ECLfaQLfQbHFiWK6DPAE=TKfa/HG95DfA_
K6aQLPY5DfA_K6aQLTECI6m/K65b87`PAE=/IFIdHW9QHf]5Dg=/HG=XKgIULVaY
KVDP<DECLVUWJ7ARLV5SJb15Dg=/HG=XLV5^IfaU84ECLfaQLfQULGEYMR1l834P
<B0a84ECLfaQLfQbHFiWK6DPAE=cK65cJ6mdJFeULb0PO20a834P<B15Dg=/HG=X
LV5^IfaU84ECLfaQLfQ_M6U]IG<P87`P<B0a834PAE=cK65cJ79QKVM/IB15DfA_
K6aQLTECI6m/K65bAE=QKVi_M6E^I2T:;dEcHf5`IFACMF9ZIF=d82Q5Df5^KVmU
Lb@T9C8`9CM39C8`9CM29CE3KgIULVaYKVDU<S0`9CM49C8`9CE3LV5^IfaU9C8`
9CE3IG5eJGHU<S0U=d<U<S0`9C8`<2Db<30U<S0U=D=bHFiWK6DU<S0U=D=_M6U]
IG<U<S0U<S0U=d<U<S0`9C8`<2Db<30U<S0U=D=bHFiWK6DU<S0U=D=_M6U]IG<U
<S0U<S0U=d<U<S0`9C8`<2Db<30U<S0U=D=bHFiWK6DU<S0T92D`@B@T9C8`9CM3
9C8`9CM29CE3KgIULVaYKVDU<S0a9CM49C8`9CE3LV5^IfaU9C8`9CE3IG5eJGHU
<S0U=d<U<S0a9C8`<BDb<34U<S0U=D=bHFiWK6DU<S0U=D=_M6U]IG<U<S0U<S0U
=d<U<S0a9C8`<BDb<34U<S0U=D=bHFiWK6DU<S0U=D=_M6U]IG<U<S0U<S0U=d<U
<S0a9C8`<BDb<34U<S0U=D=bHFiWK6DU<S0T94ECHFi^KfEcIFiT:@X_E7U`IB0X
ADEdNG1U<TE5M7U`IFE^I2T:;d=_K6mb82Q5AF=_K30^<30`<30`830^<30`<30`
830^<30`<30`834^<30`<30`ADESKfaUKV@Y2Rm2Bd=_K6mb82Q5AF9[Hc4^<30`
<30`834^<30`<30`834^<30`<30`834^<30`<30`ADERJf=UKV@Y2RmDJGA/IB0X
ADEdJGA/IDE5M6UdK6EUKV@Y2Rm=HFM^JFIYHf5dJFm^82Q5AFeQIc<f;S0`<30`
<4E5KF5WIFiT:@X_@V5cIFaYKVDP:4E5HV5c<2h`<30`<315AF9QLfE^I2T:?Sh:
IFiTKf9Z2PY_HVX:?3`:;dE^HfmTJFiW82m=HF=BKfeQKTE^HfmTJFiW2Rm@LVEQ
KF9/IB0XAE=QKVi_L4ECLfaQLfQTKf=eKFE^M6=/HG=cFc4`L7AMAE=/IFIdHW9Q
Hf]QLWAYHfaUAE=bJFMXM69bHF=[2TECLfaQLfQeLfE`HF=[HFMUFgEcIFiQKFEc
GDECK6EVM69bHF=[Hfm/Kg95Dg9YIfQdHW9QHf/P9GEcIF@PIVmb86I_KW@PHfm/
Kg8:AE=cK65cJ7EcIG1QHf]QIfE5DfaUIWARLV5SJf5]Lg=iKF95Dg9YIfQdHW9Q
Hf/P9FeQM6Qc2TECLfaQLfQeLfE`HF=[HFMUAE=/IFIdHW9QHf]QKG=]HGAXAE=b
JFMXM69bHF=[82E]HGAXL`Y5Dg=/HG=XMG=UL65SJf5WIE]eM6HhGDECK6EVM69b
HF=[JFi`MGAUKV=5Dg9YIfQdHW9QHf/P9GEcIFIeK21dKb1dNG1U86AYLVESM6ai
86AYHF=bJGAYHb1SJ65bHF=dIG9c2PX:AE=QKVi_L6E^I2T:;dEcHf5`IFA@LVEQ
KF9/IB0XAE=QKVi_IG0U=D=TKf=eKFE^M6=/HG=c9CE2<C1`M2DeA2Dg@V5bM6US
K6DU=d@U<44U=D=eLfE`HF=[HFMU9CE2MG=UKV5]IG<U=D@U=d9SKfa_LRDgA2Db
<2Db=GEcIF@U<S1VKg8U<S1VKfid9C8`Hfm/Kg8U<44U=D=eLfE`HF=[HFMU9CM2
HFecLgU]HRDgA2Db<2Db=FeQM6Qc9C119CE3MG=UL65SJf5WIBDg@V5]LfeQM6PU
=d@U<S0U<SE]HGAXLbD`@BDe@gEcIG1QHf]QIfDU=D9eM6Hh9CE49CM2JFi`MGAU
KV<U=d@U<S0U<SEeLfEVMF`U<S1dKbDb<7AiL6DU<S1TJG9UHgA/NBDb<6AYHF=b
JGAYHbDb<6=XHG9QHgAULW<U<44U<44U<455Df5^KVmUL6E^I2T:;e=eHVYUHg@P
:4ECHFi^KgA5DfA_K6aQLTECI6m/K65b87`PAE=/IFIdHW9QHf]5Dg=/HG=XKgIU
LVaYKVDP<4ECLVUWJ7ARLV5SJb15Dg=/HG=XLV5^IfaU84ECLfaQLfQULGEYMR1l
830P<20`84ECLfaQLfQbHFiWK6DPAE=cK65cJ6mdJFeULb0PO20`830P<215Dg=/
HG=XLV5^IfaU84ECLfaQLfQ_M6U]IG<P87`P<20`830PAE=cK65cJ79QKVM/IB15
DfA_K6aQLTECI6m/K65b2TECI6m/K65bAE=TKfa/HG8PO215DfaUIWARLV5SJdEC
LfaQLfQ_MVEbK6U^IB0aAE=bJFMXM69bHF=[84ECLfaQLfQbHFiWK6DPAE=cK65c
J6EaMFUf87`P<B0a834PAE=cK65cJ79QKVM/IB15Dg=/HG=XKgAYKFEc821l834P
<B0a84ECLfaQLfQbHFiWK6DPAE=cK65cJ6mdJFeULb0PO20a834P<B15Dg=/HG=X
LV5^IfaU84ECI6m/K65bAE=TKfa/HG95Df5^KVmdIFiT:@X_AG=SHG1UI5=eHVYU
Hg@P:4ECHFi^KfEc92@U<S0U=d<U<S0U=d8U=D=_MVEbK6U^IBDb<30U=d@U<S0U
=D=bHFiWK6DU<S0U=D=ULGEYMRDb<2Dg@bDb<30U<S0`9C8`<2Db<2De@g9QKVM/
IBDb<2De@fmdJFeULbDb<2Db<2Dg@bDb<30U<S0`9C8`<2Db<2De@g9QKVM/IBDb
<2De@fmdJFeULbDb<2Db<2Dg@bDb<30U<S0`9C8`<2Db<2De@g9QKVM/IBDb<2@T
9C1192@U<S0U=d<U<S0U=d8U=D=_MVEbK6U^IBDb<34U=d@U<S0U=D=bHFiWK6DU
<S0U=D=ULGEYMRDb<2Dg@bDb<34U<S0a9C8`<BDb<2De@g9QKVM/IBDb<2De@fmd
JFeULbDb<2Db<2Dg@bDb<34U<S0a9C8`<BDb<2De@g9QKVM/IBDb<2De@fmdJFeU
LbDb<2Db<2Dg@bDb<34U<S0a9C8`<BDb<2De@g9QKVM/IBDb<2@TAE=QKVi_IG=U
KV@Y2RmDNG1U82Q5AGAiL6DbADEdNG1UIFiT:@X_@fm/Kg8P:4E5Hfm/<2h`<30`
<30P<2h`<30`<30P<2h`<30`<30P<Bh`<30`<315AF=_K6E^I2T:;d9;@fm/Kg8P
:4E5HV]S<Bh`<30`<30P<Bh`<30`<30P<Bh`<30`<30P<Bh`<30`<315AF9[HfE^
I2T:;eAYM6aU82Q5AGAYM6aUADEdJGA/IFE^I2T:;deQIfiYIVUSHGAYKfhP:4E5
KF5W<cH^<30`<30`ADE]HFMUKV@Y2Rm2HG=UK6U^IB0XADERHG<`;S0`<30`<4E5
HV5cIFiT:@Xn?PYUKVA_HVX:2VmRJPXl?0X_AFiSKfAYKVLP;deQHe9_KF5^AFiS
KfAYKVL:;e1bIF5]HVaU82Q5Df5^KVm`AE=cK65cJ6A_HgE]IFidHfaQLg=K<C1`
M5e5DfaUIWARLV5SJf5bM6USK6E5Dg9YIfQdHW9QHf/:AE=cK65cJ7EcIG1QHf]Q
IfEKMG=UKV5]IG=MAE=/IFIdHW9QHf]SKfa_LTECLVUWJ7ARLV5SJb0UMG=UI21V
Kg8PIVm^M21SKfa_LPY5Dg=/HG=XMG=UL65SJf5WIDECK6EVM69bHF=[HFecLgU]
HTECLVUWJ7ARLV5SJb0UKF5dJ7<:AE=cK65cJ7EcIG1QHf]QIfE5DfaUIWARLV5S
Jf5]LfeQM6Q5Dg9YIfQdHW9QHf/P9FeQM6Qc2TECLfaQLfQeLfE`HF=[HFMUFgEd
ISQMAE=/IFIdHW9QHf]YKW1eM6E^HdECLVUWJ7ARLV5SJb0UMG=UIWE/87A_87Ai
L6DPI6UbIF=dK7TPI6UQHg9YM6US86=XHG9QHgAULW<:2PY5Df5^KVm`IFiT:@X_
AG=SHG1UI51bIF5]HVaU82Q5Df5^KVmUL2De@fA_HgE]IFidHfaQLg<U=D8a<71d
9CE49CM2HG9dJF=/IBDgA2D`@BDe@gEcIG1QHf]QIfDU=D9eLfE^HFeULbDeA2Dg
@V=_K6mb9CM49C8`9C8eMG=UI2Db<6I_LRDb<6I_KW@U<S1SKfa_LRD`@BDe@gEc
IG1QHf]QIfDU=d9QKG=cNFeR9CM49C8`9C8eKF5dJ7<U<44U=D=eLfE`HF=[HFMU
9CM2HFecKF5dJ2DgA2Db<2Db=FeQM6Qc9C119CE3MG=UL65SJf5WIBDe@WEdISPU
=D@U=d9YKW1eM6E^HbDgA2Db<2Db=GEcIFIeK2Db<7A_9C8`M7U`IBDb<6AYLVES
M6ai9C8`I6UQHg9YM6US9C8`HfQQLV5SM6EbLbD`@BD`@BD`@DECHFi^KfE`IFiT
:@X_DgERJVESM20XAE=QKVi_M4ECI6m/K65bAE=TKfa/HG8PO215DfaUIWARLV5S
JdECLfaQLfQ_MVEbK6U^IB0`AE=bJFMXM69bHF=[84ECLfaQLfQbHFiWK6DPAE=c
K65cJ6EaMFUf87`P<20`830PAE=cK65cJ79QKVM/IB15Dg=/HG=XKgAYKFEc821l
830P<20`84ECLfaQLfQbHFiWK6DPAE=cK65cJ6mdJFeULb0PO20`830P<215Dg=/
HG=XLV5^IfaU84ECI6m/K65bAE=TKfa/HG8:AE=TKfa/HG95DfA_K6aQLR1l84EC
K6EVM69bHF=[AE=cK65cJ6mfIG9/JFiU8355Dg9YIfQdHW9QHf/PAE=cK65cJ79Q
KVM/IB15Dg=/HG=XIG5eJGHPO20a834P<B15Dg=/HG=XLV5^IfaU84ECLfaQLfQ_
M6U]IG<P87`P<B0a834PAE=cK65cJ79QKVM/IB15Dg=/HG=XKgAYKFEc821l834P
<B0a84ECLfaQLfQbHFiWK6DPAE=TKfa/HG95DfA_K6aQLTECHFi^KgAUKV@Y2Rm5
Lf=QL6ETDgERJVESM20XAE=QKVi_IG<T92Db<2Dg@bDb<2Dg@RDe@fmfIG9/JFiU
9C8`<2DgA2Db<2De@g9QKVM/IBDb<2De@fEaMFUf9C8`9CM39C8`<2Db<30U<S0`
9C8`9CE3LV5^IfaU9C8`9CE3KgAYKFEc9C8`9C8`9CM39C8`<2Db<30U<S0`9C8`
9CE3LV5^IfaU9C8`9CE3KgAYKFEc9C8`9C8`9CM39C8`<2Db<30U<S0`9C8`9CE3
LV5^IfaU9C8`92@U<44T92Db<2Dg@bDb<2Dg@RDe@fmfIG9/JFiU9C8`<BDgA2Db
<2De@g9QKVM/IBDb<2De@fEaMFUf9C8`9CM39C8`<BDb<34U<S0a9C8`9CE3LV5^
IfaU9C8`9CE3KgAYKFEc9C8`9C8`9CM39C8`<BDb<34U<S0a9C8`9CE3LV5^IfaU
9C8`9CE3KgAYKFEc9C8`9C8`9CM39C8`<BDb<34U<S0a9C8`9CE3LV5^IfaU9C8`
92A5Df5^KVmULfE^I2T:;eAiL6DP:4E5M7U`IC95AGAiL6EUKV@Y2Rm3Kfa_LR0X
ADESKf``;S0`<30`<20`;S0`<30`<20`;S0`<30`<20a;S0`<30`<4E5Hfm/IFiT
:@X_@T]3Kfa_LR0XADERJf<a;S0`<30`<20a;S0`<30`<20a;S0`<30`<20a;S0`
<30`<4E5HV]SIFiT:@X_E6UdK6DP:4E5M6UdK6E5AGAYM6aUIFiT:@X_CF5WKVUV
JF=QM6U_KR0XADE]HFLc=Rh`<30`<315AFeQIfE^I2T:;d9QLfE/JFiU82Q5AF9Q
Lc0^<30`<30`ADERHG=UKV@Y2Shn2VE^I6mRJPYcM65bM7QbIFH:<CLe<cL:9BE5
CdH\>"], "Graphics",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  ImageSize->{332.1328125, 84.67742496905942},
  ImageMargins->{{133.27734375, 0.}, {0., 22.65625}}],
 "\n\n",
 "and which are processed in the manner described by the diagram below"
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.756222274659061*^9, 3.756222344082506*^9}, {
  3.756222397632861*^9, 3.756222598750724*^9}, {3.756222683442709*^9, 
  3.7562227100590343`*^9}, {3.75622481585223*^9, 3.756224830365026*^9}, {
  3.7598550085537043`*^9, 3.759855030059217*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {AbsoluteThickness[2.1134890398366473`], Dashing[{Medium, Medium}], 
    StrokeForm[{RGBColor[0.000106813, 0.00175479, 0.998215], Opacity[0.37]}], 
    EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.7062825520833335, 0.15265842013888897`}, {1.1088216145833334`,
      0.15462239583333348`}}]}, 
   {AbsoluteThickness[2.1134890398366473`], Dashing[{Medium, Medium}], 
    StrokeForm[{RGBColor[0.000106813, 0.00175479, 0.998215], Opacity[0.37]}], 
    EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.7299046430017196, 0.2207664913601345}, {1.1146069166395403`, 
     0.2209332360161675}}]}, 
   {AbsoluteThickness[2.1134890398366473`], Dashing[{Medium, Medium}], 
    StrokeForm[{RGBColor[0.000106813, 0.00175479, 0.998215], Opacity[0.37]}], 
    EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.7106136053380833, 0.2722475687662761}, {1.1056898233476382`, 
     0.2725065443250869}}]}, 
   {AbsoluteThickness[2.1134890398366473`], Dashing[{Medium, Medium}], 
    StrokeForm[{RGBColor[0.000106813, 0.00175479, 0.998215], Opacity[
    0.6900000000000001]}], EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[
    None], LineBox[{{0.7128472222222224, 0.8530815972222227}, {
     1.1162868923611113`, 0.8505642361111115}}]}, 
   {AbsoluteThickness[2.1134890398366473`], Dashing[{Medium, Medium}], 
    StrokeForm[{RGBColor[0., 0., 0.], Opacity[0.37]}], EdgeForm[{RGBColor[
    0., 0., 0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.2115986466308186, 0.4559136284722225}, {0.5803706463118246, 
     0.45949435763888924`}}]}, 
   {AbsoluteThickness[2.1134890398366473`], Dashing[{Medium, Medium}], 
    StrokeForm[{RGBColor[0., 0., 0.], Opacity[0.37]}], EdgeForm[{RGBColor[
    0., 0., 0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.22731119791666668`, 0.5112413194444445}, {0.5587348090277778, 
     0.5115885416666668}}]}, 
   {AbsoluteThickness[2.1134890398366473`], Dashing[{Medium, Medium}], 
    StrokeForm[{RGBColor[0., 0., 0.], Opacity[0.37]}], EdgeForm[{RGBColor[
    0., 0., 0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.21167534722222228`, 0.5628146701388891}, {0.5699327256944445, 
     0.5643012152777781}}]}, 
   {AbsoluteThickness[2.1134890398366473`], Dashing[{Medium, Medium}], 
    StrokeForm[{RGBColor[0., 0., 0.], Opacity[0.37]}], EdgeForm[{RGBColor[
    0., 0., 0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.2232530381944445, 0.265158420138889}, {0.575922309027778, 
     0.2655056423611113}}]}, 
   {AbsoluteThickness[2.1134890398366473`], Dashing[{Medium, Medium}], 
    StrokeForm[{RGBColor[0., 0., 0.], Opacity[0.37]}], EdgeForm[{RGBColor[
    0., 0., 0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.23517795138888895`, 0.2113606770833334}, {0.5577039930555557, 
     0.21547309027777795`}}]}, 
   {AbsoluteThickness[2.1134890398366473`], Dashing[{Medium, Medium}], 
    StrokeForm[{RGBColor[0., 0., 0.], Opacity[0.37]}], EdgeForm[{RGBColor[
    0., 0., 0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.22381727430555562`, 0.15365668402777777`}, {
     0.5642578125000002, 0.15709635416666679`}}]}, 
   {AbsoluteThickness[2.1134890398366473`], Dashing[{Medium, Medium}], 
    StrokeForm[{RGBColor[0., 0., 0.], Opacity[0.37]}], EdgeForm[{RGBColor[
    0., 0., 0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.2172092013888889, 0.7484157986111113}, {0.5809027777777779, 
     0.7537651909722225}}]}, 
   {AbsoluteThickness[2.1134890398366473`], Dashing[{Medium, Medium}], 
    StrokeForm[{RGBColor[0., 0., 0.], Opacity[0.37]}], EdgeForm[{RGBColor[
    0., 0., 0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.2291232638888889, 0.7990559895833337}, {0.5621202256944445, 
     0.8034939236111115}}]}, 
   {AbsoluteThickness[2.1134890398366473`], Dashing[{Medium, Medium}], 
    StrokeForm[{RGBColor[0., 0., 0.], Opacity[0.37]}], EdgeForm[{RGBColor[
    0., 0., 0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.21189236111111112`, 0.8512912326388892}, {0.5821831597222223, 
     0.8565538194444448}}]}, 
   GeometricTransformationBox[{
     GeometricTransformationBox[{
       GeometricTransformationBox[GeometricTransformationBox[GraphicsGroupBox[{
           StyleBox[InsetBox[
             StyleBox[
              TagBox["}",
               "RawBoxes"],
              FontFamily->"Times",
              FontWeight->Plain,
              
              Background->GrayLevel[
               1.]], {0.12535536024305555, 0.48607855902777763}, {
             Left, Baseline},
             Alignment->{Left, Top}],
            FontSize->72,
            FontColor->GrayLevel[0.5]], 
           StyleBox[InsetBox[
             TagBox["{",
              "RawBoxes"], {0.0638671875, 0.48572048611111107}, {
             Left, Baseline},
             Alignment->{Left, Top}],
            TextJustification->0,
            FontFamily->"Times",
            FontSize->72,
            FontWeight->Plain,
            FontColor->GrayLevel[0.5],
            FontVariations -> {"Masked" -> False}], 
           StyleBox[InsetBox[GridBox[{
               {"1"},
               {
                RowBox[{"0", "\[IndentingNewLine]", "0"}]}
              }], Scaled[{0.09151611328124987, 0.5325629340277775}], 
             Center, {0.051649305555555566, 0.14264322916666666}, {{1., 0.}, {
             0., 1.}}],
            FontSize->12,
            FontWeight->"Bold"]}], {{{{0.9907765957590197, 0.}, {0., 1.}}, {
           0.0033554125472406715`, -0.32359483506944464`}}}], {{
        0.00020308378998945553`, 0.3076863606770841}}], 
       GeometricTransformationBox[GeometricTransformationBox[GraphicsGroupBox[{
           StyleBox[InsetBox[
             StyleBox[
              TagBox["}",
               "RawBoxes"],
              FontFamily->"Times",
              FontWeight->Plain,
              
              Background->GrayLevel[
               1.]], {0.12535536024305555, 0.48607855902777763}, {
             Left, Baseline},
             Alignment->{Left, Top}],
            FontSize->72,
            FontColor->GrayLevel[0.5]], 
           StyleBox[InsetBox[
             TagBox["{",
              "RawBoxes"], {0.0638671875, 0.48572048611111107}, {
             Left, Baseline},
             Alignment->{Left, Top}],
            TextJustification->0,
            FontFamily->"Times",
            FontSize->72,
            FontWeight->Plain,
            FontColor->GrayLevel[0.5],
            FontVariations -> {"Masked" -> False}], 
           StyleBox[InsetBox[GridBox[{
               {"1"},
               {
                RowBox[{"0", "\[IndentingNewLine]", "1"}]}
              }], Scaled[{0.09151611328124987, 0.5325629340277775}], 
             Center, {0.051649305555555566, 0.14264322916666666}, {{1., 0.}, {
             0., 1.}}],
            FontSize->12,
            FontWeight->"Bold"]}], {{{{0.9907765957590197, 0.}, {0., 1.}}, {
           0.0033554125472406715`, -0.32359483506944464`}}}], {{
        0.00307851781776719, 0.5993245442708337}}]}, {{
      0.03460286458333345, -0.014181857638889461`}}], 
     GeometricTransformationBox[
      GeometricTransformationBox[
       GeometricTransformationBox[GraphicsGroupBox[{
          StyleBox[InsetBox[
            StyleBox[
             TagBox["}",
              "RawBoxes"],
             FontFamily->"Times",
             FontWeight->Plain,
             
             Background->GrayLevel[
              1.]], {0.12535536024305555, 0.48607855902777763}, {
            Left, Baseline},
            Alignment->{Left, Top}],
           FontSize->72,
           FontColor->GrayLevel[0.5]], 
          StyleBox[InsetBox[
            TagBox["{",
             "RawBoxes"], {0.0638671875, 0.48572048611111107}, {
            Left, Baseline},
            Alignment->{Left, Top}],
           TextJustification->0,
           FontFamily->"Times",
           FontSize->72,
           FontWeight->Plain,
           FontColor->GrayLevel[0.5],
           FontVariations -> {"Masked" -> False}], 
          StyleBox[InsetBox[GridBox[{
              {"1"},
              {
               RowBox[{"1", "\[IndentingNewLine]", "0"}]}
             }], Scaled[{0.09151611328124987, 0.5325629340277775}], 
            Center, {0.051649305555555566, 0.14264322916666666}, {{1., 0.}, {
            0., 1.}}],
           FontSize->12,
           FontWeight->"Bold"]}], {{{{0.9907765957590197, 0.}, {0., 1.}}, {
          0.0033554125472406715`, -0.32359483506944464`}}}], {{
       0.014930188824711699`, 0.30618489583333286`}}], {{
      0.02793782552083343, -0.3080468071831586}}]}, {{-0.010394965277777807`, 
    0.005664062499999956}}], 
   GeometricTransformationBox[{
     GeometricTransformationBox[{
       GeometricTransformationBox[
        GraphicsGroupBox[
         GeometricTransformationBox[GeometricTransformationBox[{
            StyleBox[InsetBox[
              StyleBox[
               TagBox["}",
                "RawBoxes"],
               FontFamily->"Times",
               FontWeight->Plain,
               
               Background->GrayLevel[
                1.]], {0.12510347099446967, 0.4860785590277781}, {
              Left, Baseline},
              Alignment->{Left, Top}],
             FontSize->72,
             FontColor->GrayLevel[0.5]], 
            StyleBox[InsetBox[
              TagBox["{",
               "RawBoxes"], {0.06361529825141413, 0.4857204861111115}, {
              Left, Baseline},
              Alignment->{Left, Top}],
             TextJustification->0,
             FontFamily->"Times",
             FontSize->72,
             FontWeight->Plain,
             FontColor->GrayLevel[0.5],
             FontVariations -> {"Masked" -> False}], 
            StyleBox[InsetBox[GridBox[{
                {"1"},
                {
                 RowBox[{"1", "\[IndentingNewLine]", "1"}]}
               }], Scaled[{0.09459628072319659, 0.5308268229166664}], 
              Center, {0.051649305555555566, 0.14264322916666666}, {{1., 
              0.}, {0., 1.}}],
             FontSize->12,
             FontWeight->"Bold"]}, {{{{0.9907765957590197, 0.}, {0., 1.}}, {
             0.0033554125472406715`, -0.32359483506944464`}}}], {{
          0.014930188824711699`, 
          0.30618489583333286`}}]], {{-0.004399956597224142, \
-0.0004462348090286117}}], 
       GeometricTransformationBox[
        GraphicsGroupBox[
         GeometricTransformationBox[GeometricTransformationBox[{
            StyleBox[InsetBox[
              StyleBox[
               TagBox["}",
                "RawBoxes"],
               FontFamily->"Times",
               FontWeight->Plain,
               
               Background->GrayLevel[
                1.]], {0.12535536024305555, 0.48607855902777763}, {
              Left, Baseline},
              Alignment->{Left, Top}],
             FontSize->72,
             FontColor->GrayLevel[0.5]], 
            StyleBox[InsetBox[
              TagBox["{",
               "RawBoxes"], {0.05993552488076773, 0.48559027777777763}, {
              Left, Baseline},
              Alignment->{Left, Top}],
             TextJustification->0,
             FontFamily->"Times",
             FontSize->72,
             FontWeight->Plain,
             FontColor->GrayLevel[0.5],
             FontVariations -> {"Masked" -> False}], 
            StyleBox[InsetBox[GridBox[{
                {"1"},
                {
                 RowBox[{"1", "\[IndentingNewLine]", "1"}]}
               }], Scaled[{0.09151611328124987, 0.5325629340277775}], 
              Center, {0.051649305555555566, 0.14264322916666666}, {{1., 
              0.}, {0., 1.}}],
             FontSize->12,
             FontWeight->"Bold"]}, {{{{0.9907765957590197, 0.}, {0., 1.}}, {
             0.0033554125472406715`, -0.32359483506944464`}}}], {{
          0.018999199241378384`, 
          0.6679578993055553}}]], {{-0.006770833333334947, \
-0.07051595052083393}}]}, {{0.023763020833333454`, 0.003960503472221877}}], 
     GeometricTransformationBox[
      GraphicsGroupBox[
       GeometricTransformationBox[
        GeometricTransformationBox[GeometricTransformationBox[{
           StyleBox[InsetBox[
             StyleBox[
              TagBox["}",
               "RawBoxes"],
              FontFamily->"Times",
              FontWeight->Plain,
              
              Background->GrayLevel[
               1.]], {0.12535536024305555, 0.48607855902777763}, {
             Left, Baseline},
             Alignment->{Left, Top}],
            FontSize->72,
            FontColor->GrayLevel[0.5]], 
           StyleBox[InsetBox[
             TagBox["{",
              "RawBoxes"], {0.06410812504212574, 0.48572048611111107}, {
             Left, Baseline},
             Alignment->{Left, Top}],
            TextJustification->0,
            FontFamily->"Times",
            FontSize->72,
            FontWeight->Plain,
            FontColor->GrayLevel[0.5],
            FontVariations -> {"Masked" -> False}], 
           StyleBox[InsetBox[GridBox[{
               {"1"},
               {
                RowBox[{"1", "\[IndentingNewLine]", "1"}]}
              }], Scaled[{0.09221571764300152, 0.5368679470486111}], 
             Center, {0.051649305555555566, 0.14264322916666666}, {{1., 0.}, {
             0., 1.}}],
            FontSize->12,
            FontWeight->"Bold"]}, {{{{0.9907765957590197, 0.}, {0., 1.}}, {
            0.0033554125472406715`, -0.32359483506944464`}}}], {{
         0.014930188824711699`, 0.30618489583333286`}}], {{
        0.02579752604166677, -0.38304036458333357`}}]], \
{{-0.006803385416668251, 0.0911882188585067}}]}, {{
    1.020773654513889, -0.010530598958332416`}}], 
   {AbsoluteThickness[2.1134890398366473`], Dashing[{Medium, Medium}], 
    StrokeForm[{RGBColor[0., 0., 0.], Opacity[0.37]}], EdgeForm[{RGBColor[
    0., 0., 0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{1.330316840277778, 0.5706814236111108}, {2.205750868055556, 
     0.5756293402777775}}]}, 
   {EdgeForm[{GrayLevel[0.], Opacity[0.37], AbsoluteThickness[
    2.1134890398366473`], Dashing[{Medium, Medium}]}], FaceForm[{RGBColor[
    0.4, 1, 0.999207], Opacity[1.]}], 
    RectangleBox[{0.3499294704861111, 0.9096381293402778}, \
{0.46484917534722237, 0.7058512369791665}]}, 
   GeometricTransformationBox[{
     GeometricTransformationBox[
      GeometricTransformationBox[
       GeometricTransformationBox[GraphicsGroupBox[{
          StyleBox[InsetBox[
            StyleBox[
             TagBox["}",
              "RawBoxes"],
             FontFamily->"Times",
             FontWeight->Plain,
             
             Background->GrayLevel[
              1.]], {0.12535536024305555, 0.48607855902777763}, {
            Left, Baseline},
            Alignment->{Left, Top}],
           FontSize->72,
           FontColor->GrayLevel[0.5]], 
          StyleBox[InsetBox[
            TagBox["{",
             "RawBoxes"], {0.0638671875, 0.48572048611111107}, {
            Left, Baseline},
            Alignment->{Left, Top}],
           TextJustification->0,
           FontFamily->"Times",
           FontSize->72,
           FontWeight->Plain,
           FontColor->GrayLevel[0.5],
           FontVariations -> {"Masked" -> False}], 
          StyleBox[InsetBox[GridBox[{
              {"0"},
              {
               RowBox[{"0", "\[IndentingNewLine]", "0"}]}
             }], Scaled[{0.091696816437844, 0.5325629340277775}], 
            Center, {0.051649305555555566, 0.14264322916666666}, {{1., 0.}, {
            0., 1.}}],
           FontSize->12,
           FontWeight->"Bold"]}], {{{{0.9907765957590197, 0.}, {0., 1.}}, {
          0.0033554125472406715`, -0.32359483506944464`}}}], \
{{-0.00816822697389924, 0.29072129991319384`}}], {{0.0235134548611112, 
      0.003960503472222321}}], 
     GeometricTransformationBox[
      GeometricTransformationBox[
       GeometricTransformationBox[GraphicsGroupBox[{
          StyleBox[InsetBox[
            StyleBox[
             TagBox["}",
              "RawBoxes"],
             FontFamily->"Times",
             FontWeight->Plain,
             
             Background->GrayLevel[
              1.]], {0.12535536024305555, 0.48607855902777763}, {
            Left, Baseline},
            Alignment->{Left, Top}],
           FontSize->72,
           FontColor->GrayLevel[0.5]], 
          StyleBox[InsetBox[
            TagBox["{",
             "RawBoxes"], {0.0638671875, 0.48572048611111107}, {
            Left, Baseline},
            Alignment->{Left, Top}],
           TextJustification->0,
           FontFamily->"Times",
           FontSize->72,
           FontWeight->Plain,
           FontColor->GrayLevel[0.5],
           FontVariations -> {"Masked" -> False}], 
          StyleBox[InsetBox[GridBox[{
              {"1"},
              {
               RowBox[{"1", "\[IndentingNewLine]", "1"}]}
             }], Scaled[{0.09151611328124987, 0.5325629340277775}], 
            Center, {0.051649305555555566, 0.14264322916666666}, {{1., 0.}, {
            0., 1.}}],
           FontSize->12,
           FontWeight->"Bold"]}], {{{{0.9907765957590197, 0.}, {0., 1.}}, {
          0.0033554125472406715`, -0.32359483506944464`}}}], {{
       0.014930188824711699`, 0.30618489583333286`}}], {{
      0.00744628906250025, -0.3068695068359364}}]}, {{0.497900390625, 
    0.00448676215277799}}], 
   StyleBox[InsetBox[
     StyleBox[Cell["Level I Processing",
       GeneratedCell->False,
       CellAutoOverwrite->False,
       CellBaseline->Baseline,
       TextAlignment->Left],
      Background->GrayLevel[
       1.]], {0.27925347222222224, 0.048752170138889106}, {Left, Baseline},
     Alignment->{Left, Top}],
    FontSize->12], 
   {EdgeForm[{GrayLevel[0.], Opacity[0.37], AbsoluteThickness[
    2.1134890398366473`], Dashing[{Medium, Medium}]}], FaceForm[{RGBColor[
    0.4, 1, 0.999207], Opacity[1.]}], 
    RectangleBox[{0.3499294704861111, 0.6160970052083337}, \
{0.46484917534722237, 0.4123101128472224}]}, 
   {EdgeForm[{GrayLevel[0.], Opacity[0.37], AbsoluteThickness[
    2.1134890398366473`], Dashing[{Medium, Medium}]}], FaceForm[{RGBColor[
    0.4, 1, 0.999207], Opacity[1.]}], 
    RectangleBox[{0.3499294704861111, 0.3180002848307293}, \
{0.4648491753472225, 0.11421339246961804}]}, 
   StyleBox[InsetBox[
     StyleBox[Cell["Level II Processing",
       GeneratedCell->False,
       CellAutoOverwrite->False,
       CellBaseline->Baseline,
       TextAlignment->Left],
      Background->GrayLevel[
       1.]], {0.7963107638888891, 0.036100260416666696}, {Left, Baseline},
     Alignment->{Left, Top}],
    FontSize->12], 
   GeometricTransformationBox[
    GeometricTransformationBox[GeometricTransformationBox[GraphicsGroupBox[{{
         StyleBox[InsetBox[
           StyleBox[
            TagBox["}",
             "RawBoxes"],
            FontFamily->"Times",
            FontWeight->Plain,
            
            Background->GrayLevel[
             1.]], {0.12535536024305555, 0.48607855902777763}, {
           Left, Baseline},
           Alignment->{Left, Top}],
          FontSize->72,
          FontColor->GrayLevel[0.5]], 
         StyleBox[InsetBox[
           TagBox["{",
            "RawBoxes"], {0.0638671875, 0.48572048611111107}, {Left, Baseline},
           Alignment->{Left, Top}],
          TextJustification->0,
          FontFamily->"Times",
          FontSize->72,
          FontWeight->Plain,
          FontColor->GrayLevel[0.5],
          FontVariations -> {"Masked" -> False}]}, 
        StyleBox[InsetBox[GridBox[{
            {"1"},
            {
             RowBox[{"1", "\[IndentingNewLine]", "1"}]}
           }], Scaled[{0.0950471788353302, 0.5365397135416665}], 
          Center, {0.0439647422908643, 0.13468967013888888}, {{1., 0.}, {0., 
          1.}}],
         FontSize->12,
         FontWeight->"Bold"]}], {{{{0.9907765957590197, 0.}, {0., 1.}}, {
        0.0033554125472406715`, -0.32359483506944464`}}}], \
{{-0.0009416644738994284, 0.5823594835069439}}], {{0.521164279513889, 
    0.00844726562500031}}], 
   {AbsoluteThickness[2.1134890398366473`], Dashing[{Medium, Medium}], 
    StrokeForm[{RGBColor[0.000106813, 0.00175479, 0.998215], Opacity[0.37]}], 
    EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.7219401041666669, 0.8051649305555559}, {1.1054470486111114`, 
     0.8075737847222226}}]}, 
   {AbsoluteThickness[2.1134890398366473`], Dashing[{Medium, Medium}], 
    StrokeForm[{RGBColor[0.000106813, 0.00175479, 0.998215], Opacity[0.37]}], 
    EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.7125957820984219, 0.7523654513888891}, {1.1226756018080635`, 
     0.7512912326388892}}]}, 
   {AbsoluteThickness[2.1134890398366473`], Dashing[{Medium, Medium}], 
    StrokeForm[{RGBColor[0.000106813, 0.00175479, 0.998215], Opacity[0.37]}], 
    EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.7007812500000001, 0.5661024305555558}, {1.115397135416667, 
     0.5679796006944446}}]}, 
   {AbsoluteThickness[2.1134890398366473`], Dashing[{Medium, Medium}], 
    StrokeForm[{RGBColor[0.000106813, 0.00175479, 0.998215], Opacity[0.37]}], 
    EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.7077799479166669, 0.5149956597222225}, {1.1011610243055558`, 
     0.5141818576388892}}]}, 
   {AbsoluteThickness[2.1134890398366473`], Dashing[{Medium, Medium}], 
    StrokeForm[{RGBColor[0.000106813, 0.00175479, 0.998215], Opacity[0.37]}], 
    EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
    LineBox[{{0.7015733506944446, 0.45633680555555567`}, {1.1173828125000003`,
      0.46153428819444464`}}]}, 
   {EdgeForm[{RGBColor[0.986252, 0.00712596, 0.0274357], Opacity[0.81], 
    AbsoluteThickness[2.1134890398366473`], Dashing[{Medium, Medium}]}], 
    FaceForm[{Hue[0.5666666666666667, 1., 1.], Opacity[0.9400000000000001]}], 
    RectangleBox[{0.8393174913194447, 0.9317816840277783}, \
{1.0421495225694448, 0.10399305555555576}]}},
  ContentSelectable->True,
  ImagePadding->{{0., 0.}, {0., 0.}},
  ImageSize->{480, 360},
  PlotRange->{{0., 1.3333333333333335`}, {0., 1.}},
  PlotRangePadding->Automatic]], "DisplayFormulaNumbered",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQ7TPXukP6z2tHqezFi0B03NRly0D0jWfHNoHo7Vui
d4BoDQ/VvSD68bY1F0H0kiaRqyD6wtTymyD63LLXd0F0Ue+8RyD6WOSstyDa
4P15ARkg/UuSURBEz2KfLg6i99y4JgeiJxSvVwLRGcrP1UB0UayUIYhmaTlv
BKKfTVewBNGn9zTagGimsh2OYJopxhlEf7jwzxtE9654FQmijwS6x4No/Z+7
kkF0Qd6NDBBd1wGhReSa8sDuST1eDKL7t1XWguhHt6ongegb1n0zQfTuXoVZ
IFphde48EN0hK78ARKtF6C4B0ZHnFy4H0RVG6htA9LEMq40gOuVa4D4QLWcs
dQhsT+iPqyA6v8nqOojWCWf4DHav88ofINqoqIRDFkgLrN/LCaIB/TfXxQ==

  "]],

Cell[TextData[{
 "In this figure an initial codeword state has been corrupted by bit flip \
errors so that it has the form\n",
 "\n",
 Cell[BoxData[
  FormBox[GridBox[{
     {
      RowBox[{
       RowBox[{GridBox[{
          {
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"\[LeftBracketingBar]", "101"}], 
               "\[RightAngleBracket]"}], "\[CircleTimes]", 
              RowBox[{"\[LeftBracketingBar]", "100"}]}], 
             "\[RightAngleBracket]"}], "\[CircleTimes]"}]}
         },
         GridBoxAlignment->{"Columns" -> {{"="}}}], 
        RowBox[{"\[LeftBracketingBar]", "110"}]}], "\[RightAngleBracket]"}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]]],
 "\n\n",
 "Each of the three segments is then mapped according to the rules given by \
Eq. (1).  In the second level of processing we again apply mapping given by \
Eq. (1), but the intermediate state \n",
 "\n",
 Cell[BoxData[
  FormBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[LeftBracketingBar]", "111"}], "\[RightAngleBracket]"}], 
          "\[CircleTimes]", 
          RowBox[{"\[LeftBracketingBar]", "000"}]}], "\[RightAngleBracket]"}],
         "\[CircleTimes]", 
        RowBox[{"\[LeftBracketingBar]", "111"}]}], "\[RightAngleBracket]"}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]]],
 "\n\n",
 "is interpreted as a codeword \[LeftBracketingBar]",
 StyleBox["1",
  FontColor->RGBColor[1, 0, 0]],
 " \[RightAngleBracket]",
 Cell[BoxData[
  FormBox["\[CircleTimes]", TraditionalForm]]],
 "\[LeftBracketingBar]",
 StyleBox["0",
  FontColor->RGBColor[1, 0, 0]],
 "\[RightAngleBracket]",
 Cell[BoxData[
  FormBox["\[CircleTimes]", TraditionalForm]]],
 "\[LeftBracketingBar]",
 StyleBox["1",
  FontColor->RGBColor[1, 0, 0]],
 "\[RightAngleBracket], and according rule (1), is mapped into",
 "\n",
 Cell[BoxData[
  FormBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"\[IndentingNewLine]", 
         RowBox[{GridBox[{
            {
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"\[LeftBracketingBar]", 
                    StyleBox["1",
                    FontColor->RGBColor[1, 0, 0]]}], "\[RightAngleBracket]"}],
                     "\[CircleTimes]", 
                    RowBox[{"\[LeftBracketingBar]", 
                    StyleBox["1",
                    FontColor->RGBColor[1, 0, 0]]}]}], 
                   "\[RightAngleBracket]"}], "\[CircleTimes]", 
                  RowBox[{"\[LeftBracketingBar]", 
                   StyleBox["1",
                    FontColor->RGBColor[1, 0, 0]]}]}], 
                 "\[RightAngleBracket]"}], " ", "\[Congruent]", " ", 
                RowBox[{"\[LeftBracketingBar]", "111"}]}], 
               "\[RightAngleBracket]"}], "\[CircleTimes]"}]}
           },
           GridBoxAlignment->{"Columns" -> {{"="}}}], 
          RowBox[{"\[LeftBracketingBar]", "111"}]}], "\[RightAngleBracket]"}],
         " ", "\[CircleTimes]", 
        RowBox[{"\[LeftBracketingBar]", "111"}]}], "\[RightAngleBracket]"}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]]]
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.756223371193322*^9, 3.756223421716568*^9}, {
   3.759855049066852*^9, 3.75985505901716*^9}, 3.759855095220069*^9}],

Cell[TextData[{
 StyleBox["Exercise 5.  Evaluate the output, using the mappings illustrated \
in Fig. (3), for the following inputs",
  FontFamily->"Chalkboard",
  FontWeight->"Regular"],
 "\n\n(a) \[LeftBracketingBar]101\[RightAngleBracket]\[CircleTimes]\
\[LeftBracketingBar]000\[RightAngleBracket]\[CircleTimes]\[LeftBracketingBar]\
111\[RightAngleBracket],         (b) \[LeftBracketingBar]100\
\[RightAngleBracket]\[CircleTimes]\[LeftBracketingBar]000\[RightAngleBracket]\
\[CircleTimes]\[LeftBracketingBar]111\[RightAngleBracket]       (c) \
\[LeftBracketingBar]100\[RightAngleBracket]\[CircleTimes]\[LeftBracketingBar]\
100\[RightAngleBracket]\[CircleTimes]\[LeftBracketingBar]100\
\[RightAngleBracket]"
}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.756224434317869*^9, 3.756224441584573*^9}, {
  3.7562244737823343`*^9, 3.7562246336344233`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell["", "Text",
 CellChangeTimes->{{3.7562244220776052`*^9, 3.756224426959375*^9}}],

Cell[CellGroupData[{

Cell["Simulation of concatenated code", "Subsubsection",
 CellChangeTimes->{{3.7562246443793707`*^9, 3.756224668836237*^9}}],

Cell[CellGroupData[{

Cell["Level 0 processing", "Subsubsubsection",
 CellChangeTimes->{{3.756224707594076*^9, 3.756224719130597*^9}, {
  3.75622711367093*^9, 3.7562271192838907`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"define", " ", "a", " ", "bit", " ", "flip", " ", "error"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bitflip", "[", "i_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"p", "=", "0.1"}], "}"}], ",", 
    RowBox[{
     RowBox[{"prob", "=", "p"}], ";", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"i", "\[Equal]", "1"}], ",", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1", "-", "p"}]}], "}"}], "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ",", 
       RowBox[{"i", "\[Equal]", "0"}], ",", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p", ",", 
           RowBox[{"1", "-", "p"}]}], "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], "]"}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.756225050204446*^9, 3.756225092256196*^9}, {
  3.756226286790914*^9, 3.756226301931917*^9}}],

Cell[TextData[{
 "Create an ensemble of outputs for input state ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftBracketingBar]", "1"}], "\[RightAngleBracket]"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.756226327503932*^9, 3.756226373325799*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"input", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"max", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ensemble0", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"bitflip", "[", "input", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "max"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"error0", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"max", "-", 
      RowBox[{"N", "[", 
       RowBox[{"Count", "[", 
        RowBox[{"ensemble0", ",", "input"}], "]"}], "]"}]}], ")"}], "/", 
    "max"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\< probablity of error for a single qubit flip  \>\"", ",", "error0"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.756226397749645*^9, 3.756226479986638*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" probablity of error for a single qubit flip  \"\>", 
   "\[InvisibleSpace]", "0.1004`"}],
  SequenceForm[" probablity of error for a single qubit flip  ", 0.1004],
  Editable->False]], "Print",
 CellChangeTimes->{3.7611575677592163`*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Level 1 processing", "Subsubsubsection",
 CellChangeTimes->{{3.756226514671912*^9, 3.756226521713128*^9}, {
  3.7562271013507423`*^9, 3.756227108944708*^9}}],

Cell["Define 3-qubit mapping as determined by rule (1).", "Text",
 CellChangeTimes->{{3.7562265317489653`*^9, 3.7562265575724277`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"mapping", " ", "rules", " ", "given", " ", "by", " ", 
     RowBox[{"Eq", ".", " ", 
      RowBox[{"(", "1", ")"}]}]}], ",", " ", 
    RowBox[{"or", " ", 
     RowBox[{"Eq", ".", " ", "9.7"}], " ", "in", " ", "the", " ", "text"}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"maprules", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "1"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]}], "}"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{
  3.756045303204299*^9, 3.7560479460515614`*^9, {3.7562265973026876`*^9, 
   3.756226645284565*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"define", " ", "codewords"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"encode1", "[", "i_", "]"}], ":=", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"i", "\[Equal]", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"i", "\[Equal]", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.755991539172171*^9, 3.755991582337554*^9}, {
   3.755991649714592*^9, 3.755991650559086*^9}, 3.75599219997773*^9, {
   3.755993554386586*^9, 3.755993577162553*^9}, {3.756048080468698*^9, 
   3.756048087227017*^9}, {3.756226583610921*^9, 3.756226593140259*^9}}],

Cell["Create an ensemble of outputs after level 1 QECC processing.", "Text",
 CellChangeTimes->{{3.756226670192758*^9, 3.756226700702083*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ensemble1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{"bitflip", ",", 
        RowBox[{"encode1", "[", "input", "]"}]}], "]"}], " ", "/.", " ", 
      "maprules"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "max"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zeros", "=", 
   RowBox[{"Count", "[", 
    RowBox[{"ensemble1", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ones", "=", 
   RowBox[{"Count", "[", 
    RowBox[{"ensemble1", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"error1", "=", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"input", "\[Equal]", "1"}], ",", 
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"max", "-", "ones"}], ")"}], "/", "max"}], "]"}], ",", 
     RowBox[{"input", "\[Equal]", "0"}], ",", 
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"max", "-", "zeros"}], ")"}], "/", "max"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\< # of Logical zeros \>\"", ",", "zeros", ",", 
   "\"\<    # of Logical ones \>\"", ",", "ones", " ", ",", 
   "\"\<     % error \>\"", ",", "error1"}], "]"}]}], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" # of Logical zeros \"\>", "\[InvisibleSpace]", "271", 
   "\[InvisibleSpace]", "\<\"    # of Logical ones \"\>", "\[InvisibleSpace]",
    "9729", "\[InvisibleSpace]", "\<\"     % error \"\>", "\[InvisibleSpace]",
    "0.0271`"}],
  SequenceForm[
  " # of Logical zeros ", 271, "    # of Logical ones ", 9729, 
   "     % error ", 0.0271],
  Editable->False]], "Print",
 CellChangeTimes->{3.761157568338463*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Level II processing", "Subsubsubsection",
 CellChangeTimes->{{3.7562270917893353`*^9, 3.756227129487714*^9}}],

Cell["We now implement second-level encoding and processing", "Text",
 CellChangeTimes->{{3.756227141919772*^9, 3.7562271864468737`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"encode2", "[", "i_", "]"}], ":=", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{"i", "\[Equal]", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
    RowBox[{"i", "\[Equal]", "1"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"maprules2", "=", " ", 
  RowBox[{"maprules", " ", "/.", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", " ", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"1", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.756227189236701*^9, 3.756227204425709*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]}]}], "}"}]], "Output",\

 CellChangeTimes->{3.761157568601343*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "run", " ", "the", " ", "simulation", " ", "and", " ", "create", " ", "an",
     " ", "ensmeble", " ", "of", " ", "codewords"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"encode2", "[", "input", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ensemble2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{
          RowBox[{"level1", "=", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{"bitflip", ",", 
              RowBox[{"encode2", "[", "input", "]"}], ",", 
              RowBox[{"{", "2", "}"}]}], "]"}], " ", "/.", " ", 
            "maprules"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"level2", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{"level1", " ", "/.", " ", "maprules2"}], "]"}]}]}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "max"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zeros", "=", 
     RowBox[{"Count", "[", 
      RowBox[{"ensemble2", ",", 
       RowBox[{"{", 
        RowBox[{
        "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
         "0", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ones", "=", 
     RowBox[{"Count", "[", 
      RowBox[{"ensemble2", ",", 
       RowBox[{"{", 
        RowBox[{
        "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"error2", "=", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"input", "\[Equal]", "1"}], ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"max", "-", "ones"}], ")"}], "/", "max"}], "]"}], ",", 
       RowBox[{"input", "\[Equal]", "0"}], ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"max", "-", "zeros"}], ")"}], "/", "max"}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\< # of Logical zeros \>\"", ",", "zeros", ",", 
     "\"\<    # of Logical ones \>\"", ",", "ones", " ", ",", 
     "\"\<     % error \>\"", ",", "error2"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.755968665883402*^9, 3.7559686950565567`*^9}, 
   3.755968785632842*^9, {3.755991505724684*^9, 3.755991527122202*^9}, {
   3.755991634518599*^9, 3.755991645249144*^9}, {3.7559917462516117`*^9, 
   3.755991820625759*^9}, {3.755991869104134*^9, 3.7559918739442463`*^9}, {
   3.755993415177765*^9, 3.755993417247952*^9}, {3.7559935951174917`*^9, 
   3.75599360051615*^9}, {3.75599364893592*^9, 3.755993919430354*^9}, {
   3.755994082661326*^9, 3.755994102604355*^9}, {3.755994348152104*^9, 
   3.755994348429812*^9}, {3.756042506499619*^9, 3.756042509815152*^9}, {
   3.7560425439841127`*^9, 3.756042544386397*^9}, {3.7560425998523912`*^9, 
   3.756042636828177*^9}, {3.756046325822089*^9, 3.756046378427125*^9}, 
   3.756046464850706*^9, {3.7560465303382397`*^9, 3.756046543545973*^9}, {
   3.756046907350267*^9, 3.7560469291751537`*^9}, {3.7560469614095697`*^9, 
   3.75604699186091*^9}, {3.7560470282469463`*^9, 3.756047098207947*^9}, {
   3.756047276053286*^9, 3.7560472932516108`*^9}, {3.7560473331591797`*^9, 
   3.756047409600898*^9}, {3.756047446524288*^9, 3.756047495383531*^9}, {
   3.756047531377681*^9, 3.756047605393643*^9}, {3.7560476507829723`*^9, 
   3.7560478253184347`*^9}, 3.756048001968194*^9, {3.756227232427731*^9, 
   3.756227266593429*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" # of Logical zeros \"\>", "\[InvisibleSpace]", "19", 
   "\[InvisibleSpace]", "\<\"    # of Logical ones \"\>", "\[InvisibleSpace]",
    "9981", "\[InvisibleSpace]", "\<\"     % error \"\>", "\[InvisibleSpace]",
    "0.0019`"}],
  SequenceForm[
  " # of Logical zeros ", 19, "    # of Logical ones ", 9981, "     % error ",
    0.0019],
  Editable->False]], "Print",
 CellChangeTimes->{3.761157569878168*^9}]
}, Closed]],

Cell[TextData[{
 "Exercise 6. ",
 StyleBox["Taking the data from these simulations, confirm that first and \
second order concatenation procedures did indeed results in single-qubit \
error probabilities that scale as ",
  FontFamily->"Chalkboard",
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   RowBox[{"c", " ", 
    SuperscriptBox["p", "2"]}], TraditionalForm]],
  FontFamily->"Chalkboard",
  FontWeight->"Regular"],
 StyleBox[", and c ",
  FontFamily->"Chalkboard",
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"c", " ", 
      SuperscriptBox["p", "2"]}], ")"}], "2"], TraditionalForm]],
  FontFamily->"Chalkboard",
  FontWeight->"Regular"],
 StyleBox[" respectively. Check this scaling for various values of ",
  FontFamily->"Chalkboard",
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox["p", TraditionalForm]],
  FontFamily->"Chalkboard",
  FontWeight->"Regular"],
 StyleBox[".",
  FontFamily->"Chalkboard",
  FontWeight->"Regular"]
}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.756227303966587*^9, 3.7562273075833797`*^9}, {
  3.7562273391218433`*^9, 3.7562275023942757`*^9}, {3.756227533196356*^9, 
  3.756227625987398*^9}, {3.756230386252763*^9, 3.756230387005131*^9}, {
  3.756283905147348*^9, 3.756283905639535*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[TextData[{
 StyleBox["Exercise 7. Suppose we concatenate up to the ",
  FontFamily->"Chalkboard",
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   RowBox[{"kth", " "}], TraditionalForm]],
  FontFamily->"Chalkboard"],
 StyleBox["level. Show that the probability of error scales as ",
  FontFamily->"Chalkboard",
  FontWeight->"Regular"],
 "\n (c",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", "p"}], TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[")", 
    SuperscriptBox["2", "k"]], TraditionalForm]]],
 "/c."
}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.7562276453611183`*^9, 3.756227753388633*^9}, {
  3.756227986243038*^9, 3.756228020516884*^9}, {3.7562839088569107`*^9, 
  3.756283909306889*^9}},
 Background->RGBColor[0.87, 0.94, 1]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Fault Tolerance", "Subsection",
 CellChangeTimes->{{3.756228059994268*^9, 3.756228069026722*^9}}],

Cell[TextData[{
 "Having established that, after the kth concatenation, of an QECC, the \
probability of a single bit flip error can be reduced to ",
 "\n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{"    ", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"c", 
              FormBox[
               RowBox[{" ", "p"}],
               TraditionalForm]}], ")"}], 
            SuperscriptBox["2", "k"]], 
           RowBox[{
            FormBox["",
             TraditionalForm], "/", "c", "  "}]}]}]}
       },
       GridBoxAlignment->{"Columns" -> {{"="}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]]],
 "\n",
 "We can re-write Eq. (1) as",
 "\n",
 Cell[BoxData[""], "Input",
  CellChangeTimes->{{3.756227636173897*^9, 3.756227638238625*^9}}]
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.756228081628027*^9, 3.756228154640236*^9}, 
   3.756228416487234*^9, {3.756228660401794*^9, 3.756228671460631*^9}, 
   3.759855119594006*^9}],

Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{GridBox[{
             {"N"}
            },
            GridBoxAlignment->{"Columns" -> {{"="}}}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"c", 
              FormBox[
               RowBox[{" ", "p"}],
               TraditionalForm]}], ")"}], 
            SuperscriptBox["2", "k"]]}], " ", "<"}], " ", "\[Element]", " ", 
         "c"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], TraditionalForm]], "DisplayFormulaNumbered",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.756228335641974*^9, 3.756228387923607*^9}, {
  3.756228848941441*^9, 3.756228848944106*^9}}],

Cell[TextData[{
 "and can always find a value of k, for a given N, for which this equality is \
satisfied. However, there is a price to pay. Each concatenation introduces \
additional resources (e.g. gates) . So if level 1 encoding requires ",
 Cell[BoxData[
  FormBox["d", TraditionalForm]]],
 " resources, second order concatenation requires ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["d", "2"], TraditionalForm]]],
 " resources, and ",
 Cell[BoxData[
  FormBox["kth", TraditionalForm]]],
 "order concatenation requires ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["d", "k"], TraditionalForm]]],
 "resources."
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.756228398544877*^9, 3.756228399433386*^9}, {
  3.756228431022325*^9, 3.7562286259419107`*^9}, {3.756228688470793*^9, 
  3.75622873821801*^9}, {3.756228809498186*^9, 3.756228810158627*^9}, {
  3.7562302010543833`*^9, 3.756230217635244*^9}}],

Cell[TextData[{
 StyleBox["Problem 1. Using Eq. (4) demonstrate that the number of additional \
resources ",
  FontFamily->"Chalkboard",
  FontWeight->"Regular"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["d", "k"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontFamily->"Chalkboard",
  FontWeight->"Regular"],
 StyleBox["required to implement a fault tolerant  circuit with N gates and \
error \[Epsilon] scales as",
  FontFamily->"Chalkboard",
  FontWeight->"Regular"]
}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.7562287450022287`*^9, 3.7562287475663853`*^9}, {
  3.756228821973996*^9, 3.75622903300382*^9}, {3.756229077542584*^9, 
  3.756229080074359*^9}, {3.7562304404444323`*^9, 3.75623044505583*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[GraphicsData["PDF", "\<\
9E14ARda;SD:9M3DaMP:=B0`86mRJPXl?0X_C6E^IgAX838i820P820P820:;dIY
K7AULR0_AVaQM6E4IF=_I6D:?Sh:LgAbIF5]2WSJ:n@bE300@PRIW<^UkiI[Z>2B
caG81@1:;0F32VE^I7=dLVEQK@YUKVA_HVX:<R0`86mRJPXl?0X_E7U`IB0_F4mR
JVESM0X_DgERM7U`IB0_AVmbK@X_@T9_N21K<20`834a=b0e<Ed:;dI_LVeDNG1U
834:;deQM79YN21K<B0`830P<B0`831M2RmBIG=_MG9SIG<P>20`858:;daUKVMd
J20c>20P820P820P2Rm6JFadIG8P;dI/HGAUA6ESKfAU2Shn2W=dLVEQK@YhfR_T
<U@`04931Ee3<b0f=3IDB<kUd_O<=EA`bNL:i080K0<6[@YUKVAcM79UHFd:IFiT
Kf9Z2S4P<21_HVX:?3`:;eAiL6DP;eQ?HVYUHg@:;e=eHWAiL6DP;dI_LVd:;dI_
LVeDNG1U834:;e1DAEP^AVU/IDiQKFDP:2mfHG8_IVm/I6EbLbmb<bmgIc1]>6aT
=CMg<fAfM3Eg=c@aK70iLc0`<30`Ifh_E2m<HEAUF6UD;C8^=Rha;faQM6EhJG@]
<Bdb;W1TIRT:;e1DAEP^D65WIDieKF9ULR0a2Rm@E4EH;TU^IVm4JF=d83TP<21B
2Rm2@Vmh85/`830P=S4a834a>3EM2RmBIG=_MG9SIG<P?3`:;eQ?HVYUHg@P?3`:
;dI]<B0a<20`858:?Sh_D79_He=UM21K82m@A4HPG@Xn?PX_C6E^IgAX83Dd2Rm6
JFadIG8P;dI/HGAUA6ESKfAU2Shn2W=dLVEQK@YhfS=D<012@`E34ce;4a<5@d=S
@hGTG:i2;T<m2hPDU8H8@UE31OCMLPdEG?:i0X4@0?lT3SL:IFiTLgAbIF5]2VE^
I6mRJPXa<20`86mRJPXl?0X_E7U`IB0_F4mRJVESM0X_DgERM7U`IB0_AVmbK@X_
@T9_N21K830P<20f=R0c<5d:;dI_LVeDNG1U834:;deQM79YN21K834P<20`834P
<20`G@X_DVEcKgEbHfEc834a830PDPX_C6E^IgAX83@f2Rm6JFadIG8P;dI/HGAU
A6ESKfAU2Shn2W=dLVEQK@YhfR_T<U@`04931EdSLb<mBd];1Edc8g<P`d8Q>IM;
gc?GD<4UWb^@2`2X@0Q[2VE^I7=dLVEQK@YUKVA_HVX:<C8P<21_HVX:?3`:;eAi
L6DP;eQ?HVYUHg@:;e=eHWAiL6DP;dI_LVd:;dI_LVeDNG1U834:;e1DAEP^AVU/
IDiQKFDP:2h_K65dIGQYM2da;W1TIRT:;e1DAEP^D65WIDieKF9ULR0a2Rm@E4EH
;TU^IVm4JF=d834c830PDPX_@T9_N21K830P<20f<C8P=cTbG@X_DVEcKgEbHfEc
83`l2Rm6Kfid83`l2Rm6<B0a=20`858:;dHa<B0a=B0`858:;dHh834f830PDPX_
AS4`834g830PDPX_ASLP<CPP<21B2Rm6=R0a>B0`858:?Sh:;e1bKf=CIG@PFbm@
A4H_E6EhM5d:?Sh:;daUKVMdJ20c<S<:;dIYK7AULR0_AVaQM6E4IF=_I6D:?Sh:
LgAbIF5]2WSJWI>mC/=@38Gg?8G7MZRaOOo/5@V@:XB4b4Hk]FZGE/34jn<T]i2F
Z4Q<^E9>SXnoNd:`1h:7Q^[c]Ve^kQT<;D^6MPMB19T5LV8D=FRgl3YKTM1lgBiM
>]HFS0TF0D_@@GNH;hAVKo]1Zb<Y1f@Z?[;jYI<O@DK[3GJ@d2D1CL8PNnXdcEgK
O3C/Wa8`R1DOIaj?T:;0i]Rl[PVfoW89Q<4D?W_YdM=ADSlMh:Ei[X^>YgEF:PXi
A]lh3b<g:n;b>khRinCAHTSO6o14^V8XZK<D;<;GdPE2hgPAko`RZUL@=;;o0RjS
SOg4>PK<dh2k;G=86:oScKWlPKLg4/=HH/Gk?/EF/dba?BmVG`iF?7G=>lVC7C;_
Y23Uj_IhXYDQXRV7BT_DMGh9EVmN9/`2ZWZ5OTCK7QQMo4@>l0^aAKUU2VE^I7=d
LVEQK@YUKVA_HVX:=3@P<21_HVX:?3`:;daUKVMdJ34P<C@`>@X_C6E^IgAX<R0f
<C8a2Rm<IFiWM6Pc830:;daUKVMdJ20g<3Pa2Rm6JFadIG8P;dI/HGAUA6ESKfAU
2Shn2W=dLVEQK@YhfXed1cBLkMJfgX;X9MXPNQfmma;ANbmSIS3:36?DdG^dR:PA
_DHG9M4R288@144@XT@?2J;k96oNLlikoWn]ke^ceS??_Jm[]g]Onn5P=C0FD8HP
7:4J23Q:02PX;0=@eEFg00X3Q8E51HF5AHPh>4aP:7OXggHR3S<XdQ^6P<_l1d<E
2@FQKVaZ8=@=DAL11mcgL@L0A@502AVPY8b`<414F5SjKb82:@=@0oW2801M@L1m
11cZCLBQR_0<@<:LGE0gNOin1G23N@10JFU9o]o^06D?:1861/41^R2D2mCS9R<H
i0h`AX1QD5C0?d9`bkVPD9hb@T9nOWj280m_@@CBFH677n07@kT0S:3ND:@_50;h
eC903n@1oM>J8147`<@5i_dGH8a`@_V1T530SL4M1XK2_FmLO>0@:19`TaeP[:D3
d?N4`_lRjoa5h0Ol^A`0D13h[g1o_7l5P/5o>h?0H8B79`PN08<k0iaPkU20_XJ>
8<XOa@l0`B6oR21gKlB=?lPG17<7>Mh@OYL>0VPX6`90=agnjLlKS8AiX[`5_F7^
_gXDnQGViY[EhA1EQ8L758kb9_YEWaX<2@GOg7^0d9oQ^/4AOW3dgbLW61cRm:/=
R8nWT2TLi^D3eE;k`kTa4OgKiPa50LB5YDDT9B@0D2l0e1o/8_@[PDV09o@g2?aU
_^TQ6>f9l0@hgK@13HHi@FonR=3N85lX08GdP@JSoa?hihT820A0H60D`17Z38<C
oC_jSAWZm=OiI_i8V3o0F_Q6OT20l:oO_mi/Ka@6@L3M0oi=oceR8E<[KBeU?Kho
;Ol;E551n0?@0R9R004AJ@UQ051<G0`P:BT22?iW80<@k4lQon6/1GM20:CoZ_OV
X_j^fON?2;SoK0P?h9nam10gdXD2^?n]M1]QLF7`c@?hOmKkKiOoWlaoAOUOUOkO
5FWh^;_oa[Wo8_`o><P3iQk`Qg4SGAoDcA[X8VjF0OkOE7?XGk^[2hG0O3cn6mE2
PFkF@AW^k?j_RhAiJl3lXA0360[/lYMRo[:Ko]XeMaPLJX3`Q_gj^P04P<;2ohGM
;1SHkNH;hWdSbml@m6IooYUB7@i6@7h]VXRh1024A882R6k6O7<B1j21=a/9PO[o
5S90B12>@=fh06kJ2`Hh8I14_fH:U008NMil1n3^D2ND2/ci5oXG8?T7n3g2_i5o
i0Kk86m`e6mmg1CfmoWgaT>QoU0`dN`d0R`KiOXlZ^>TGYW1Cf1]E?h3aiYi5Xl0
NQKIjG=6RYo>DoLdhS?bF3Um/8M/OTFMndQYS^DB_MgJQ1oKm]R`oCcX`_jAdOQJ
>m7<64goni9]iLHn9T960A>UmJ1;[b2cL3O/E/b^na`5GSiBY0I5U2MnKcCm6o/Z
?kf;VEhcG:nCd;ieDCTQT6BJJ1=N?/UAj9PkALN6Qa9P8^2Uf?No?GUdo84Roode
boe7O4C1>dVRYFR[9I7TdjW0QFXC4NoGm7OY[NRH/8lXgXecXUDf<^kCOTAGU2hF
Ck8V>gUNJbYJ7i^4XmalWW:9dnPC6`20gdN/1F]E1UGBMe@@`VTS9>o<40CkV[;Q
aMoml[LISZYEMB7Jn8cH<I`fURIXM]mZ4Xm1@0NN^[QTVfK8id9R_PQAjkkBj2NB
RJ9m^C@bW3ijQKHZZhCgXNBgBTJ_O<mk^2Vna659g/O@8]G@5l9e/n9AaBYc2glL
F9G=:eUZhN?[mn@=BF;iK<b9<nMd@[GYaAhEWeZ=^G9Ygm;WbDKVGJKEPBV3G7oI
HPiKI2jiD/TB9_ieLSiiXBInN^eBf>iJR=?IOK6XKJVIDkA_VXK^HM59j<VG5f`i
8MEOLE>go9khEWlIV8bmXPHfKenmfMK2`23f^6oQMXO@3BNIJVZcCaa8[IJG5;M8
eflmK8k`M5nahmkm9T/mhANa;6MnZFlaCdIH@N<II_T448GgRLJ_L>3S/]9SK73V
<bh]j_7M];<^RZ:05n4=OCb;3SiJaNC:jN?hcXPM3_`SN<KJ@gJ>2cXN7H>jFQ6J
^9N>iOHkM;JIL3?nbK>OU8bAWJkFTmCgWTlfVTG[Y[XjBYF>j8O>Q:2>[5CFWW2O
K<2FBifN2WB4=e/K46ZFl7B7WLSSf1=mBeX:=1Yo]Lhea>:Z[41ZXh4gOCR/5OSc
G_BcnX2kVDEgTKS4C@bcPT8=oZhSDZ8iI?Q7WoJF5B835Nj/MmjFoZTgo]AGH>jk
Ko4BchF9BK4J;e>kUTi`OX/GHofGRTn>oQlEOQhcnI06MjKDLVk:S6k;^m]><NmT
Sb=TG[aXR]dZDGnLD0?kE;i[oE3I;^?miC59g81eY]3]=GFS4MVg1dJKBK9YY6cm
4]amcaZe6AAEFDLDI9eMN5i=4F^2F[lAB/<=Wk4/_9J;D:9Mgho9iJITTI_3S4_:
H@SRRn49WS;X7hjU4^5leP1Qc_3b05mlIUoA8WEig[;A^jIa3=Dj5hPcK/AQbY/U
SV:1[gim5h@^1K?4>@Gh9XT9eikgK=_jj/LZ7R`TF56lOc2TajjeEl^5JB<mkcMh
gQ]]D8_]nO375FjK`eHW[6H7Qg]EI5P?Uahcd:Vdj7]MXW;7d2=[aDNQYd?G`IVQ
7bCe?_7d2J2>N4[/Z]Be^>gVDgF]Kgl6C7Bng3IaZ[1n]Mg5<1bh/8T^V;n595>M
5ZW]/_`1oZ;JEc:0FmYGcEb3MNZdMTUkjS/<[c7ILcIALIjeLfZ;dZLZ<Jnn5Dgf
BUAk`OU[8laWOf?V<EB1hOQD[cDjiF?j2DEe6L]?[`[PS;7Pl7@Agl<>hKL?@^FF
OiKK][cccJ^Mm/2gn[UGFS18W5?7LRkOJFkVHWVKdnP:GL<Z4_YY_V>3Je/?:L4d
f?3@<JW0[L@nTVk^fOP:`FKm5DdnkN]WMdJF]kUN:lGA0o^YUdFKdJCk^]X;:F7f
anOf/fld@@/VGL[HSYQ3lB?2EQDZj=FB@Q;8m5XWW/SmhhcJEHEcP:CA1h87Xm[E
TXW;>5TO7jH@S<o@MY^@bKj]gmRYhK<FBe7i`H_1V=i5h2DF8R]Id:P64<N>=UO4
<_kIc_UA=;eRO?70FVM]mkCZN=n>2iehHL1SmZhYY525?`LXK6G;I7:N=:DZ@PFE
UEOj8;T8?j^C80ZRccnJHYkWEbL?;fPnRn0KJ^NXnf5?ZT8bfRK9cG<[iScJWeYK
8S_]`Z^Weo1bWm9m@HJfU[1/d<5[Mc;P6bcoQkenlB/LbDfZ;k[J[5gRmMcNFgA>
LT?Z`PC]mo`F[KHEW9_:ghcL`b^U<@Bbj2E8/jk9B]eBV_^L;A?f_YYcBn0Q]eZT
/?2;oHYm9cME9W`Zjo3lfXaiOo[41BiioiQ^lm1kgioMPXD@NI>Fae=@GeKkaIhV
9ADgjYMdQYU]eLI5`g8VklOX;=5m>>=8CJM7C`D/I65YH=1O/<T@eLh0[NN_N[oU
g[HVPDmkAd?cUVd5e=H4<kiW?@FS>>dcE?_^iZgTJ]VZcFCeEeEb5Cf<NSCjkEQ=
<mHHkhgQgHT`Cdb6bZVX;W`9^N^_9oDQn?]/JY]McU=i@:XU6/@TSQ2Oe8oJl6F5
NL_LcPR/>aI?nF[OSfgEeaa?A;mjl:YKaXVfbX9L]g]nQk@`PY^R?0B55n:On6KS
45c1EnU`3oaXeIN:kBWO63K[^_=:<SJC>aVM;8OKaVP[2G]4hQ?O7CK2R9LLWgBO
mN0XYdY<anRQ@j?OL[BUfbKAZIdoMi1MEm3JkVQL;niOLfiQOEZXJPcKV>W=@SR=
3CSCa[_CnLPPA0/2<YQ<maN:?^kKP?9aJKYULGNh7RlmL:YBF/k9mYgiDQeoIGEI
igY;CnFiKF@YeKiP`4_HTKUXkcVQ>3X^lNeM=Pa:FHK=SiHG]UG93PF/<>01n^9i
PeED?Oafd0n<jRPcHgkO>XWi_Rn20b2?^d4[75Bc2^<CGgIiC49E^kiVC;Za5ClB
IJ5J@CaGhSDboLRO?2dA]b[7`2kF8dKPT>R_e[oo1Q<QXcj=n/B<eXfBH9N9cHbY
OF;[mgDakbQ7EKTb;ig;eKI@o_aLFb`>mi1YCefiEkjTHEAVF5Mo4]@o`FMV<FRm
D^K8_l3T0I[UKHfWBafAT<jdRZng7BYYkhR;3:YcH1ij[dQ5Th3b?M3H:?:K6DF:
l?B?<K4lH9hFFQEH`MKgKA37kR?_EPX8OIH@8@f`KF<O^lKl>?kfm0NVOdP<6^<K
:n5`LN2PW1G64B9I4>DhX>;DMVOO/6DY96nXYjRNHj;J:2k8QUP5Y/f[ak4O//e4
FXFfWn1dW<ec@/Xa[R:a8^hbP9b<DQh?_3Uk?TLDSeNHebD=8;[5cY;l/_D@>NI^
_Qe6dm5V;Tb?NbTKEWnNejQh;dV?mPEjJF1g7M^58KmO:g>NgAgFm6dSX?4akBc1
gF/TiFNi9QAmCSc<0Q?DFk3kWPY?95o^/S4S5C[`jDU4f<R3QeZ[dN<TciHnDRLV
[]WR<LgAeGOcHf_ln2UCOjm`9WGJgI948n>NLNPN=HcakJ<klJoYIM8eZBaG3RnS
f[i[=V86kV8l@9]KHAP3[EOO]11J/5F@AiW<3E4gWlU0^Uhf/49KMO<R?^kF3MGi
j^2Hg2ZSYdS_/R5O3D^Q3a32f9co/FGV=Hd`3k@2O`TA3fKMb3JQJF]]e6/V951?
[DbN^VGVVIfb?N[ahe1PUG1i^20m=XUQUEHm]VTb/DHjIHZV`E1h9IVI8YQOZ8P]
[L5lO/cM/H>h99o2bHQN:WM8R]h/DI7JA=M6e]BnNddW<kA_iiJ[;F8ffYVYj0dB
Knom16m9d4UGQb_Q4nLdhW3IO1POMh3C4^FNRiDJ1S76?RBl=J==N9m]MkfMf:Lh
5l;ob=]P[/:9agU?:CH2Be=O>o0XWBQ/MOee:j5aTMenf]54:Sn;dIACbTk;UGZ?
CDk]MB4</ik=miUYi[2/c=XgJl<3X`m[dS><KQR@Ec6WOZoCQfbo`_`XYnVoB382
3CX_6mPQFGZ@^NKQeh[ETQ75mBY1VAMK6MlV1b?l>YAmO=hZX4gje6`Ufjjg1oLQ
bc_XajLe11?d:nHXj^nA^YjD<@F`^G1^b/:OO3Kl]2BNE[IB;kYjReY[o<3^m^Yg
MVH^G[lL3M?4HVLhoCSiXJ6kYhERZnJ9_:fU90G_dnAYI:CQ5H3Eg73n@aBbkjSb
f1Uc2J8[cOcj0o`>Kk_1Ld3C:lIT[:M;lHjOAJ>Z=UGJo75^@lV8SiF0ARkj[[PW
dC@4dJLf?k=6E0;0OZAIPCBiY?e3[P0bJ7?cQ`og?RZVm6eB=16VVjHCQ51iK[iC
Sf2l_K5JAReHkAHjX?FhMPT/iR`g_MU>^oY9IJ_]e6[KYP];QIZi:U[L9B8GfA9c
Vejm^22:6V97fNMGfA>?=@][O^41:9;5?a8QYV=Ck=/R/WF`Kj1iIPFP`iLbH<Jd
fA`mm<]jbQ?>62W=8Ee0C_/S1a9U;14jBFnAY1PLTlRgTZLcJ5UaokeMP1;`M6R3
U0F`cNf2=Wenif8<nYcNXfZGGd<8/Y[553o9a7I?lXiRSb_aDk?PR><<4J9eMb;m
9WM7KPe;ZA5=l[??3K]RmH9m951SDP:<ikHELPg?DjTLUM3_1T^DFC05SN=81YdD
4Q6_SgF:n`/U<XDF_WJUmOIAj]n[QBX_UlCR31b>/Y?9^>j]4CE9gRYm;M5lVm5b
mOFHWI4_4k9YDa6gREK_I=Y/@V]l=Q3HG>I_Uf^P_3TjMOdiY7[m94lkU`GG1iEZ
O?g8`BYbBM?8PMTTgEUdiejgf7;^AjiaZ;HARD?UO;QK;]n;ZTGjiDDbL]NPiEK9
NLABncdm0c`_RPLYi?NMao349T9g=iN:dJM/REnam0P>l1O^Oi^K4M`ln86;OKPd
aZ:9/3h>X?A]N2BXUF_L`ILb84e6kCYZfZ@3hH][O^cTTmHaG?XVa<>`/<69^MMK
ld1ge76<Il_8DVCiSD9]P0STPCc>blQAnWKCfnT7>8G@gNfIRnn]658aB[ab_8[=
Zn^/A`mC17L2lVd=G99YmJK7Z/J1U>nl`WZo[B<]:IggW]O[9SLI3G`ABR2Uf>XV
>[Bg69`IGFeo]HgdhE;nk>T3YN@K_^=PRJoP5@<`ofjQfB41nAKgliDEFBY9e`5=
5BVDi>TJIN`e@DCJdL7IDi?FTj;1gFof/M4m[WH90^_SG=K`4WP0]KiE/Hcnj]FT
XVUbFVEXNLX[dD1I3BAX^I8<Yc`hALRN94MPJD`]W`_aW9EAOmF@:f6X@FOdF2V;
n=V<8:^YomSgT=]@8eMiDoWADSF_m@K]//nYW7TndY_W>2=N>J=ZLS:O0Lee2NC;
>XjMPZ8M1mNQDN3E:eb>>GoKZXl?I75ZJk[OH1?_dgJ^PGIK/X`2H_99?UW=bD`U
mKXoBWieK1Mn2_lHB4K:>Rb4_31=;<>J:]/ChnUcdGnAZX^_2gTc@]JjWQYj=Dfl
3A@kJQ:b>7o``Q]DCbO<]XNSG;EMgCa`14EV;kNT^RMSZnSMSRm0iT_USRoDFgh=
@@I89kPTm2U^PEeVlc9Hcj9H`4ADUSQO4j?e4lTj?if1BbR>iX>mK[lBalg?c;1Y
>L_PKP^HHZEiN5UVmfEf6i]KYkcU5U1LM=KE=cK`d2EnPW5ZDg[cAEY]o7XVPn@d
YMFAZ^Da7^IJDV=Hjc_mkZE:6GkF5jVGYUCAZWMiieb/=L=k>335TSKdH`iO/O>E
13c>T60KDc0b4R2GHAndd>7X//bS;TXIE7/0ZJ[Q]ek4^jR^[HgE:3;I:RP9Sg<N
]P17S3EdMLZDd2>T1f;CKM1kDCGkead^7;kBAe`X6_`5DfHEZ]:VD/>nM<k8<he[
ckk9dTnCo5;V2F_KVBg7faZ]kcGb`k<N_aH`;54gkaQCDglN>2k^WLL^J8:W1R@c
4XiJR:m^T3Vo^a3<5hWTgJ`aC`_=bcW63E^/=GG/NVYSZekQjhdOe:^XhhIhGY:/
Ge/bN@DKd4Qj4>nO?/8]mB0@^7a:3HW/?I?b`bLDc;fckaS6m[BN@i_03RHNgB_M
[A[ddiKYo]ME;5Za@TnDJemlkb?E]:bg/FWQ2B=4Kf[^C6Zb@3LN[0Va0IQa`]Vo
Da5nEV85DN^ba3QnEfl@?ZSYc/6J`3ME[;<1;3]JUWcXg8kmZAEIhS6DNBA8<N3P
ConMKhHbh[68UiD<S^]:@mTVbUbG[[=N^e:fGjZ^_dci:K7g3ZOGQ@g2Zj8]fL`E
ea300J/EM@]?aKP;?oYaA<M5eB^OZ<k>fd]TKVI6g5VP]FAP:;E=5gJhLXV]<;TD
2R>N4Z=cm23/8BoaP9f7[SdINSD^J>3`g5ahI9a;i4N<l?[d?<JXkkVO^j0]=<4m
Nb`RM9OYM86YSkGF<S<c<6NJKOPbD^>cVm58M/_Dj1YocA<7]fF>Q2`]7dO@1McV
bVP^eXL>@[n8Bc8RPiYGO56oHeUVW7afGRQTK^5>XkoiT;CF]Q]MhIY2m;[1:C<m
c_j1Ie3JfYJlUGk>0?Lg_/Y;QnekQ4A]hR@QCij><lM:@U`8gV9eCEOIVWd2=Te=
A^dl5BTR7e?S7SFgkQFR@VTBV@?B^9]9MP8;l[E?L>ZVTcJjbB]5[EPCV1@>TgG:
4cjKO`BAJYC;eTKh5@T_[X:k6SNHU3?ZdnHSMTKVMLS1hNgZ8=VENV8ii8ba7@iY
=/hcX_UY4;m3H`[FPcOTFC7B9CHk;CfEU>/iMbJa2UXCi7e3A`FnLffZJI0i>lZk
dklmefML9o@K2YAm::NmFfIQAc@F@_Z5lj7U_E>Q0DKV:]J[n:]n7hgg>iD[?IPo
KSl?]FHIjN>iYIGdG^FQ09HbYf<bF/Gk]N0Vk_bRNFa_3oYNkV:0B0QIamANNLgk
kWW1jE??U5L]eiS7khDN_nW94V62f@/0E@mD^gMj=M@CO0N2Ai_k@J6?4_MNB0bJ
DHa^7A?BK3A91Y^SZ]J^bY<T?@j?Ih=<eN8G/l?;9T9P8MiEQg_=>@nT@;H[3R4_
I=c^k^O6]PNTM?2QHVdRJ41j8?PT1j5/WVZ@m=Cj?A/MEMn_FQ_9KS5kTH;n[gKR
4KIdMdWeh?VZdai1G3YLGgEh_1:h<=J`>kl^7X;9lnK_R1^fcn9Rd=8e^j8[0mB5
]]VEaT<Fl/TA537WfSAHD6D6h5;13k[Fk=RVQ?`hU2kXYo_`;@`;l;G0WV8gV=j=
PWCI@2:k8eC:PNGj_ASD48<Skng;dl9EQiVamX4n<dE1Hl>MPodFUUQ:S8[e]7X=
l1<iiiR]ne=OJ/cXT2L?abM/GGk>;Gm6OOHf4?f9L2Ro_2eA_2Sj45=P[K:Ci:BA
AKQcIRQfDE:/@nM:me_V4Sf@Eh4gG4fcFCc/7YW516Noml]7M7i_N@m><P]CNhIG
IAVfE[fiJi;H3EAVG`5L4?XXS_Sk3m]k2G_YO<HaSTTG1FD^3PhchSi5AY9LLd9G
e[bI_N_DBo[GA47_dWVc[`bfLWcCN4_MK0W4Sc7DcRGFTaB[oMM5Um2O>5j<eJWo
Z6R6VEfo;[QfkOm@DMMJWVI@7<V/ifomi?SF]k5Wl<=@LX>?Ld0VMW?l<MoB76FY
aBj9@TSPhiNi>[/7:<dmAg63Re`oO/7LcXO/c^ehEM69Ef<J<[>_mk3gaBiUO2QE
c7hZPASeem95BP>O`5VkKcUh]S^Kn86R=>LU[m8Fi4TL=`>g_2O7BSY;<RbEZY9J
P[65hm7B5bYk4WN7<RO;iESSTgMKEYH6i==TUb;YS4?0^J?jbZ/;5Ym[cSGeGan<
I0FKhIBgbI=S^?TZS2DXE0gA`<GTJMR3:U`^@dhGdlFn6n7IbmM=[;dSY4]RaEg6
cJng<FKl5Z^gMIHee]4^j=QXmIhC_c0@]h01eIDD7o;8[^Vlof=3JEFEUYOTIRT4
NRI:OJW]akn[UYfZhRblK76G<3kSJF5bd<]M`jh2JmhWnG04<]]9RSJGhlU:^KGi
FIT3JkSUHHHPPjc_FeZjdlbh8]=/]i8bOPiFgKMHl<SU3EFBPbg5?ZlkgQ9ST<0E
c0`lPkTAgRB8_0eA@l>`fAJjIHOi5YmKNSWE1o4YS/O7F8>[6o/_LOT?S:@36dd=
JkojZjPT=`]:j1ZNl55JUAbdOK4e31U6:jNVBLgS9P7Ic9Cj6ISI;V@mkFc:jSLX
V[ef=1mgYF;5l?JL43eiggF2h3_88Tef;`3`I<LO5CK=<LGR9]ome6A38?VebSCP
=_a0OgI<Ab/XI=Oj;AEVB2=1MQPoCa?nA;5ZS25?ldU9bl]h39]nSTk=ni3/T<Qk
4a8LUN9OFj^_mfn=2hU9nc?BJIBRU>6m9l7f5L>5:JCC]KXam>MFDdD^e=jY23<8
NE0oZN9gaAcJ/c0WQo_dl/J8=Ref7HnmhL5RkNfmY38:>lZZ::G5M/JgW4?D8XVY
S]37Fi6R]<9];V:US^a7fcF3CGPac<<Q2JEb@[f@o`7LLjCY2VE^I7=dLVEQK@YU
KVA_HVX:=3DP<21_HVX:?3`:;daUKVMdJ34P<C@b=0X_C6E^IgAX<R0f<SLi2Rm<
IFiWM6Pc830:;daUKVMdJ20g<S@i2Rm6JFadIG8P;dI/HGAUA6ESKfAU2Shn2W=d
LVEQK@YhfXeg1eBCfm8fdZBX517YA0A>Z4UXdW__7I6J@81@TY14>TS_:;dgYH[B
>b:PE051RRQ8UB951NVM;iIckcggomOj__F^UGO?c3>cIoHl/mLK[U_jAP8:mRPH
G1F5a0U01<6B02DM7@d860062`^2`D8DG5c629`[o6lm1ILY78=5X92Boh5@`/2Q
>;a>6H[30gE@B83VOEL0A1P04I>4g944P`52H;34gd0DAQ:P3?E0f0=d106J:2@L
Bl6UQ49kHa2>CSSl?Wl_0D0k7P14@^8>obmgP88K78>`Pb81>U2L4m`=_j<Me1EP
Q;93`77No`P1U7K2hM2B892WYjLPe0d[R<8hb_;`0c`A>2N08A`;agS0k@4oB`KX
@]gPOdXCY>0263/Q/;l=ARP7W2LD0`OP5Jh8>cPBRgNiSkB7H`3hg@566]X0?C@L
nA^/oA_03oQc>0288>AOhOiho`b4@?ibQ][IXMc@D:@g0^T8L42h`P5jZ]Z2>2lL
?`2:]?l9Q;YRDGQoZ0LDh@Z5h@6oDXL2E1D<051lQGoZ`mYQ46PLEQ2;L?eI8nQW
6?`aZb3]UE1^KW0T3T_a<cmU10I^QcmgKm2Oi[XPDIi8gklU1`CBg^5W6OKgdB0C
9<;m?Ua3n@l6[j;h]lhASP>8P/G_28^;0^3^0;RGWA?Xi`K6gVSh;b?TYaYOPkl_
6XD6>>3;P?/S7>3h5hD_5^X11n0`mn7n__mYn:M40H40k15f>00<kXQ0D_`k>Uh=
MoP]ho^?@GP1;<1hnT40h9o?_eIFN8KIXi2^g_n6ofXaB4OMB=7`7]nOT_mUE5A4
N@5l1HB50092XV0012`R3[R3GoSo<hhn5?4WSoo`eD0jX00oPog<5gm@OnO/lHL4
`3lC`P?hIc1M59jjL03`gdbg18^2kO0oT?lcggnio?mXoS?:ol[doli8mKj[jblk
l3OPok53gA2^gWl@N>[Nan77@0N57`KTOd?=h;mWE`M^SkS_m]mF3A`D?`h:B4Ll
Y@DP8X9PTMmj15HEh@FgedOPk9andnJgg^CW`;TRT71m51Kalh[1Nh71ofG3CiVM
2ohJ`N:inM/4aN973_N[TCmU>7jXoYV72]8>IOmcnXA4a@1@30KZCH5_?UhB1OQ2
l6=Z3oOjaFh0B129`^5M0?RJo@4>:0c5cdI3`<80T>=?gAmA701boKN8ic08mD_l
ajifmc4HO5Zoj89?jFoie`D0Qg_1kBPV9e1fDZ7>=J6]QeD:c9h2bd?B99_YQgN5
18H:[LU`gBZS=P^9ASWIDeYUZY=M45E[igIMAOO3g=T?>ki;]NaegR;k0^bZZhk/
/?R9Roe;hdVn1b`L4eA=18o=DQGI94/`g@Cj[37D7NAbmXkMAUaDOWoEM7i<l^BV
:eFmXaWFZ]_FDEFJ[Dg?8V7jmK<Q[QWFIk`/^/_`EmiW]dLQRk6FDFVjVAaJdVe7
58VNUMCc_OemdcAM[:mRPS@mPYNg><=a=2YBOBc:8YL[CJNOG3_=:o7Hb:CeQJUM
Umn`kghfai=jF:>kkKBd_F5e2iSLLLO9=]TQ5_;EihRE1Se=YiR>bBmHRKKoU1_1
C]CH:i]dP3G]c42X_ih]olcZXQTAY^Dm=Mhi<WmjGb]=`f:h9aC8[i<XLoiljJ]o
?MO;>0n7L<:F_jYBJIIDn>RcNMKm7D:Nm72jiTc_0l?6cH@/a=>MFXeURjLU@U/2
km882eoe@:AGV5`3eGoY_EaT_^o[8g;nI:N]CI5kb[db1QU76n/cGc_]UeWhn7PC
0WYCIiMA7J_ThnVf/>mGjKEPYMg[QR[b;oMYMA?m=_n1iV4/BQ;0W_]d_Cdj=8i1
/2F:XocCHUOT7]]c`WQkPU;Mo6O7^d7dKg]@[@C251jU@K776ciW6hBI05d:M9d?
BIWn3BWCdGI7/MhWgIB4/Y?l5cmTFm;d0SE5g1C0PfN6`PdCcKadOKi]O4oXFiIX
9FPF`Q3gUhMeTYOdi:VLo0F^O`8n_1Y<Im0G/YKh:;IEHGjg>Bn6IjbJNOcKUMIB
VB0b@HVWGk8gMXDMVIUf/VF^/E^dfK1O`2i@=SNf55U<2nN>Nh87;SM/Vg6`Of<T
G6[8bGXm3meN@meCaNXUl8@V5g9]fP]]=g_6j[hX7e>GgE?fgm/RniBCd6fNLZge
Fedea?UNAHQSjCGBMPR/[CUK/`cZIm_V55L2Nl3cb]<lI=?>PQ_/W;aELiOPS_NQ
8lGeM2M6XlJ`9m`T3oaYdNL2Xn/>4mH0j<V43DDg/j^8SnWJcR[BL6NnWMDV3RiO
FL];j>>GVY1RQQ1/U1STNMRKTJDHK_A`3R/lo>RABcjoMB`/<G?;Ij2I34Xi42IR
XdRj^7jMQ7KjY6OX6;;9=c95<gJ9jZ]IOHe@?aZE[GbBoBb:Z<e;]]oQPg[]/@Fk
UK7:oR_WC<>nj00@g`WUdQ;m>R0cWG[6EGc9inid8[YV=bl[AofFjL5dT7g3[HI0
:G^A9`G6AEBCXY;lRlLNM;O]]1kaCTm8lOT<gkQl=kJBe^NZ2n1VXL7HW6Ng;=Bm
1bJf38WC>6hNdZ;V3Y>3_g]oT20C^Nk@g22miJaenW2<djG9MGnFbfKGSM>:>T=R
DJ0[97oiYP]DNn01doAA^_6`?/CgGM1e9SYTO]C3mkVZDkh`hiN3[@jThInoiIOk
AVV?KW17MWA@m=o=TES/;iho?_QN?bL[5gAmJZW>>?mS7nZkXFOVf88TA@AK5[ai
T`:dCAkE//[:lXZ1g__TFm<eom3l2=c:e=dW8BdLM`:ggG6Ql`k7oQfd:b?9?5GQ
h/A6QV=gDka_dTYWHn^4W5?d[5/G@UZX^CZ^?3;9J@VKmiDMS`?U?jmlZ^B6VU/6
3g4mmgn<oWCCoX^_4kf8K3A]m6E[CnGR;GVh`Jkm]BjRMBS2gWc4NUjn_Ej>37d5
8Bc5DQ>Tf=f/`0Xo>F7[gMfk@SC2DJiU]kIR@d6a:g_ji]@H=B9Cb<]b_NW=`;5g
HN3TKOAeD/h<Tb4FJ75PCF2>Z87@?F59QYa6iSiYLkDAGlSQQIfY1V<ETAS@1Z?3
LAR52k<?30bI:M?M21Nb/T=05oI5MRiT=UWOHS9NN7QoZWBbiWfU[SEIkFNinm4l
b_=j?I?>AX4`?fmmEkB7Z;mPFI54lLfZ?0haJ6/McCFhnEZVOcbAf5<QOjd@l7LK
db[jXANaUcl=PT[4>P86X/3K;XZ9TCgW[]mU?A=Wkji;OeHgSj_Z8OKbX7eigCm`
BEF0<h/S2dIg2eS_hj9/H0S3BMGfGU]c;VcZbW6QG=9Ug1LY7b<E>L[HWJ^M_W1F
h<fbMAb=<2R[[R475WnA6PRZ<[QZ`QjZQ8J]_YFG>^aD8Y20[g6[FP1S:9jLQQg5
7aG;3C74H@RR_jFg]]S/EXAMYQUed2<cVge7^5RJEg[o23acT13W0TZ/h:hDgK_b
I[CdZ?kmAo:PJX4iKG?CNfF`[b9gLbd6`OL7WNUUELIMJP9[K]g]k]2>Kf/hO=bK
H99F]Ine2=29L3dfEVOY@hjNNfMe`DejNRi>/F4:a=?IdJP`HOHQ?b]f@:EEa]8:
/dmcd8a^1GL:Dk;JNa>8O7fh84R2D:YgA>?Bn[2ZCc9WLE^PbDN@5R6Aj`L7<Bog
nGaFLVn:6ToojV1eME0];mOa9eR:Be;UZGVe=l[[GH=caOLd[h8JXiOYA9KNmCc8
Vg8]^JJ[`IX=S6a7Y7c/OL`^d;1l2gZOjD67m>Y0f[@?3QZl<aH>S3:4>[Cd`V<l
G:doWUI@9kVGECCX0DWJ;@G^gHYUI<_Md>bTD>MQ`AS/amNc6XS^5c``IX1Ynh=T
QdAMJ;lb7<PHN3kA>km3;gXJNI]I<^D3oa<C6gY]OKV4n]knVkY:5B]6>___4I__
[dk9YUbSjATnR5bn/_a3V?N3lffccQcUMO7E6<k]<Ko]g5^=Z]5coH?ACNM<Je?J
BE8f3bS/3E8e=CPKFU8kcO^07aWXg@cMEjlO56QJ<2@6>4a@4dW`YchCZoeld`Ib
G30Fh0VPO;7aU<F8Wd@>lTP^Q8abId9Q_7_>faDH_:QmZGTHmb:OWFSC99kfnmME
lPk6IfkbXkcd9o76M1;aWeBJ2H_<m1`5YU8WG/EBEJV_XELH[T7EBMThb2am2/mN
Dh=6amQ2EIa=BGac854kT<4@hnXDDnfcDE5_<bdoWl3AWLFd;KnY1]cU@VM5nkD`
DiT:WdWQZ@kS2Lf0eQF;V[KjloO2]VLNnNMX92K4i8Z>ZEUIe[kPUn_V0[SES?Be
Z_8J8InLmclB@X/88RRTSLA`T7[G[QWK5k3<UFR2_1H2S@gj4EHKWYak6C_S=W1Z
UF]6^:]59WJRGmlZ;LS71:>jAJUk_KBEgkH[Y4Lg?3S[eReVOFM81]2>nIK]d>>e
8Z@<C0dNA>KGC4eTOd9<aiD=Scb=aEk]W6b=2oUl;8RI9J/RH]]A/GPZ@?Cl[?7[
g[GET=8PWiNYbhl`5BADjo>SW4F:IICJQ:3Xn2nBCH[dNh29f@oLPF[<^J=3T?]R
H2^/KA15hVj:GfI;4[2JGRA_[PBh]ZEHLbI0hm;jXSVg9mFUJ67gi8DFFhEKc8cl
[4fQ`Ul[7c[^]Haed9;aLa[2bMg6UBf8b^<jh]010e/EFe6DY7NWTaC>a=dDO2Kg
_V@CfkOYBW4/I@@`T8hTU[JQie[gdfhd<BZY5El;C=9mUeOe/6_>C`ZPMOVk67F7
`]c1N:n]kE:K/bB8T_0V`KgJAh4GibK5G;c7H/bF7gLJ55LFTZHBY?_GUoES>M54
c^F17Ce[WYfh<3i4jBbRXU2cK3bglG@Ll=:TZ7]P2k]ZgY;S7>KoQ<;b=DiMJOgb
I_lAF`J8@WUQ6O2RWm`G0NmJ_991m5cjLBEcfo[`VMm[@Mld^jX8ed?``h98H0Wm
e0<U/WBnkfmIVUPVkcFMXcT1g3nXXBEDMI`ZIHVZjW5^13ac=fL;QDVNhnH<Ua5I
[YaP;RnGFfM:6I:14V]OK8H4G_Rk16R?b7oim_cee@4eVBk[IdhOegUL:[>J4NCR
/;64@gV/mLe3;kD;`HA`<ZX=1[f3l<ak<MnM:aMEjHbWFmmMiNN4KXH`6GjZ>/Hj
9=LE57jdM0^dLh6PZ_UF7Y153:k<4@NnDUV?P6g6l2]E^>mdLXNOgKfnXE6@eC>N
CXaiJOVYhGG`Vh_?9hI`U:e7hT8;a_hVF^k[l7Q5IKK3NjFQ6jCECbNJcDSfdN7S
>bjTCd:6nQCbfJV1TeHjBh`OJ:S8ZNWfYn>]PlY7g^^UE;_>3;ocUV7I;KGf4EF9
3F;dhC`?7[3k=P/NL36:ASmjZK15j5B2`E:6_Hbd9M5lVgC^4]?J?:RVhSC>_BYg
8b@<D71m_X;I=REWDEhRiUHjbU9N>`UZW6IUR:?lB^GCG_TG4nn[0a>YL06E4JKU
/2CD2f?HiiUfdJG:a_KCUd;9KK;?_VYi^@]g5/fo/L6E/9IW[LFola/anl0E2BhH
U5UABI2_K4TFg1BbW/OD5TWV0EWEIIo3EjOd1fMZajDZ3ckfOWPLj^mVU[dVl:=N
Id5Qb0M[RhGianO6CYieHY_TjFbB/:dP`[CLAMG8mU0Z_DBEeloBG;o7c3YIZ]W2
;^e3fL@;<a/iPK?KOMHV`]L[gC?[a_Lf5gNDB3RNGGRdacC]>IoC4<C9YNLMC`lX
/8he[XP:UV8UfjajVJGDQB[2G]K8^KKGeMSAdBjM4nPG7NcNPY<EO5XG`44NOP@a
PGXCH=;Q:DWCIbhWX6GO>M:eTFADeU3nmM17Kg^85[lFRJ]adDBQQe[OK?@dj_b@
74/iAYjmi[@c2]aP5[eEUYSK0Tj9oS`U7gH[]B5PBIUlk;Jhe9D7SkO[;WJ`a:ai
e^]E<Xi:FdlBjX9Vi8iF=ckhG9J:/k5:J/D4h?l9ZRMEAX5`YiBM>j]RBTo_Z3Tn
K4hoN/</BGFT:2?1^GOiAnl60fLFKj=H`]iaWa>6J^mF23Tko;WDj/2e`56cK/5B
nh03]G>`B_[243U1hJ`lI:VQ:<h;DAE]F^In9F6`ZO9ILSWe1?Z;Hj7^9Dm_ZkT9
bnaY[92kfoMc^Ec1SdEJ3LOkD[ikNlK=8/7DhAei[anEj3kI7:NN9fecfIS_/Yog
NZGQY2;C6e8BFFBEJ8D162Mfn5m]nJhAO?8]BfR6/N;feJ88hXccmFh;lZXdR_N9
M_O?_9]=38=LiXWRlElTmOeAc<oN1[F7QoZeg]DOccMmf@eLliTMFGOcmGSi/5<G
ai/gn2?CSYY0>J=jT2VAdTH:ic8n:i2E/bk2bUEBdT2RFWZdVL5hiG3VF`gC9B85
_CaPACSfSD<e5g3j13fTo4VM@hRK95d07DfY]AU@5@EKg1Fn9G=OILMP;CV=3;RQ
;2eEjecEeMmh?3NY/G`TQ:ESOM8`Mj9@iaR^U_AFejPgfZi7J?bdi@>6ES1lI_7>
NjF7eTZ:n@/aZeEd<S>Hn17Ke6fjK5OgLZ2@eDakQRjL>DM[=AULboYE[V@D3DTm
n45Y7INnOHg^1Xf]OX3A1K^<e/b5W<[ARQIcEQIg;Mm>E076TU>8W=?R@bc8J`8]
g4J`lMWLi?5cma2BNUi2fg`<h>V10VEiTXUhCflg:YhGSKg2LWAEYFSOeJD49Xld
h=/IU39<R4GV9TH9N@n7Em:7CSKh/keHeE[kZ6EZ77;kVCSC@Va^2UY5//fc?bMg
Q5k5SYHb:JocNJN<a]iJE8UV[ngFVnBk?8INVk>9Jo54GEkTXR>2DdjU]lUJU=DI
eo<V`Gf4M_D1[i[Y=H^^;8HgK@HEBKXCdoOd>GU[cMBMZdY9VeoT_@/k3NSdfgkF
>4LnCW=meaR4JCl[IZoLE>R2[KOf5]BM;;Tnig;ef@EW@P>`Gi:DmIEdAK@/6fJf
EnADK_l`A8hNY72/;kSLW/WKCI@gbSofdjCT^MQE]bAV9ZGcidlNmC2ADiKV2Aa8
gK@Zc3X[o9kbHR_anNOI=KEg_CB_TTP86S>=>ELeM?HG_6<8</GYAD0j[7iESNfg
lfA/aIQjB0Q94W1G[`n9^oBc8Ij/TT[3SU:bliX_DBcV<DCb/DW9G<dRE__dh86?
>?DM8`bJ>kb6<lYUKnV]o29IOG5j35@W<?9ejTfjfodeL;nCm5eHiFNf3<X[>>d8
lI5ZL5YoY=o`f7ZK7Q_?W?^kIF[E51aiZUhNHH6<EdeABcM9c=CESlDf:mdb5dWD
IgaYUJ=j4/_Q2_j338l]:ANl[JWhIKa/HUlm<b5ilJQSk[6H7UV4/n;DX[QLV5cX
UfEUTQMa10T/5Pmg_IFC9m/_^iTEfma>Q<E0;e;m?7UX=6cWZLXk4E2X7k@7ne90
D3?76<dQg:LPckgR;Oob6ogW/F0@:FTHHDLZ2[Co23O2A>U5VK:cacM8cg^WHE=m
f>K@@7ZG0N:1e@]/3S6nE?_9iKeXV_eMk76Zn/?Z47/G<oBMIGM_`e7YG[H5;dZI
GH5/SdSRDkEQ>_lZlnK_?WHIhk^E``8l2<8OKZHCLl3WfYVYRfJ><Dl_WF>6I43E
E>gL45ESOaF[7jg2SnM:S;QH^7FJ_><:c9D:TlUQAh]=aG5li0ZN=k@::0iN0US:
4k;92eC4UUQMcC0AdZ@RihLjoCI<E/JA6@5oYG]D/Yk86GQC><n7_L/]G4Qnl8Xb
gDnPbTjKVSQd]ljHV2K_^dm07`d=HOH5/oHaDoRMlJ9b=Kik7@=iR[7ELm7]jc9=
I;cLPd76Mij91cb8R;nM?S[OdnjJlUZLoDH3NdggbbHWcI?6hUOi;4n0cW4G/6EN
NQToG2`c_meX4YRf6ncJ^5UEmaH[KM[RBO2l5c:JO?2HWIOmTBYSb7JJ@6WWYmXS
VPLn:=6@_Z;YIkGfchVXEAhTWOAcMm85ObC]:BTlO:3M;2P7[Y/AN;lhIFB[M8DP
n8hkg3RcT;i46UI4RDKSJQYWAj]`aVIj]^4/Xe/RPWYNW5j9GUmXOS`l_=_4V?ml
`55LBhg>iS^hmUK@16[GYmP/I6]`027IBf[Fb[M=W:IEfmYn>V5<k?WU:MHm`_Qi
Ve>`66IZOE/kRE_Bc3bjZcDS0K3XF5IH[fd_6a/E@JQe>N^Zo8W`Nl__A[ZBhXl;
j?mb95h[WR<cTI_UFAXgQ76=W4bQHQ/3deMUXlF^;WKe1_2TTn/UDSakfW_GDo@]
R6=P`LlUXa@8In@4<LaZ?V]CXfbJCf;[gG^Eb`;FfD?MMT:?6:maMFd_Ga8`c0O:
5_4>7I>?UWk]4a:=M6YMgFcada0D_Oo:eT2oh60RV<Ofam<d0h?NQSGPjND3TBAA
QYAJji:@fM1P>YfiBU@T:iVX6Zn]g5]3EIgBZo>MPNO_1adG7jjS>abViPRAA>L4
KJ8m42[kihG=2Mnd^SIX;K@Y_9_LbN/D>aXh>nGoHXc/5e^kIKHaCc4DOjabXj57
XgUCk93oA<?h5FM4g?V@MmITa?NTBnZYJ4CcbXFYWE>^5H<[mjNiajZM<i;=[jWe
2]LhKoM5TmeBUR`UR:4Q2>?R8Ka<1fEHc=;aBS[[jnF`dDhkUV=iKDo;Nb`I<@7N
5;:jh`GlfR:2YZc@5foUIA4TmQ1UcLD>`:Cg7]IJJA^4PcMi3a^d_ZElh6^DUhD;
2TbQb/HN[Ih[<EH`DQ6W?^h9M>fWg^`I/@aP=>Bk`NWARDYE;/ZHLPbO8c_g3SYJ
cen5/TMNnJ:/RlB/lVh>kUOhi5Lh7HI<7UX4LAMgLdMdG:b<WkX;E/Cd7k:fck`[
R[SI=EBddN^JK>XU_6NLDgIUWd/Ki/=42S?b6J^CATW6_cMjR@`8_HW`m=<Ge7Uo
4W=3R@UJW/Gm5U7oHK@V`^>b[Zo_1]NDP4G/HZi0>UmN<jdPBYiUfU?nO8O`fkOP
f4P9JoeY4@dHei=/Zl5Kb^L7W;;Z7^Ga=`hbAaU6RQ/9S>ah;88K<SI2n;GEkceE
[ALQ2Ihj;^>>/FoQ6?<`_f>>D1ZSn69K[]Z]T?5fci6GF:@VM0=X65V^OJU8jD3`
ba^P7>U`=MUM23>@iCY7oiQ_fbG1Qnm^O2kJmfP^fKmAAhheMjR;_X1Z9k;`1ncY
<49^Q`f2LQO^4BO[n@XhaWjJUgfBC0NGB8k45I7:EBELFg@<dV3[eenKEaUWXSSm
iPLLMg^_eIa0F<=PQS;HI3PDT4ldXocn1[Fa_TfnfGW3^=L?oR[hPS9Z?iWo6f22
8OLR4NYNmMVVecC]U5ooaEl`oM48MXYQ^@SIR@c9^bUAPRZCB`Z_;DHdE_VkW<mZ
oC0WiUdjY5;U2/Qa=]:Hn/:h[__jK7h`UWG0eDZ62:iTdL0MCkK1e?X0a]^_>Hi9
nCS:hP7LoM:bTiWIAXk5A:E_34>??CfWNILo/lRoXN]`XUacWGX[o4S4^/P]So?X
l<F/YbhA]bkEk^Lf]GNMVIL?V81VE`UWUkHBBc6hVGHjKg;2jLT^4fDZRDWfUci7
l/JA4L?0I]^FWI1W?7:VFI:F?fKh@mD;Pcb<>h]4M?Y6KdT1^;lBKlAWdZa7g?]^
^1>F[BU?;<PTSekl0^fmXL8@koZ`4mQ`ako/TQQZ:koVM_G=TRSKAZZi2R_>Ke1E
/@U]VPa5g^3?4]/5kNldbT2E`XAR1aZ=5XnH5`JE3e@WecC_BiLm_U8la<5lc:Db
l3lDc`Y92VE^I7=dLVEQK@YUKVA_HVX:=3HP<21_HVX:?3`:;daUKVMdJ34P<C<i
=0X_C6E^IgAX<R0f<3Hf2Rm<IFiWM6Pc830:;daUKVMdJ20g<34f2Rm6JFadIG8P
;dI/HGAUA6ESKfAU2Shn2W=dLVEQK@YhfXed1EBDGMLfR20Q8]e`PjCTd2G=d=fB
0```><c0<7A;?XBDPZBT`U228:VB0PY8MbVYP9AB4]lHco^nco_oJggOV[G^>NOJ
emiWkk>_OCSI38`5U9b@3U0`4X4F00T:b`0Z^THPHD1HF5A@F5R4V9?C18J6@oo0
a9aVD9@G38V@n@n22PX:@F<aE@PJbm=58P0]KcP04PE04S8PBAUQHD14F5SjKb8B
9@>X@WaPCX2^8:25A42mR3UET1kn:9R;:aYkc=m;P<NA5`19Bd_bog87U=bQ:9PS
107X@]2^D7O/RHh@>62<M8A1dOko2<4SihY6NlP82OWjnPY2g;d4TBPGNEin`1N6
MPF<X5i@U0oD2OQI<:07LHOn[Tb@V1<`LHEioLJ=TLiXG`P:2V01><`AR_32NWPS
W:0X07/hH:bY0nQk@16obCZo2Oc0Wk/1@8:POhGkhodc40cabaWRj8Qdmh0Po648
5l0I1XL2nV0M@K@OVQn089an4R5`;bCF7n83PL4Q3US2[l`Q05S9481P2oaCWYLS
2^J1mQ;dP/5oURSd<`cfU]D@CRY8MgLX0^e5o3<oEAP:jXRmMWnQgifmQd3j8P;o
K9aQ22OWWdDhNG/8VB9PW]i@CMDo52a4o6o<1HX6a8F5QBFUA@6X9`3eLg@EnQWN
a=l3n//8nPUS:`P>m41j0<kH8Z31<6LXmXlhd0_R0`G@:6mXL>1o6_ji8`J102NH
8aY`P;[04<CoSXj5XLjommSVXf1nP9D`EW/P@?SWkel[6jblW908^?nojKoj:jA[
XV=QX<?g^n9ofIBETGi0X82H<20P8Rh<P7j:C1:k2?iW60<8k4lJon6[RG160]:o
/lENdmlIno`A0<nOhN05oQU;3hUE;ACPnKO8[HG5QAfa7m3oFNZoG?io2_lIiGlC
nGlW1?J6`gnINGkIoalca1d6mom3`8[F6hdM05dTMP`@oddeQohNFUfX4lcKoKn]
VVP8MQ2D42k`OedSc0/<lh<j6L3@SZjoeO8K=odiIG0H0VZ0m8;mO5H00Fa[o/^6
7Bg7NmRW``/[bElV:7IboWVT6/8AjOAca4C49@082PGa9lHf6K/C1`91f5UdP_[m
4S4P98Q0X[4^0;JlH<0IRB;nfE6/;8@l/2l00PieA_ldoDI1Om3OgO/9on=DAflD
eXSnY@]/BWo_Oddi5>X7MBBNWT0jbTJjeDJf7SmGH_@EF1fl<lZiJ_jHEb1`6_G:
noC6]DNleCWg5e67BXoj>Vk>;J_aO5NLHCd?g6bZ^aKCW6KHlR?Xc2k5J7ReQGQZ
R>K]Qn9=YAOMc4A<0RJ:Jd7WWT5VhOO`VW3OJ77VNgY;gC0XY3cfkE;gNm6=VNf?
WUPeG:^Fd2Hi`h`899XVF8Lo6n</L<PMYf<W@0/`4mjVf?DS6o]n>4[ai<<UZeH:
7g7`EZ9XBN3M9I479n<1laDV8Ui]m1cdMnVHlKiCm0mc1BY_Y6_ACPJFU/bmWO9[
TR]QOD;:Wc4WL5=`@bBk6VHDSfSX[?7YWgh=F/Uo14Ab<kjUG4V[:F^P/T>aje=G
]mS5Dj9[A>m1VCMN>b_?]ajJ]C^kIC3=B8nl^0C6B2eM=l<Jf`=oe7W>mkek:g0D
WM5lg=O`K[Tmf?bI@[L2Th/_j;JJZeGLg:a<=W<6?PHmL:G=7:Y9MI=oa^NAe1Tn
94X^l?jNlRT3j5>a/?1M:Oa>g7jV[n;i@G/?PR_[MoEN;hfACl9m:F`R;R<Tm2hM
gVC/kQKC^hZZfNM4laATZkGoEK2@a6dXF`^]7h_02>d^EM88ZYKi/nZTOQ:Of^_Q
:17CE>mLWJcZRk>nknmf8UdTn=F/d[@UFKc8T6eU:eiPH:<n_5Li8ZY;n]1Yhm=Q
NKVb;OEWY=W9KZE_[7;OPhlVTY45Okdf2W_BiZFOZJhDOnGYdO9h9i73[FdCIAlf
mhHT<W>C>jO;0fe?cgci<IZZW=`Udk[MfYoUHX:VKJIDBc[YWhLYd_ce_B5<Y?JE
oS4?c_FLVo<?>7?FI_5^fKgZJc3K^f1@IS@f>Bjl5K24dcTi<[3<mWihVB<@GVWm
C:b[4I0EClS4PjM`/Dd^QfDM;=kQBHRkL8i[G33eEJZKHJ[97W/;GMcZkKnZO>_J
:e5Q:_W1;@fP^8`kId6WQ8oZLR8]cneC@:kR:F]BhidZ;n_J1J[_LU7UMjcK;74i
5UDEHTfo40f]WDTlNS;RYeiPR>PYIlb:Xen1EG=>?<aSVa`VeQ71XJfab//RokIL
4/[;U^0LIG6Od763?9h@IeU^W9^Z]cHYOLn8dT1D[H0]DT2VQYbKO>URB>V65UVe
8?idEjf:eR2>5QZ3`mDI:4V@;553O2_LK:QcZ6ecO49SW37]85jXk=d=l:B;;c]H
o66Bkiia;4M@mFDhdU1^L7d`PhATf3kTYE`^2dRh;8P`le:^iK?kCUg3bEC>@Yo[
kT9ni6;Uic32n_[Wck<En^S]5@hTdcMYB>cjlo6]7[dnT?8cT1<3SC<Og45o>=K0
VB4SUIG8K6X<AVUkPcj;o/PbEL71QfGAe6VP:f^7Ah<?oNUH9Ri275Th[ALmMl:/
Vi_Ga?C5O=R//^f>=9/;WnnlZ3jSO[_V6<lP_<QL_Zn[MJ;ka5:hXSo99e1RTNkQ
Q?Ea9g05mLBc;h]MU?k>4Mk3G9<ABfg1>Ffj;gflkObdj^nd0b6a:WNEeO=N4K<`
nlobg8SCiXk^5=4G7SG;Z9;@=>3PP?ohO5[A:916^fCEA[Li1QgXRco^HB2TenjO
i1;QM7WXD1d@LjCECio9khd<dJd@jJ8;F?1>cLb?6I>hWMEbnbUYM`MYnO2Um9_1
dTF5[R;]QcB>_7C_?aam]=ieNH:^i58XFgk`XN_K3`B1bJK_ZkBeEXil9ce[ULK/
h/4IoL>93hXUiR9n[1]BWV`jCR=Ebhc8cI0ET9U@@Zob7LFJKjOKK<:YkIH5b80C
S^fCXJ>N<<j^bSO3OMBn7aLnR]PP<If;@9GM^H:Vjg/bkhd2ION_H09JVG[@3L:Y
M2O2/UioRJ?kKC<;03>H]3BBCPLQK[c_beDV/3Wj_3Y??N2hE?X;gIeNk]@EW_kc
E/dcEkgC^XW05Gd:h<IS49j>Sn>h>cDn[?iY6eL_^nkF5oL^a@KclNQ:^^9:mcT7
C^7YaoRgCnfc=Zme5J@]YPTiOno<QKoR=50C:I1Q<E?R=EKF4EZC`m1l5JO4Z>@Y
5BdNiL9UZ`;O]i7`g6ZN//17P0UBf@WSLAkSA4X56TdQDlWK^daXNEK/c7N_>2QM
Q6X78GE9k2PWAS?<bAL_V59NTOZ_j6iLBXBEimOH_SZ2X?=H2AGe@I/5@[Thh3gF
Qbm5oEU^IBhkT^WZCPjYMmlmWkO2LjnhK0khT00>9B2RP6=>b]Tk]>B[X5NWc9BC
c9FIP]O=N9>_cQWgc/;Xn@]f`QNNkAQAd3CBU;aZ0BOfh65N6N@:K[cB^CXLiWMl
mBVMWMFPQET/>Fg?`CO3o6YB4h?;kchAnBO4d7OlZAhG<``AZ53G]=?6=6nJ_NC8
17/nN203hA7Dl6PRfDkAVEI2U45Sd@3R<aa0KcY0KOOlb@3Efk_U89KKV9FNA8[Z
95fn7PN?/6SI`7U<?e5hYJ4XcHJIVNaD@N]0k>P=DXXZOD7m_2DHOj^DE?T4BlAF
IgBDbi<keWNF5=W1BjOJh6>C0XLOSe=NVhDoP??0GJ[JLfLLARXCimTJ=c3SjN?_
[CnNWd34346dco]3P7;YCiiV9Hg?nT^0E2oKNm^5GTh?/Q4g0U;J2JmE5ZdGbd``
jN@5d=/l8=o5X4SRBPXa4CijZZoSMMDUYCTdMF0GG6U:Dbj<7a5`2GoL62fR9;1n
oKjL=]7ZY/50/Oh39BFjMckAJJ4;8o12[_GjHl_EbC[^jD4LliVQe@R^]T;QL6gP
PYhjB`Q619/NlBIbb6?XD26Fj^T:D=8X6GlRRT_/;kQ_UNoGm6TN3E;b[/CTG_M@
nR1X9EIT?2GRh?^@ca50UaEoeH<bd;TbZOKGcY=d/fNb/HB/U<_bBGYH5o_jdE=H
OU8W]YdGEj/JV=]8XjIPNV8geiB^GWodLOMc60n;dWEh0nG`Ei3mW9Bgh84ggmOU
JOKC0gWIGOk@P;jjHDiRI4_eH[hOGZo`Hjoki1>mm1CV8;3OQjmS6aV;P<^5NdYR
_InIooOj6O;QG7JKF`4QM1W??7cffdUcVJ=C<PnW^T/5DL[BOg5@8aX]EBYE@:MM
J8bChZfSDRVLXG]j<F?af/maldMURmZnS:G1`l6W?0@TD`Uj1g5?LFFG?YHhGEAd
o=S6CJflNKIh^cE>k^gCPTO;gIBAU1Pl[kJWdW;ejTVT:V[fDFJO2efGG_EeLE8K
YPf2Bi06[kXn3I=7Q79PTUna3h^:]QhIB4m:Kme=m9:>`NFfGjiT8Me2cIROb>Pm
;=WZmA[mg_>`PEFA`3WRNXh]/oUl59N8V2m56Cb0I8eSC<AlQk;FMckZkIJn]<=U
dBZko]<WU>l6c3]_PbU/iXFNf_]S4Pa[R6;k7UXK?^YP1=o6c<5<J?HB=fceP4<W
^b9MnhSRJ6=>TaMjcMZBBMF4O4JI4e]FZ9;//ek;kmfDfiJNd>3FVRVVjbGaAe>F
<@JWghP7`KRVJXEK1aL9^j?J4FgSI1X9g;Gel[Qg3AD7bCBWUm2LAB^GjCU]EZFl
TUeL[lobG@LA^MM[j3mKLXo=@SYNVWC^LE^P@/LF<hD@MXQ7N5Xj1C@TQ3cYR/Be
joW_Qk:8:n_eV0>e`OF;/k^fmk8M5SX@Gd9X]^eeZX]/26LQaJH5^4gMPFNa53jO
MW@Fii[G2/GB_X4NLhABX]bE;[mj?J;ZN7^`SkRkR7Lk/nE>fM4k[nnkb6`Z1lG0
5?l94T8f5AGFn41JAd91lm2k;kMfF=J4JA4TB`hNDBiN1XnM>0B6[@n[1lNb^GCT
?=iLYFPTPe=N3fX:bJjCfSPEk>]:OlWW?=PCh5oZ4l7jdJiF>J3ZGLbCj6lR2SiS
[H@4EkhL]7jOS>Vd`8DD/DWASaNk4jO?a]2in4jcGB<V?9IL1A=I:_XKfhC/ACfi
TUUi0TLZCgb^B2=RCLoeHA<nfFR80cnlOgenlOA[VMXRa2[f__>aPImHV4ID?WG@
Uf_VIgFb/nX/4e@g;BWIAIFoRDlOW:dMOmB`IQl]]b8h1ZD?IVhkR^/MBf<li4DT
]EZDc`oZ_HC`_/JmM>7iE^I7KLQo0be_EOE9JR1=gJ^k<Eb6eHQ3fTJ2RR_fe=fo
RQMFCaoWdoOI[N?@_3ANYl]8fIKIB1T2Ok?Yml8^Om8bEjIFG?MImMG5]JncE3]a
ebPO]5BBeC>6U_h@LR^>F^ZN;V0;G[1on7ECUL^L:J`G/c9QJ=74@J2an6bM[1n]
FEcIBQCJ>bhhKLVdYcR5X2i7YMndnkJ5V0__82Am[GnfS5KB`aO@8DFTafLXh=/]
d=SJALfjD:GFQnCA_4fBCKAWNCjdGJZ]7;>`:`7]N]TnaeZMdTP/og03o/K@8bFJ
XK``M9Bg;OYUkTUmbKi@X^`eHg[^jkI=gfEFd5NeJ]`D_e3iUKn8D><AEWlW>mQ<
?F_XNNE1FLo3NbKLCK]i=fGci98m6A5C:mkQJ;R>2RS=XP/@7f388?I<VNcb72T9
EeR97`X0ZASc]C4E6H0j@eRPOEN<A@I8A<^edWEWgTDnP_?/SMIc4;8d@o/<EhGL
?OC4]BEacLnQLD6lWK=C2i0hSOC:YK]=XmERgXVV`Fnj^mHk_iDBD9T2`fc_dbdO
KGg1>F4K`mDT7;=L;Aem@Zo=^N5HXUKM^<Gb8o^>lWBoYPeSV341j0RhMC3JC>ij
Xmo:<5[75F<Y/7Xoa1Qeh@lA1g@=;=G;aXMTFJB_9S;IG2dKY[G4XHV?DQ@?BieO
7>IQ83k>BI4WbNf<J>QCeG2;:Kbik4F=X[k_=iM>_2KH8Clc=55MGO3QGTKE3;a;
UR^mnYKLnTcFlgeX<Zocl0Xh8=^nXJM1XG1Ida57dER3:eg^4[lemN]EZ0l2AhXb
?1MlWlUjfJ`68mYm0:UDH_?gKefFfA_UXlYcI2_bflE?_no`@OMRhZn?@/k1XX_Y
fI__WoH//j^GYI=G[W<kjgX=Ga]S]C0g?@ln>ja_J;C/ZTnd9@TKVnAd6nQQdgRm
4jn_LDWH=o20eNkTIKc/ATc]h7iXbRN]AYn26kGQ=W>gR3VV[f78I[UEG1G2aC?U
8XgYcYUK]]loKmmCC:^TbbG:PUCDQ@U@IBZ5>/I5OhHScG7[M7WfT`Q@>0g?K/gJ
C`hQ;0?MI^e5Pn1GO9R[k9^i=N7iij5;=Fb[MFL5gdL=>]i]1Ch/952[O[acIm03
/V5;4SkU^ZUo3lln]n5[m[;7lNWeBRU_ocT>e7kjo<4SKf;WH4O?CSkaM_l@]_=i
Vo7LDlKS]ZdKY_bE^:oAnKa[<1V=oOcGnU5M/caEMU3ml<o<H;?G5ii313Cb5MhK
Bed2jS:a7oNj0R;bX[8ekUYc9YU^ndbehK2@3PD/fm8]_EM>m>L<dc?ie?QBm0iM
ULGVTT:[>iEFjS6=`:QXi14cK7UB@g4^>Mci@lCi_DHS`Lg/knLng64mkX8Dg0?6
bafZ;OgCL?lcES[9=9[2jiKO9eANE7JkOjjgOEV]kRe^YiimkKQn6_Cd1aUJ:66<
i68Y/OoC;_6Bf5leX4Y4[=d?EOUP3`:n=FN<Rk@[1o=YJCN^SN:>kXWmU>e8Tk[f
XJah>D6aKlmVbmDECICWSU:YZ;?BoDE;LYQgAES7o4[WoZ_QWJdA2T_DcLo<Z]l?
II8BIiaH[QVEh<d3JDYXl^^K0YQTOR[NCld@C75O/n^W3m9FHlnl;`V=enVT]E?Y
8lVkC;C;81HL:kh^OFT_mB>/?UgaRfOdk8TXl[nZbI=nfNYfDecW6DJccK4n><RE
YHdS9D3e4jGYQhiTgaK;A;iGiaEgI@Ige[/n57OWP=k/el=3Yj5]S3fhm]k7RULH
PZiFK;5BClc5K]AU_KFMTF3l:YCW?oc37[9K@?6dUcC>ZWX`kZKmb>]n]KbR3Un6
M_`]20_SmH:0=MRn3RBBUR;HkMgcmCk57dEaZl7MXGiTJc_V;o6_IJhRH[`N?1I6
g;hAN:<J[W2g;>0Po]4kRWSiaWFYKEH?0IeQ[]jR7gPkf_KbP7eM:FN7OG[QeoTg
OEhHQFJOmbe_KJg?o[ZMBSeaK_S^HjVNPg<Dgfc[jhG8?2@kDN;d<e>ReX3Q0iL_
;P>@U@O9gWGPo>5<^Di:Re?onDI<aM2Edm^]EgYM3Ro552a4K3ZBaDXe/PH:/bOg
/fcKQcaeX<SJW<NVf`LQehm:DU>79>FgN=lF7fAZ89;c[SBGERY9/Wl>E8dfTQ<B
@Io[M_Ml>o5JOA[fhijdY/FgE>NR/YaQ_4nG7liol55>?kE@fgZFO[=Gl<]7][JQ
C_KKF[?6TSOJIRaIZPVI=_1gg6I9VKU6YYDf]:kcUJo5_VUZ8JBHXKSc?Ef_H9E3
`ZOFV<74T_b_Fk=dECXIUf:3ckj^:fCSO>0ng3[Z?0T5dcZIZN]<l?>]dgQAEjQO
52oI2SFFNMIeG^dka7E=j2J[>3Vibe8A4:UJQUJl;WX4YLS:O[:Q>jDXklH[IniZ
_j;K6R]o>EWHMaWb4KZdKJJZ=AjDdMa/@AHlo4`55MM;nmJTEjUgPlBIk_c:hj;D
Q`K1/_Qak:>]fXNS]`ICC?8KKX2?CZgG6Lj?K<OBl9PIl4QT<hWJP[hH0J[FGOM9
=Kc792h=^ln77W?W6X[f>/SjgFYl`2Yj`6[L;h=aLb3OW^E/A6^UG1>BOeNPOoTe
QaUU]Q3N@NmWlkb9X5FNmm?>ToIjVc1hkPVN>?;eCJ_ePR6`k4en?JiBKTYHFIae
SIiQ^nJna]S0]b7F=PDCVFg5:O0>kK[N9LTeHh_fNN4J^@[N5]LUl`V2l5MRcTeP
e@KGY5W1ZALVEgQ]SO671ERR4;k1io`T/GOe6]FXQeA`_eDOTERB91[Q@n/3>/H>
MdEKAjb9GdjQ]bl^;3n:fbOAPT?//_gJ4b?`C?>2h[T]D^]kHR;E5LU<9fi:J99H
/fI6[/lMbYo9m9WIoKSB9conE?ZfYW0`cFRm=G_P53GQSZSYC<3K_Ck_5G2><eko
M77DMh?5dWNlJ/VaDVCgcda;LTimNJ]fGBSSgU=kS/T/>KWM:VVZWZ>>MKgVfD=B
T]?ZQB@EJ59<9MK6DiM<FVJ_338LR[VbQSUM1Nk^1gP5AMd?;^[B6JlcYX`[T@Uc
aXbk]ck[D1;MBI[H=BHAjKY3Wc9QmL:YHB[]C2_7N^h53D/Udcj=hmH<GMSI2ET@
`G_dJcO@l=]/YGGDAAaeEM]`e@Em_iI?1klfJa0^dGiMe8M7IP_9bCW4Slnb3B?[
[>HFi4cK;FBH[]jOVEE`i3_TG:XQf]I[VE<f5YN>?XiXOh6KR<USkicXbWWQ/V7b
^GEnaMJQc;bKT62FYoHf1i3PBe1a_<5;7IN@]QaUBjG7QZ[/]0`XTB^9iZ95ILPZ
>FVZ<=X;aHH74`^h0KPB0MK_hO]ToNMa>MYR3;L7`[D5j2OWcD^<E`gR1jZD<>[L
4EddGG>W]2n6A_[EMTBVQS@<9=]YZeVf;EO<n`AZ`OfE]RdabZdB_T_^gHE7I0EZ
_:mYC]Kge<DSVcL8B:]64QJL6?Q?BOXO;EnDJ^`gQcYU7@NDV8e/AjjPI6G;HkEO
4TS`QbO4A6f3J`6KK2eN4GFG_:]>AkV65ZXnidKa@YeJCE@M[[daNV:k`VO1_JhY
o:`6UlUn7XR@A6/<fR:]8c>;bRPcg2:i<Z8nL330OTfDi:3^]TeH<[WD;DQ2lDd[
VTAcT]eW@o`Hg^TTES2c`M58=3c/U0LU>/PgfC7T^MNkY;UFNaV36c9XcXY?N<cA
52Ud;KGeRndMLP^W;1^[NbOI2Bj<BS_?hl?LGaRl;:7dSl4G/PfJ]^RlYmZ[eRkM
74K^fL[dTP?Db3:VHS2Q^_NlhHY:XT4gUcl?hnOe=/nied>QM@_VThTA?o9fEkL/
6J9ObW>T^WLMn=<MNSQ<9BiDWJ3F6dBV<cHAXb[dgZ4V;=6e3k9gBh<LkkU9?2h;
?T2A[5jo_I=1ah70nI:Q;f@hbA_b<L35VIU4Efk>>iengT8VXE]mG;lJ9CmmSJC:
UeTm9FY=D?BP[kE=EBTG<9l_Vf2TNl<h562T^7o^md?QN@[;f0gTk7^7Kbdek8Q5
V;cDY@B7OJ;^>GAC0fIBG_J>;n[cE7aPM:=llU?Wc^bC3;e<_;4@ghf95kNJR7[8
2bljEdMaO5M6UCJk:Q36WQBGB:=c;[MC^ol1kMfXYPYUKVAcM79UHFd:IFiTKf9Z
2S@g830PKf9Z2S`l2Rm<IFiWM6Pa834d>C<:;daUKVMdJ38P=c@f=`X_C6E^IgAX
<b0`2Rm<IFiWM6PP>3@g=`X_AVU/M6Eb82m6K65dIDAUHfmTI@Xn?PYcM79UHFd:
N=Z=M0EDU=gJ=UdBdPe33=eMdRWM80P<<<0@<l@P;Me:YiAdMdPS9@f2=:PdDY8R
cHOjW_>NmocoF]ngIZeWmWGG_Znm[g/3jKAd>FF/HIIPAAPDc/W;aB<6T5=GEa46
l?3`Lo7`l641PGX@^2?h;c<Fd03/jPJ1@LGn8d3>5@b2?mST@O27>7DH5?3DgA70
b`oP5A;S5AKSh@7`lO28oR/@iRX6T0NmP5P3e;T0Cf5@/1/FD0kVk>D:/KF3?fcc
[bF0aHXE`2/Z:/ca>adPh`AfQER1X01e4=`>k?B`XaG84J0;/h:0hEko:<4RH@N7
>h]aLg]hN721W=bhH:jfTZ`L00l8g0jP0gH3^kh0F`=n4@IXP9c0OiQaH@41NWH@
]cmfGIP=g0?T2PHl61`QEV2Xfd>6>m@Jk0Yhf1bPZj86d7@6@ol4Zod9h03lMCH0
GRkNOiOk:o]G8@SdMc;8bP[Vi0b2NT6P]P0KR2<HX:VXaPGgQ7<0@53[Gh4PAcOH
@ckX1@SR2;9l2?SM>@RP::<=03d@o8^NViD[a1W^a^D6LOa5TO]GVHMCEX1Jbl6L
W<1@^1_F[okT8JiPZhMSmn;nLk<>D9P7e>L_H0>1F]_l8V7]k/b]3hFh^8=Ei?l:
NC1QoFfc1L<1PS`R`_`RO02`2`3/JFG7oJ^lWYLcn;NCmiOiPH6OSc?<6F3c@0;/
1k41?oaQnKR1GX01L5Mg/9o?Oc[nRK1hN@7F42/h`19/2h5RoEgm`@bfnH<O;]lE
hPT`hGW@7Rn0imO_gj_W3o:bQT4M_Oh>ogfog<Z:V_9Z<^ao6?oK9b/;l`ChL?82
>?T4N@2l_<:l0>67QMloZfR187me`O=gZP[D1PKPiOWCkL<aoJ_S5gl9P>F_hF05
o;>H1^a1]F00bmlR=nDAi;5jn?3nWjGn>nGoYo1OEOhgTOmg@h[^SXjogBbooOn?
6n@4LOCj:n11]>k`Q`5@Qcf<0OBo@`g1OhIF7F`=LGOjKjl:7?@`239@f`LaLo8:
L?48o;53g1@QWV1[;@SLb^j?I?kHmGn=VR<42]J2^D5n_Bd?FC`lonEkV2l[QhOg
`ne1UgmL8;N7HH?o_/IO6?``C_o/@`5Z1K?n=GMlPT80T:/[b0_[hNXOT230QoMQ
@:g1W[nE3N3VP/;P3bV01lin01^H:mJ_JaHF0W2[oC;m@B80KXeo8e5A0;OE_m6_
K[V]ohJ206j`ll>P`Z2loa733n2foA/nb9lKmQn@3l3]o1_nPh>E^j_[0lWOdW/P
n2olnb41Pcg1EUP;/c0[lA3k^Y3fRaXIBPo>cG49e<>d2b<nc_42<`ah_l:DnFZ2
KUKVXVZIhT8O[j:IOIN6[<]5mYNiDin=N]X6;h5cCU[5KkJdUW6cmnN8dhTn?jWX
Io6J4G8=DfAYa8YMna6dZ:<O_lND/[K]e`GRnC;GmLhWNS0AUBP:?`e]enQlGe>B
ZDI29FZ`_jH3Kk4Le=/D?2=ScUUcRPeNOfDJVJ[aQUiEX_<B:l6Sn_7:`?3P<WhO
MGMdh=<G@I]7S65`O0Ga@BYi0OAZPnDlg9^LhQMkK`Ql;9D8IIEICJIH4d_R=S?j
3OM@o<>[QiffGVniih_g1=S_UMeTbW`>JJ0F`W?>]=0NoK3i_Kkf=73ijAW]oC0I
LR1JNf`Eoi5d=/en`HUb>`mE]F=O>Bi0OhgZRNhEU5O/k0gV7:fg?Ul<GLGLL3GF
iVP;m@1RhCjnd?8Qdh4AWGFBBMW;j5kKa<leDiN5DJVfNlo^m:a9YA[lf<PRIFlL
?YD<0RD39^E6[497>B=Tl]CEie/;A=3<Ga>eL8^:JZ5VjKbSONAhK9=ObgUVoC`8
5k?RmV^UPWhoiFfOnBCYBi_?]5UkK5Of?hTZ;n=agTJn]6QULHQgTok6P_4VcURi
jE]YHdBWcdjYi7^gjOVBPQcAnRlo9e:eVI>0?@EV[ai=U3I6<ULBK2:kI>/AHdj[
oI2=1hKFX4M0SPdMR@lka3Tn5:Q9m6VI0dRVWn15dEB7SEeVlhQ2`WgkBkme6`WC
J^TDR35ojR?L9iKhfQ>Il2BU2eOAlQQg]D8P1b=3Hl17iA[12V1P@S;lGLLDFh3D
n5FEbW8dNbfA;liG00^_K;Bf3Q>/XSW4gkZRc3@m^?6[SgbcVcL0<Cl?ih]E7RKf
3`fK3XflTgJFPZ3l4E6<;N@KET]3KgZgVfNWX]F3`W5<?kGAVhPYV93^]RIND5gL
L9/WlR7iG5?a;`JD7XalOQLIQ/o5g6^A01<97l<9?^Rj=fFE>5hUR?8]hcnAAa4C
F3>h[^WeH5abbM;:LK=jek>cTaENW0=D:2VgYM;doNk=ioZIFW]fhi=/[mFEKM[D
Tnb4Ng;YME>265/c`?dhUH;0:H:B:=TFgi]5a:md<YlFca_0:RT8`_Z87X9fE2?/
nQHJGbV^BhoS96QLO>Hg?U`6W1C711i`YdA@4A2Sa8D@9J]Ngnj9m7T=klkC;gk@
ckg3I<lHB5hDZn`8lLlc8I92^<7?m1eb4YOhZ/jm>6/;R]loa87IIF:URaVn66dH
FZJo[jS3HkE?bigBK]miOE<jkM7h9YL>g18I;Ej??ZnXABBTG:N>o]Y9jIWA_JSf
2bA[Uk]]HCVCDX71c6c3ioAiUXVlDIUF6SMA:[OL@<k_fEAO4JhULN]K<YQ6cY_J
Fc==aQ:_TMF:;i0KS<N6g]=ehJUaMN8Z[8;=lnBb1ef]CUGX5aT4WAg3677K=k[3
6@a_NTW2mfk?i_Z[lPcH22TbcCRO:M/mSk^lSE3_]IiPZ_6`P@E_=3j[=oM<Km;<
JoadX@@cB5`5@^I4_2fbRB@6`][327EGB0N>O5S/9kQDMHaOoNRj8FI`3o^Ng=:c
WUBD2]DIWiU=R^QC0cMikWG=K>OLHHCT?SJTYNcPdnQi]=c/A78?l5T;=^IcgAee
E]AmGfeCS8gd<fnJ1KNh^TC@DR1DW:oESo6HRYB/1al;FHkHQHCHk9<5`PbZ@H>W
>NMb4<[GE6OCo/G2nmLaEj4OSfb41VLLVU7`?RWD_SILGMa3:VkU7OOL?h=N@]>?
THd6l^dSlJEZ[6BG:UKOY_eX?D@V>a;@l8PQJelEQP]`NRIYZ_YbDO@lEDh5SZD;
LMWo35F6X9CM7^E:>]YnIkYKl:PY>X`8WOH=4i@cY6C=NiDJE1QhMA8a=RNDo/;_
S:Q8P4lf@Q8GZKmTJ_CDY@9ho79MX[;BLdc0HUP6eS^NjeSMUJ`c[h4fUdE:oZfa
EoVFWJ@Kb5VD69KJMVj@=NF:6efJJlQVS@8]QFO>E:i^DI39fhOb[U0SIgC/^MjA
;IDlPN;DEZI3?g;QUjZg]R=R95LcaScECBn=dk3;FkfYa_UP_C3`1RWeO=18SR>B
Vi4`UYKfb86/0g]2E55`_0m8:K?iORGXBgRG_g1ajm3:m;]JIma=jMcElW3hoB?f
jISRV<SbUefW^>]V0SQ]7:AYho@Q36U@^/J>7hDSNRhZWG:<K;DR^<:g[QNd8bdD
kdR4b48=2ZBKoMA_W7PTmZQg=@6Zh4gVHTRUGo@QaE=ZORg=5<e/FGhHLMJ7GD=;
Ug]f@Ec?cdQNnR@;KY8bA5le^I0/ViXSINV/eHUk>eAEii1cjAYdIRm=laicWX_^
TFB8DhNF8PiXHn5i]0A5Z07]ZbEFKI2WW>0D76UchUA7/T5JChJ;U4JW1FAh_^17
lZ/lBmLWA9jiT=YGF[HVOH6lb?:NbW;J=CbPkZ[1k3EQU>Q5<cQ8OIleP^5^9KJB
X6MSnVBG_Mc9KD^/K2/4RNN=_ShYL/M0:1EGBd:Dki:<FB^D91AA45XO?m;W5Z8<
nV[l8@k;TfM70VE2]F0Z]7nOBAD1BSQRoVkh]ZId<FJSWCB8^^OMTh<n9eZ=1Me:
M;5V@eB9gVVa:3`af5D2;iY8e:ajf]][2;?/3oh>8GQKK_@WRiEg=`i/DVJjUTnJ
TA98l]H:_n5C5[KM>G2`R^@Ad7hJ69k2gVk`<9MkQdZ^4B/f]FGl<Q9X3D1PUSg7
>glL][RIBLQK7badN5Ye8CZZDo=9:W=oiXF;nb<RGiUgLbgN[@<JFo8eA8;4U6I4
9MOWHbX]@DQ:Kmm/;h:7b31j6eJ2;E:Zim8Vb;8n@>jSP/@:ZLljU[b5T:<4^i:f
GYERS9EmO2MaR^B0Tc>WPcMh97K@U_P=m=CnbK_@lJai>GbWBD[[S55U;HcY9RN[
h2:3WkOJjlM1hQ34<XPMAio[HgQVnm9G2CdAeYfaU7;4jW<gbKOSRMgW9Bn]Z:8g
mWRNkLlc]5VVAeliekZBfo:7f==XY=8`1a99M8VWj6D][_DUDPIWLdhJ5L5_oFLE
jEj5MR8/HTUQS^BIl=5nl6?We7Y4NoeSIem]BEAaRnH3lYZ=`NNHW`FM0Qn6CP@0
A_iMLCF/mAn?fM5]>E565/Q65V[I8YeFoEPBm77Sd3XWS?_RmLfVQRBaf=lG?ZEA
]4hTV`1feTNEDhm^RcdIo6J[X1jmPE3[OZnMh6`@B>;<96`Rj[:4[`eCnGikdfR@
PQ:[c_LLe1Mk2NQV@J2]_5T=^?F]]EWPGU><MBfka4S2dc5hLA=_MWJ:LUB5RGPn
j]]GbYWT?>nYM71kR5b>mcX;gEn:6Gdkf[K;Nik4/JhT<OcRJ9OSkBKUN3e3Lm6K
5YTV>LG:m1ASYna@/dOkdZnh28_VgFIKh`hU:FgXWU?=ccg5Oc_eBNjadVf=>eW[
cX`fBLbDUea/NiFQf`;9>Ti_cAYCI5fPRQhU_^9H`=>3C_38:MjgedbLMF16PkLC
3T3B>/bnII:3U1N>3>O<@/LISj;[ABhBXg6D_gK:1<d;In@o[h7<AN3cPhda5Se7
ASLf8kRmb6fN7f7]BUhP^YQ]FRBL15kEmB3PKkeT[/ob@kHhiKm3jMhiVFKIf^0]
WefROMVchcf]HboSLN5N1A9QP6/<ekST7Z9>hQH75C0nA_bB74`D[j^InE6C>6mG
>[jb:kZaSG;32ioJQoM0/Kml53fU=iPebTaA=C30kbWGaDMYjV41Kkb_RkbMBN_b
o8a83^@LPCa7ALCM6HdZX5TAU=ablZS;JRZZn31W[LoJ[Xeb?I2:m<5iQnL^/RmY
V@Z3RB:ZK[>CC=mYjAVJnS6g2^9nf7d<65RDbo7>RPE;7;:dO2InSd[UiY1Gl0ef
S=hPBQMb<Bm5i1TbVKZVd9SDn;SBY0^aMbdQnkciZBCC2WfTK=0a9YV^eI^iZ3=b
VV4oOd7i`4dWNOfDM[_Y7EEoGWEFQ`m7laR/F^LH@4i^AgaOn1iZLmZMELLeZGoR
ZQjf^Mgk[gJeR<N_7DiB`k_JUn>YVl:7i1Y[7@5W:b082Y<3<do7HEYSjSifk67=
2n<8V8<Xdo0logTmDIDPgkcAP8S[cISocW>QKEhf1E:T5>ClL2>74>chY@5[=0]>
=l?eQWR;7ACCZFSV3gLk8`LMM6^:3C>CjCJe8[;=/cH;XGg;aBb/2?GEjOCJ[eN0
UY?BI?d^k0UVF^n4I3i^^=>FmOV]X8AXRBVaX:3J1blZ/cge0m5Kj2a>VnLd`W67
nU^E4<jX<X/`mWcD_h[@b[?EjG1LK00ibnnZl7EV_lcjVdoTJGWgJhljK7i5LD6K
EVLeP8/0>/ffBGIoh]BI>Z[6i[a6ZPb22c<lgmS;:b?`e4RF<I3G/XN7JcO:e<CR
jbf8C8>>8]j<Hn2DbI8Yc;J4KYYKEJ7Za3c>h7^Q@O31DO5;QSh]Lo>6UnoF/092
oSWQ0SoU3GF]/B;/[DG?LfLg[2RLb6APnmW@Y_NB?4jW469h`JN:XKCmUJAWB>m=
ONYJmn@iWCF7968VFd=3?o^UOeBU^QoDI];7;]PH72A1hlI^VA7g:TS>_nfK15=h
:jZUN@6Cc[IOZAeNfUIY;6Je5I9N@e79R56:>UC9cQUf>l/_cfK=^l@88g2Ec6YI
DMMdl@U41]^7Wc6D=/SH/MK^BU1DVLjBAY=_VNHc9BbVj;iX?Kl3DZZVJ^m6[C43
]_;mJm5_:@A4Gc=fc;`VE/J@7n8am[9SIAWN5Slf4DlYBF^YVKbIa]ofhU1H>KiL
VC6hk_lhn=@o4WO/IolYn]F69^Lb>hC94@e>0h77</kGSMn5HU:BiI9<LdChKAgG
BJaLVDa/<7YA3n@/U[97/k8TX7Zjl:Snf0SLjK]MWYc[P5M6_XEW9<HE]M<oiXJ7
L:/79UK>4Xah]2gn^<@23e4;/e^SD1WB_/ckHLTR=34@8KEPICi^WgN5mGbY`f36
kPUWGQ3;SOV0FMT[FS4;Wc6YXW_I;_e[m3UdY]aFA;C=iK?cjC_<1E7U?QMm_Y=;
cQd4gUB[XX1fjb?iYTL5i7:KkgD^15nXKRUL@@bnd5deKenf==B:^bCS9M3PHFc1
hfhdPL:6gXVWZ@Of;f]k3_E]SEgJ@cH?]V=SM;^YDQZn7QV>4DWHc6a3==]73b@;
SEASe0kij?/UAJ/I8k>XaChOEHZ_nj>U0bcR7;0D174DJkXAZLQTkAdcl7gU0nN^
9<[L6cYE5bT?bOOYWm`PRXR`Lo6Cg[JeV/gSLnd9O?a9JY59_YDTiig`LS9b3HdR
J_ZRHXVo1mV7LHQ@_oGUMDTjI7>6Bh1Q;>a`H;b9j@V5DacVQ5kMcbD>e>fSEi=?
aWY:b]l@b6FAV>F]fN=LKjdX[]WF7COk60mO>SJ2Iem`NgaekPocnG4d_VLadNKG
UY4V`=m8ZmQMel_?<Xg2HGFJB:U2?eh^UI?o17@T_AcFH?eQF87:;n>eEZ@fV`hK
hmbdELE=mn823Wj?B_Pl=VMLGdK0`JWFi2Pm:YbnFf8^9oUYReObmPL^<oDd[4^;
YNZcJNWH;n`@bh9j2YNfJ1/7;kQJeKjUVe4]GRi?Z7V1<_7a87/<CA`IMW[9>k`1
8;5Jm1OO:aXGAho2W;1kLI8CMdh>h=S775@BAdYjKAQ[84O3nG^jRX[2koT8VD^H
n=RgbVmRAUY>]LGbQk:YRK2olLanObOoQGM]CEF/7igmb@g;fGc4KXSAclLhi@fe
o>_cW:H@@G[7XYXnd5cQ:`Rc]gY?Q]@1aZE3_bV?VcZ1;cGD8gYQI5Y1B^ZRDL@W
=X?]LfQ_U15>GEHADF[B5PE_4<OGYcdWYA6JEcX=5JN_gaFfEo0DhGlD>j729C/A
`nel2k0Xf46cAcCPGlm]<WHjIW1WJ8UB/eQnYhUH;5<VN@HF`j8NTg6heaPF83eX
:]DH8cTRJgF`dWBiN4DO5BA2FLc4Z[:hVb2MD?7fEB6F4l^C4Q<10IMgoRk?J=b7
=gVdc;WS5h[gY1KYgA=K3T:K>P[4YEle0:[7InJgLZ9B8^T]QEPdH^km[0fH8>ND
ZaA0=Z1P>E4n1mOV]WmdbHQ10/cV?=B:BkbPnn?giZQ7E:1;k^QZIn3P][mSbM_k
9D`fMgXbmE6kBj4dSXfK8/Y88Z7n;hGJT_HfIc[haClXm;ZoZfdOm1L_hSH@C_]P
^>7BmR<EflLR/7A_UIHWTSKa0GL>NOZ3^<SS;F3e?QY1::cWi>0SMe_2YVlT/HVb
c6^TEiId8J`B:B7QM=:3K::0Zh85SU@/?4k1:`WdJYl@KmOgbM_VI24/C8=fR04N
HkbX4Z^f</_O1bZ7UTCJc0f44b]8Q/5/^`aWacneSY`[;CVE4leO1GZNS3AdgQ69
14DLLC1TV9hXEHg>l`YRQFl^?f7Pa=f^2^YUiE]@jT?MJLHaQO;:1nOo79<`Go:V
R;1jikHF6ikliXjE?V^bZ5ILW7ScW33AUon^C2^4bcjPHN/W[log6iE/0?iiS3<3
EB:NUBA4JdTCaEP]1Mo<^@iLEE21]Rg[>MDPkLDQ<8k0`<KF[VG<QeVfUYEN=AP`
O^jeIS^_9eUnM/5hHE:I@V2Dj2??^`<W?Y9B[GYa2jPMlKW;Vf^M/_nBVGjg@aa>
?b@0m97Kld4j]Nd_db9[PLb:4nSUZ]>KBb1a:F_X:jK=9hHOCdCdmDDT;o=XY:^a
Lc^f4:a[SnaG^W@J4LeQeAeVN9a=SYTIkWWdgAbEJL/o9l_XOBT]lY8UROk^fMB]
OQJaH?LKEG[4:D5i_K]C;4QZVS^5:efHXb:7oI54]KlAVKJ=YmajNk:Af:?CC>0W
ah3TXCJGTNJ5^lUmJ>kSA2c:gLkV;]29Q7EGWmW4_P/S>SUNJk<M^DUoC5ZJL;8_
aQD2BG<<d3S_fd;0J^6N5oJYi/e0P04Qd_Q9T>ED>No10_9cDKoljg3DHom7HGcW
9=?ULGXbQ9GiQNgS`iOH=3TXD6lY]AAdKLT`k6O14NmeeGOF^T3O;bi5nZWjjAgB
KNGDYV>a?/eOdiM<9;j=YIU`96;8g<e35bE9U0e@]nl`2Wc__l/oEKUH<gRn1eDP
KoFgd=]c:c5YK28LFlciB8EAYe7mMBHEK;o69Om]Q<2m6>LAWjIfb3R8?>O<gTXg
cIZQY>4BI_;lP;kkJ<l_XC6`=aiEK2odT>f0Q:SAR`MW[l__Nm[N0MYMZOacSXO<
m_FEE3<5/@=e9b=MHJX110AmYRXZ`/f0hPcTOJ56^hf;7Y_P^<S;3PYYYoijMk19
CBm^9:loUe6ekFJ4m=7KkFlU3][:DaZ41^gkfUMM[d1j`iHRR9_ZcIE?oIbYWOd7
7[O]/K=C5I92MW@g^WC][jA5Im==?m/BW@X_YCj=^3ZDW2Em8dV95?H<igX491nG
MSQOfcPM8ndmSi;Q</ggLOjbmUE:egBZZ8o1ChM^?P_>ln5>G?Y7iSOmELEgZKP6
oSnBjQ1U;2I2TBBSg1Ggm8Ja^[2ZY26jHLlEJ4d@F<12`ImecbK=jA;B[Kmoe5YD
HgbL[V^a2gc6l9TR_=U8ZfU@LnQTfiBhGm85Nf1S`6D3dEDhj7WScoZPL09EjR>i
VY/V7^nkSQalZe1GJ5ad^AnQXIJdl_^c3A5c4/RX/HC?X6C6Nl2g<Ei?e2igUCLH
PBTU7Q=WS9O98Eeel;hYISj?ciNDIEEK5>`l0kAbIbCZC>ehjPekC`JmeJGZ?neV
ZHQ/A9>HZeYjSfkI>bTooHWm;:32]imIj7GjQdN1RDQH`RiAAE`edYa32gDfM=bb
:e0:<_;k5QP7KQQZ_E_QMF6>On5Amf?FU2]>HDb?Knm]_Ehl>VcTRDOJDY`bM_G9
>@`22c4kCIE6<lEo[7h3iLX:6UObk9>C81GekPIJ90nYO6URbP[@Y6C>QU7iKZ8K
g0HLRaRjnMhDHjMnXG[1mLQb@fm]7_KMB7:e39`>_cGke[/1L@Mjdo0^Sa/1Knam
Q:DCBcMFnQTImVQZ]dX7m`1k4_]kb_fiIPcdk?i42H`oa3j61]TRcEaIgV:CF]c^
M<SH6DVCbK8l9k/43[a^62_mCR:_8?VBO3JW?=V:P;F>Fc`ch2?bR_=`=W<BmM<2
RHi>4V<9Pg6?c6MNd1V9ch?a0lHT5fjO_]IRkRiKAV9UXG[4cE=8B_/?e8/I3X_:
^R2]ZRSN_PN5E2I`Mk[P1YC9=>NoALn4Ol0_n68CSYJ]C82egW]1Q^CEF;f^_a?`
;4GW^ES?LH>BJQ1;?=Jk0RT6V1ScFBlUf/GWZ;[JG=Z]fZkM96j]@GXd5XlRDc73
7]3[I`8mUAg19a0JT]:`SH_:SXDTm[1P9LkHSehj?=_cFgTW>5Z<NBKOM48Ed6HL
acZTa@bPKJPoFUnGB@RmoIk@oTYQ?dRC2eXmiJTobX74MF7>_TRN[XdkodU/PXJ7
DSS_T6od[>TSB4@^_Om`66/EPOI=d:GITSn7I0a2d<mhhVmZOWV<A3Z><h`nSJGU
gibYRO<E=:FLCH^H>;/OX@RR@ZJC_=k4R?HYTcQN;A1/bM;=Zd_jeo<hD=C@KJY=
O/UX6UlNO2UF[HmBI[Q;^S54F=5LYBNWAW2;C_^/a?JX29Fd:XFY>8ZRXG/kLE29
i;5VC02I40N@Vo/A;]Ga1W2<njF/RIeNnK?Q/o>CU^?M3Vn_^LT?f0SIW@V?F2Z`
Y^QnH7FlifH:n;A66bkgEY=<6L5=W32/TQamk:D2EacK>c4YDIXC=97DmQAbHA8F
dX@^9=di2a8]4hXMTaWIj9^GiCmj]`F^YZ2b:Idd`EZIQVde/o`GSeY0iYYZfTeD
j7i?9Vg`WGDkTSC?Pm4hI?5ng;@8dVi1TDK/fAL]h1UkSUM>V/fkKL;iJn[KedWY
E]<m2iO4InZj[`h4]R2iU/`8k6SG9]6NGh<B_faD:IgfXY`j1/Y89k1VPWEcRS@W
9T7[7;:MD_DbNflC=c/`?jjk7b[U4TI9]>k=JUe@U2:K<OKgF/[DdnS;]^XA4M0O
;I8O=5eU1oOROU1<o25Yj3lF_TZUI><QX^V2Bf>=^U=dHh6g_LU?e3^DH7ood[R=
lUB8oiPZHPSKIIh8f3J7<S]15dlXP4f_W6BS0;AoNJdiMPmCX_DV^UdU=I:A5Z6n
Hi^Z5NkN;/S]=K/P7YeQGVk3WW3;VQHJKZ4mb>R9]`h@Pk==0YF@h1Y^S]1`g[Y5
3moRIejUKCXf/]I;eL3<hi9h:Zlg]GBa7QACDi/V7Q_=EGWXW/IYH`M0kgGV?:BD
P1R7]aoHJBeYa_>i<]]MXdKHl]eQ:DWFn=QX:VMSko[]kVll?H^ej/8]<D;b[Y1]
DfadcJR85HkPZ2^MdV8bOHV@DKj;R^cICdYhdT;JCKJJ_[7ej:iCB`B>RmFOF2LE
ibaLhH:8LML[5nf<6A61eI=2DY4;`ggf5YTE^3^mPoFCGS`N3MOZP61ldTCHjcCD
5KW?kieQceRaj514n>70Ai3MmTN4c/PgMD^QahY4^HFiX7ecF_YYc=NXl5R^U<bM
ngenW_=k]VhCN_c6e;LIKGchKN9D7ciieAQQRZ7h<Oah?<]/:Ff>^9?N;T3?]30c
LCGL6Ab^0OHY3/]5`2fHcD2EK9P?ii?[GlQBc75K4C3E>70_5YGGa]mncYg]Yj5O
CjRZ>_0]SnKH1a6Smfh^LBXk61LS<3Ok<8Im;7laMfcKdAehG9?PO9]EU;?Ne^=8
oijT_]LUnSX/Bd5PCG/Yk6jL4BFU`l9@`SDYVDUDQD1B<FF[8WWh:VgZ3?JIJIh_
:^o7O_h?93DV/fei`L:4MUHWQU6G@CF=GTX/XD76fPJ;;I^?Y3dh6L?1A`MVEYl6
45H`EmSk30=@O1<fZA5GnN<_SCf[9U@P705SfJjHe0?GlN@:lljf0W1?:O5TW>kM
m23B;jO9[]DIelOFjkOF>KH2liMbGEQnYiDSlmm7?QoZRdN[makTXjfc15KT@MIk
C`P;L2P[ZafOI97ll<5DR]<OM`6WSOKo3o5PI<<:IFiTLgAbIF5]2VE^I6mRJPXd
>20`86mRJPXl?0X_C6E^IgAX<B0a<cDg2Rm<IFiWM6Pb83Di=3H:;daUKVMdJ3<P
<0X_C6E^IgAX83Hh=cT:;dIYK7AULR0_AVaQM6E4IF=_I6D:?Sh:LgAbIF5]2WSJ
SEH7E9?K/ZI92Ke8AghYBTm25ICNZe@YdT884209Q503B56JZ21=1JWB5E6TBbL2
8Tf:5:E:DJX:B>M5?ONNMnikJkfg/UJbmg`c/fOfO=mN4Ci_JR6YkXYa@NQPd3Q9
Z1A42M0d=UL0810I:@Q46R@/K8W4NB?nF472ea1H?b@6[OCOL4d/0XHSf[AP>::K
<@H=6?Qk0e0I02Z_15E@PT00J@Q4lEn>6:`BX0D;@;X2aU:00@J=l0<9Jf9lP[58
M`lLlIAo;@4A^2P0EEADT?PM3ZRS45PT78H6S64h3`B:N28LiPeHH>1812kh7bU4
[WSPL3i:H71PH:0D3>DWQL6jZhQ:0858W0MPS_13H0<@[/2_MP4C60[a^c4YT31P
jH7dnf>f`;SQ0V5H140dN2?Q2;@O<L0OkH[00/Bc0@]m8n2Z3`;mamWXSh<4l=OE
050Yj;oCoAGm:a4BoC/H1XMSD3h`M30Bk@jh8KdA`5DM8bUL44h2P:5MOcW2_?d`
a7QH00cY3G<Q>_`^70KXZ9/1<69oOgGW1lLROG1nDWi8kelMPWnU8Ejb=]YE4h=2
8M0h?m2_n[B@F0BLN>_1h=mSmD9S0]7h?f/g9=[EkEL;[_hnH2/dd]LOXJoeU`OA
1?[KiXk00G8@24A14@8PO0544=`3o2^iIK0?hSL8oFDVeQn6ml7h06k45Q1QB3L4
l@N4mh<5800LeQlAQ_o_`3mg82PDL4G2LH0;`Qf91_fMWFQ6^?gI4bN?A@H1eb54
hT41b:o?_eL>A6jiH]3N`Gnkoah^F=]0gL;BB?ag`on6=3@`@@1NDUX1T9BFP`1@
Z;@dX41LQ?dcRbT<nELET;mSmM5^643aCk74FoYG`@5oCEoT;f680_o<IH8Q<QH1
R?a=L7^870A>o8;n_fWn>nAoHoN_;?l7`Onc7QeoKnoOZ<P_n7nP<1CB>oP_W<QG
OabAnlHHXP;@onUZSOPSEf>4:m8OmInX?Pi6e80jf]gkgiN8m==11R5LCI4h^<LO
Z_baFodBV3LBSC35n25o?BR091@2n@n<Z2Zh5o7Al2?blCN488[VWdMZXn4HeeoZ
TYJC1f1H;2`HA1`aLBL7h:546KXRPWhc601;XC4hHPQ0K2l<L<=P@KoV:J/8P8W?
dRlSj1n9hOiH;55F_`M???EOnmlJAR22473@a1P6O_VVil^K[oLZeGT29AOkUHN5
5jdOR4[R9k1=oPL<E6VRck>RI[2kjVTmkD`O5kA5M]@VnHoaZoF_Z68KD/`J3d>?
W9;=QaHK@N>3k6l6WZbZEa7hJ7PU;MFF@Xmm@jm5NY7GTkHH2>OjnUmR<<eWg@_/
e0fZ8YA=_H/IFcAKNRi_B7]DmUkbSUFROFCaR72Nbn=ACP5:W2@O]AS;EQ3Sb<k^
<4_>`2Vo@K8h:6c]ST`QgViFn^knJ<RWYiKBOZeL@UafW7cT>bc_QRkP=EKB3CPn
h4/:Y`]6k?f;hVDn]Y8hj8J?cM<XG0U69UmjXMY=OWk9ONkWFP]]GBmJ@SN^HS;m
bM:aA?V=2Qlb^JGU8lQ>C_L=YPgl65lIBle;PIJS9`ZJNjlNWYfGShl`43c?[Jbl
Lc6EO`]kNc:0GfFBGgNK:kgRO0bHW]n<GXO1n5Dh`@f<>/LSUXNl;I8]L1iIfYH3
<Xb@HeFQ8a@LdKRVB1PhUUOOh^6RT=PJL8Qbc0N5;7=`L;lGhj7iGRdNinEA>TcV
NCE`YNVSkaXIcIKG1HVD9BOER8O_CW[Rh>L4D]2Z^dGmXmIa:J;I:NVS]oUIFkWk
nLR;J>ihMJ@_9J@i[mnaNeJKfP7N_VO1@TnK;]JWVUI=N@<NB_DiMM6Jh8iYC]i8
?QkUOU_adZD=NLT3hKOGG6W6R3bhfM<P:jZCUkc?6U3gM_MAQ2WM]Hg54_KaY5HO
Y5MbWK?Wi^SFInOFc>XfkG8[D@cea]MZjbeJC`dC]m]]DjeedJHmUXWSU0e5kf5>
@Y]OV9kAmoQ[^K;5S<_L=J?NcM3P/[=`2oJGYE_9;PUZWbeZV9/I<]VoLY:C21gW
NCnOIc?WUJK0<JbOFJlRc7>d4SIl0cAnLF[Al^6YJ6WhFB5mhOiCgmWkY_Z2EI;6
;2T3:mN2_?XIfX<8Jf[C[dNV/US]IPcT?B8fWle?:W^XCeK>m;nSE69Z4Dc2^8`5
=4bc@A3=m/OlfhaijjC]N@@nB4[?bYTM^>UcSA0lPC_OSDAiIZo65I[`mI?^Xh_h
3^R7ESGGOZg`H1]/LiYFaEFkY1;]7ZV1Y8o:ZbTR`XhUCF3YJjee7:9ecMb?_khW
M7dFVMUJAfdfL;TeL56MHN4e_b/=hGBNSZne=49]PdUg?i^agSFjoiHgRSk4L=bH
3oF2_jo`AF7Fe]4hSKSSUkZa0?FZeb2<M^n9KQ1oF@3_f[Y=[Gj@>UW?3n]G>DnX
^Pm6EH8V=M_;FUKUQRRRDkLgc`OV3C]nBJ7KIa__;1`?B1DQgajBUI0/R4:dOg/m
g5Q0[@XfSemHbe2mZeGURo1]BfmWOWbWW9NjBS8_]h@jB7]m0a3JnOSP3W]B_YP<
i_ELaH<Xfa5a25kLA>[P^3Z2X38@5gMA>CNb]T_Oh92g0nCVl2iFDl3?1aeEVB/M
1JG1ba`XJam=NUJ/T/W^S=RI_9D6TCcO<@`G2ha/D3dQgFIo/[8QV?hZ=hI2/Hck
lSKX5HGj6M57Y/4<]0YaHAlMZe7n?3XKFN=MdPL9NJU?:h?2DO;]U5N^>AYjTo?g
Qebk5obchXV0M^4UAUfV_K`U`^O>f/iVSCS?9XKUe`TM5PnLTn`M6KU?7af:5cYT
2l48=QM==CeC9gFYe17R84EK8BjG`k:J3of3J@lf6AQc?ZcbjRfiOg0kH^`@EbiS
3]hlSL@]m[k;LTRAnG92nm0ZK11cV:NFB??S>X?^9hNPPVhiaIN?J/:@?/F`KJ[3
g;e`PKL]`2B[:h66fLTQN`RAQ/ngC7>:Vg;[inEfj]m:;Y:od6XSbKf9GHQodInf
Yo:iW95OmP:e;T4EFfPO:YmI`_2`fdPD4MQNa9Wl/N>1QSQfA2<9_SbEWB]cZbd0
U9TaNokEDbD8gYo;27B^8gm@oAcEU6LHgUO6fU63Y?CRhdlRajbL]XDTgAiXb9Qe
YoW:?H/iEA9oUWfBbDjjHk:e33/2OfE=F]`mI3;jeL;XFnF9Y[[9g:h7XZ/Yn6Zo
ilX[:?^Xb:Rd5WmVKdMM3i=^oW5:]L?EFA7NS2@onR2:aP?i/bTC_2lXG0j<Hb<_
/XQmYJjiB5iFA91OE?fl^8Y^DLn]afMUEckTUfQl28g3If[_aZe9SIT7XDaT^AZl
IYI4f4P2FC?[_FDPa_]<IN@]>E=;LoKJ90ULEES@j@[IZaWZQc/nan]m^?GPCcCL
<iQeAYEm42Vnn0CVU?6leV:g]Jd<M5g[HKUDnPI^B9oi0JOfL=<6JBm]_4?T7CO2
`O:e[aFS:NGCWP[GH4j`W]HO>`:BN<7ehGF>YF8NbLR3/j1MYFENUj/IDmNoRC9_
j3ekCCFRKT<fZKgJV=YiF_cCbSgWRUNeKc694EM7UDKid]QK<LnW``g<7PaSnXTG
jHC>=:]=:Z6TY6;0_QW2ICkNP4H4V8ONg^g;X[l1o5a64h=Qc^;F8hoD>`513RRb
E3VjmFDa0Nc6GWY]Bn9Und^KL_kQ6h_GUOS5MCDSU;IOjXP;V3211XNiKjc6fSe0
LFFXhm@/1T;GMPMbD5?RbYEUecYImBR]Ldd7IfFnQajBiOZP7T846P^K[E`EUV/n
=7=eGkmVTkfI9UF4JgZ^lkHi33]J4ea_6iiKl8[CKK:jJG1Dn6agm5h8olh]GN=I
/o0AiK^V_I]J0mhTWkN=V2em^VcOn1P/k=9aaCW1YldN:fg<T7RVO5TXVE4J?@3j
bk=chiUFN^gUU1A][8H0c`@bll`IMd67CC9[gnZ/CK^jT^B5aXQ7KKgXhN5LCO;7
:i_10]Wae:/_?@G5^nJk^^dOS^5CnU9_1:L]UjDi33HaG]d[hYh:e4KLmj6nM_SS
<1Ah7WZTkf3WnW@i2e9MSFUNL[eV8:AF4KYineaC34LR[MSG4^kVc>30;OIS9VHj
`ac6PO?OldLI81D[Zc9ki;h151UB>QE>O3KZjGTjHK^giJ`ePQg9V<8B[EE6QZE3
[ZKi;U4D5mo`[H`^B>@Ab0I^WF3eNl9k?_8;5J_h;E5=[nlDD9j1E=ZZUN`gM9O8
7IB^<=GRmI_^SY>Y/;h;?[<LmA8cZ?WZdeXd_kZdLZ_6_^Y6`N/f0O<hiTY@Vk]C
SdAhcN5?GbW]D02=NCN@HBUo6JUZTn3bCSKjdgHHkRLR^oF4W9=/I?:deVP06[ij
8LG8eJh_K5/ja_Y79[?DZVcagFRYSDI7hCja`T6n:_IN[HW@CC_EZ_FK2SO_FT>g
B9oARM5[GC5MP?Ij>^c7cm:663BckZGUOZ;lNUn5ka^K5WN>ZZWCjBI^49?Gml<`
8Bg9:>4R_2aQYiJ?I6NJiR?_C6c^KA@WV`FU2U^Ki>?4LL7@i;]dUfodcelgQi8_
C^KOCW?N1UF[ZF5Zn]5k7[aK[jE62=O6?^V8m`K:/7k:bOP/JVk3:<QGEkBO[eSX
5b;kcBINh:FPbcaS8;TA?Q]>4Z<CHO:<Q6C>ToYRiY_4G;>4TFALoBk__SC?1l]9
M?R6e7Yi=72cYILW;KC<RG2>MH]c9ZW^a6]0i9W>:@Z4G[PTUWg4Jd/R/blPiDhB
oTG6@V?ljOVnS>mmO]>GG]>8mbmlRZ5?Cd<nZ9_hXZE@gl>^MMBhGo53L?7icU@[
A__@f1@b3?4YAINm^je]7mTiDG4X?/jWT?kFRKKAk2MeB;AiIccm02MB2j=a?d/i
=3LG;D@^kG;fFTMV/cGomVHeVoVFomHSakEjQeL:dX8aceYR]ij2PQCH5V/]]=TK
iBX;dZiVS`m^F[eED/DlljF[H[:fIcaiNoKK8Wn>K`9I4@N7j@c9FmbEWK<NY0_E
kEemLnHB0LlEKS=Z^i144IHJk>CHU;UgE3Xbmc>X7VhAa[;HmPX4ccIjF;2HZeN]
ZDQgCU=6DelMEOEV5?2M5V4Ld_Yj=BIfamm[QecF:HaoZR]K/9B>Y=3IY2G^069B
CQG5e>RT^OQd@^?:_7:inj[QE@HXn03FM7kmO>a8RXRc@Nnc3eb:D[5MiPFm9L5@
:TnZXVoNj0bSZYo>1fkk0n`AIE6LclK2nl[l6a<<GWP6JPe`@QFg^PdM[AF<CTU5
Z]ngN>V]G<8BKW2/JH8CfK/XWJQ_UGlIFSS?B]Md<`KZg^7^3=BnMoUfY/HoWJKV
L?jJ:lJbgZULFbRV>0HHHS6bdeb=M?W:<<_DObn9DkAHd?l4DK3bJIIZANa:?Q>:
TQ36@gUj;RcnmYDKMZmZX@a?]oOB71AZ<QK@:kN>diIJ69BIi>=gEn7Qi`BMWe5P
S9g[m6LogmOEC>224fKekiRgRkPaTkjRPc:ZcZMmDA6W/SFTh]6dHk/UG9KZabKZ
lgkPigC@e^jYgUD>;O<?7SN=3/WR4f>WV>M;BeE1>Q9OMmFVJY<NMGEhBlh;1c6`
EU_?nRno<B9[]Lc8CHmCP>GfbH4FQkRjCn9MU>LaNd=gfN]:h7NbhV4WX2F/ZJe_
CBdOJk/KcmVLLAT[A56fVKcWOBYoYXghlmGdbDFh6h^fAQ:2fUm?0Z9kahk[;ZU6
<:X=G_W2O8YB;Mg/^?UX_[g^N;S5MR>3XeEQe=4:4]_ecMRiNL96HZ9W5d<FD_B8
QVk:a26Vi>CS8BF3Y/EF_Xo;F>m`BoNYOOL0?VjO`2T]0IdY/;aPH;jYjGn1iQR/
MDN`4]7LWa;JNaQfc^3`iYOiHDW<Hlk<T:_m]YKYVPi;b94^l<6K[hN08IMSME6/
6BF/Fo<L<PnOB7VIM>i9:@_ECNORf?G;8;DZJle?_CnmhZE]mFJIDY=dQEH=9SYg
AU8b[UJ[68Y7d_>:jdcmT:8E=_bhWWoj`GZBTF7bbkBegAVj=7lh[aUCo^6XnEff
XZAUbbO@k>XW`2NECNa:m6iVnWY2hVFM`G>jHlGO;QhglbVm99@F^9iMHkN97D27
j[oNLNP[:@Sb1Bmc@ZUSSa[lT4DV@RhnjA7_OFZ_F;W/@0AkTT_eM5JgmZ/^MWdT
]NFhmkakD::h=jnPToe]E;]UdLE;SCdnJDl20;ndHS19Y6:W<ZGj<HDRmLS5<DdG
>c2EH]59??Z2T1NQ7<XjkCMdIcTUIRi8M?`L/`mK3Fcd_?ej:onPAc=YoGIOQPFF
SOcCF@`m3HfogIAa<dF0iT^Wo1>`I@aVT5gBFPIolcAm[[A6VM0f5[P[=ISXAfPg
Wi=<ih/;Q[H>ETioL[_B:bXKD>aJ`YldgM:V@iThTK6fMGemZmUi0S@[<a[@^YMh
>AZO_/K36Bk`L1DilW<2?[gJajWWiCkgh=^D<[QgCX/Nhh8W4K[PibSVM7MoY@Yl
ff?:oQ?kYQ07jX:MQdTTeFFZZQ[1EnZjlQZZ=Ob4;S3;:L;a?=^58_:SKO5hYm:e
P@b62ODVdSJmX[H=ba^<g`6VCYdZinmA3FTE?/2T3b_3^C^:]CP9F2UlZSRHJ_an
n^SCo4W?`0G@dCTYi/>9?[TUfWNh^GaDgnBJMnnb_eD97<NFd2499_AZb?WAl/Y8
Y?Nod8F?;hg`H5igh=RiHXkUe8M8N>n5L8YGR/o1]<oBMJM0^lUWMcME=MFgG:[?
dPCIG8@Rg/W?5dH<:iXI;NNMlHJIjSQ[gGF8X`[;?S]_mc?iYNSCNiMlXXZ^ac84
OZW[4a<Y5fRlOZ7L?enYAhcl<OJAohIT7df2lX>BJP6/YPKJcgfDIoOVEUJOno3N
0?YUJIUfb>@EUiOmiC3J7l4Q4k7c?>8/;hWoLDi31Qj?C85eI5>BESIRU>_UWf9N
U3cUn;koI9BQP/m]Y<lY9LUf]@eRXeLZ;5/YKSbUAhh;G>L41Q?KKXmBRhC]NdOl
j9al3@_G:3Qf388Wbj3ahRGh1bh3?m8P7BF?:V0amoAIXIlmRaK/fIUHb3gZJJb6
?6T:mDQk>d__YNXKAIV=7Mg9la1M^F7BgelbaKi@IZQ22jW65CT]d8/iGbfVEY9k
CA]__9KmJ24/>GA_dLjTdJ[[imgElh8cm6K_VaPe:m>cmE]0mN5;69jO]41X=TG2
_90QU1GM5AZTV=D@]cjZn6B>jS/NIYYDkG:6`i03k<J<6Z;TU83LDcebDo@Y@Ee:
TY@?HK;ZknId9o_:m41ZFMLeOhGQMP@o]k[1lUUQFIX[Dh?Q9Mk3Hja>d[g[ZMKE
WVF=[/IG>e[h?i<T;5Y<XA2U?>d27Ddc]0?:nBSB</FD1?P?]ajGd5^aZS=dRfTe
85/n<dZeeVPbQlbMEebVdQj5h0oFZe6R=]l2YUYBK44mAnCO9lAKDbjS3K=V5>^<
8]]H4b_4f<ZM6bC_@>TRa5n@]gg?b=cT[?0T3;jKd__n`aYWWoQchlgPMmeFPfPg
KjjeaNIEmHOOgKKME61bFYY<@ZGbmO?NkTW=afTeH[:Kh3`aePNl2d;6/ccUABNX
NELQZZZD4R4FB285HVW<F`46ngQD4DL_`[<A:1=WonFQ_DgfPWYgBnH=fDcWM`k?
em=3D`9R5Z8WYJ4]X_MX/hm_iKPfbE=8:NPdN6T^PFM9X><6LZjIBib8;=f>5o47
g=6nDAGYmA7lLb@1DIHl<jdcfBIM0b^QJ_I=`^A_Z68@VTi[:Qf/@SHkUn0Jgn/^
^^7Y2W?@>FKWG]ZI_<7BV5OM@nLDQITg9D6WZCA2j9Nn?>A`6/a:o?1X^GeITW6H
F[]Pal]cJF3e8`[]9G2Oih=L/NL^F3Xao>V2bnek>mXE]aAoa0VfjJBSK:M:Ul=3
CKAlWVEHlU[:f`Uo>acDXh4c7A5`WVGO@fAb/RK]c`9RZDaEH4P3Kj6R>Moec3Oi
<QfSh5Wh5mV9/K;eI1;3jJ?WSUDgJ>MTG3J5=KSEQ<Z<GF_FQ2j9[?ZUg3ImJ`d_
/SgMDY9>6c:il=fGVJ;_Xnb3WBBQ?539=M^0Z_HgNSFDmA`F@1BG;YIFG?ENNJUl
cfNENColeXGJRU8eNY/@I[[?Qbl5?`Naj>V9J`TW1]R5FenmXgZ=FXHP@fi2Zg=[
>39;LI2D:QMdGH1>X;4JRgZ:b8[;F7g@RalO>I4ah^MF^;O/W_FhZb[SmJXiQK>I
hJDGo?IkFa^CJA5^48nMg1M0a9F:dd]/NKOXPj?7gh0Dhg[]Gi_>k:mYaM@k?^^2
6Te3gmfd_bE4`UBYfJcS/_W3fmR<=>B>57m3kgcNU_kDLi;:BgE^0GCUTQ?m/fC2
TmV5Eb>7=Bb_gJOPd2^M/^D@KoDa2;<0cOBlA?Td6g39a9Cdf=hjQ^GkdGg:JJNX
5[<`/cEZd31e^QjUIdfQ`M9Yi^jf13Q_=O>6lc2Gg5fk7_A^R_`NV88/f6L1U1b@
RjB]DlT<h@Yjbc;N]NPof>_Sf=V/mU3@?g3`R^b22i?46IAHF9W?/oIK9/WhA[O]
G>f8>3DgTmaIMhHl:CiWE`52MC@;IlUC;>gl8_<h]anf@EJ>:m52//>:[HN9`bWX
4MW/ZO<k7D66VLFF97`obKd[E]<UEXEnR1]Ro8>H5hHM@e=58Uk>UA47;fYAhNBE
BW/;dA326NlIo=gD^ChINLUHE^ob4EF>b:f9J8LkI7BSY8AG?bhTa45oe?OYBeTH
?kBoVXah/LV1X/FTEW5oGUlAo?inbS`gmLI1ZHoDmLlKERl4?L<56EG1]R9:i0iS
Xc=b@PLOh`Ek=mYP@_9kL<kF0So91d=[AoOkk?:bEoCO=k`LBOk:`g>XCi<GmYGW
3@EWmOO5R`[:coFD4g_917==?PfDX?^BH5=aIYeMLk]E4aI59ldEZKaJ[=4ON1EC
36nlP3bfH08iJ]j?<A6mT6H7^mjQRI20D8F/g7IicOeCCl6lG5P4==9TNb4ReTCP
SOV7Yeff/OLS/4g?dE85jcJmTfMbJ311^@cRV/VRM_j_K8kMebS[3O>fi3RY^ZZW
H4o?IHZK2kYFOFo<kDY=7Ge_g<OBA>:4Of_8Ld]?nkFJD@N;mlP7W9lbCZon<IW@
Eh9hd5ghDVAWH9ViSaYoG3>/<43:@X24S[f<m010DDf>1JT@`P;]K2l3//dB0SZK
KhIG6j6ig_l5n^la^@YUKVAcM79UHFd:IFiTKf9Z2S@i830PKf9Z2S`l2Rm<IFiW
M6Pa834c=CL:;daUKVMdJ38P=CTf<PX_C6E^IgAX<b0`2Rm<IFiWM6PP=ST`<@X_
AVU/M6Eb82m6K65dIDAUHfmTI@Xn?PYcM79UHFd:N=Z=EPEDU5fg1^V@UQ@L@4YZ
06V@T0kYT1j6PAUR1VJ61ZFDT4i1@:A16ZFk6d4jY0@9ANTB^:=noooMkkmg[G_G
^mJlinahc]iW?lnkQX=Eeh1O`@iQ2e51`=7l@P90:L13KGeA010X8P042Q=cL1S2
d<j@?eIR3V<84PE3`:GnVolQ4P92Hfa:83@VC1/11fRh>`>4A012HU92hU90840H
29ClEb02:@E@0WW0k03J0P0=11b28^IhR73eA/8LX6S<:OmJ0[S1?00QBDUa_]oY
00DG21861/41fR0d5>:2>A4<LPHH8<0`2=[k7a3L<U0dfUE:D=3Cde<0i88B@20M
7_3`0CaQJ2Q07h:283dPMX1Ok@8NPE`P_a/C8>H0649QZ3mV0h@mfQ>4Q00`1VLH
6097HA;LhGH@901c=/10G@^Ph`Z1o`WFnQ?01oS[JP120T;oQ_/[naL@3?hk6@@6
8eaL@G1_6=`1H0mcQP1dE;@4d5iX?P08K_L[4>B<@V3b@AhPV3?85Q?`^g0@@4E1
3`32m?MGMbP`4^J:APVPH<jo>QCl1H>iI6FhgD>4R`/4STHAojY?2HJ4P36gkRgh
Nja>L8@Wg?O?fQh6]k?oeH:M^j^P4AcViPiAEoX[0V<Ro]_V0443A850X;R4103R
1X1hPJ62_l0=_EdQ_ie2_lbHn_emGA6^07]<2a1oV3d4lb;fAH4l800ddQgRko_O
7OoL4@/90NaPH3C05^80Pa?oSHha@ncok36CAl:l0>I03?640<1OckmGUQQ^fB7P
c]ioQolN[Z2QVZZ>PQW_khKokE9DA7P1O?V5P01nHE4PQZ_0n`1ac<;oWbRj8=QO
E@3ocUF7fb<0TWn:aMcB_`[fn6_jg7l9P`O`Cja720aS8@3^_`U^0A@5PS4o@_m_
V_m>nMoHo@_Uob3hOmJSh^k/o=_;oL_m?k`P5iRcmemn35oMdAS^Jb<`2X3oIjP9
i8mL]B5f<7NGooBZXd4H3BS07IcoOHT`U0[<2f:W2d>3XGnXl/M^m4]PcS0hA1N1
P_gjX00`0`;nQ`nS:[0CiZ>1`_3a]`^24LdoSeB6Pa5f_m@U;2X6026A86mRc8Pa
>e60[a16QWH@[ml<1PP:`15XC0X0diho`1j19?heC`b^8=XClL]8o0mP/3/BRI7E
kl5SC_gGo[N68A0_29QhMPX1UPia[0YY>Ze@H?;TGanAoLRaK_:BQmmg5]W/OTi6
T<ACWQjdQ3aFB>[_X5QHDnHnTYnkLnVkDon>8;@Q@Joa`^nWMIcnf7XSlL`7fYkA
g1f5jViVX]_lQ_8KOYM^O/J1CSSef:dJ75U^kQ9T^]WDYiiMZUkEgLGc@lnWe_Df
b/DdBGhFSo=76DEJ11I<L;bacIRTIl=7lc<CgZ?jhDDnLGClTN[ej?DMSCQNH_n_
DB9i_VK;`]5WTcj;9HK2Z3J6^`aVm<`hAeA3HibnRY_96WCC_XEi2cdcG_DbNGMN
gnA;FN2W4=PDOUD>dgl1[nf/m1RJKA7jW9D42>5RjZ7nW51IE4]SSFCC^EGNJ?f2
6UdYhPAQgVbaEibS]M2OHQF8?l[<fgWKgd:=`d4LZmlM6bTHkOlmeTG`nN]/QGUH
M;78i3cm]UmIPD^NEhI?VU6Ho]@knSS8g5_B[QF7VDlFR3]fP4flSf/Nkd^RMJTD
E8i>^cS>2hV:LW5G?ahLG8ahn>`CS8hPcVU4J6?iVlSF_PM:1YlE<]ZgU/lHi1[P
Z;=l=SfQQ=kGPM^Xk0AW[h[i<NP/aTdcRhV9<7JQ`jZ:GEm`AUMH7T`KmgaQ59LP
Rf0WBFam?>bPnj1eQbkY9cK^h:MP[T/aUkXTKUELB/ILcA75D?oKlL3[/HRA?[ck
fOfI]b]@]c_VUKgDGT3CgW8[La2JR7nWNR;TH>KUVI[oiScNGd4N/7EN>0e]Si78
DGEWfb<^j;Ce>nOL6MYJ?UdH[]gQi19/X3c8]`QQW:30[g_0`O7EOJ7lXckCU^PA
Xa75:g?:8^g;bgL5SO71VRN4[ddH96:@N;5?K8_bm0DN3OTKRHV@Y@gkYk0[DdW<
D:/ZnkfA76Mk/S?Ui`loR_OKMK>YXVecWY=mFjnPagQln3QfD<Tdj]kbjMQieLaJ
?ZFcbh1:H:iGALaRG4fJ1fNj_dGB6?eDTHal0;VC>eNk7OM:>Pf/U61WYb26;mQg
hn?P30iORJ>k_JYXaPoe:@j4@m?J>f0ZVJVClERV[=;>5IJUe>2T8njP]:1`_=DT
`Kc:XKE^N/2UDiG/XO:G7cVfkRGcjXO_7gY`0lkOY39g_Gl_Nh:eAM9GC7AOOgn_
^GQB9^IEQ3C2dfVdH4=57[R/cC?H65eUIB?2dD<KU6Q[lhQXVL4`Y;E=g95J=O1d
DToKkZ96M1QjNOB@of<?/AUo_`acc956^W7LM7Elgh6a:J9`Kl7ZfhA3<KWgJhMb
W1B2dHR7C34FZmG18V<Ai5[3Akc;13>lG3R3cJXgknOONLFOOaECg=[D8A55j/8k
ZkONM]ccZITQYo1jMl=O^V=jjA?E9oD7iD/Bni];Y^dI=fN/o>oFFTYn/N3OQKH?
eGQ/i>d>O:<N6Ib:g09djh3Sek/9IEdBfDo>]OC_dVWMd4P4DN_jF4@doY@jiifj
bK2ZV`AWS3l_n0W;lG<O5^DNm[=nBn5G>g4;BUmHOj?_DkjXlW<fkVml<f`6b]7a
dNUm@1;l/WMH6nhUhMPo>7Cj:dX/?jbW=k7=MSa4WDEFV;^X[Rh<YU2>^d1Lhhek
A0VN_TnW9boMIl/BjklI^5TM]KEhMLbDW^KBS9M;H2SE_i?Cfnmb:5fFKjDDc<<P
eM90d0CgKP`;MR7U]UCOdF@I_JE=HIOkk]6iD`7?RaKi]MJZ?G^3lRSAEdn`KhHO
R^n^Bfo=la3YWTa62@fG=9^[]bAGNCgA^_Bd<:Bm=DLTn@WOT?gSm3UM0<?]:c8n
>b@XV@Nk9]d7OWNiGHgU/^R/2:c4BBSjXW[OP@jJTkB^fWZBC;7?f/o0ANif7:6`
nnR66d6[Y1;A21aBfE5g7DZZknCJ<m/e??_Ee5PA=fIILP_c9bMIh<`Q]me6kBEQ
AVaE<l4FlGWX5L/JE;W3oMiVk83GmJT7jF9<>mVUUj61IBK7EgYf[@`;m^OFDDkg
BD`@iUhQY^ARSTWY51iF;8?ld:SAdn6]nK8iCB`WdQOikBSOlgdmo06gjnUN5cFh
^BDMRXN;iHc]S@Wgil_W5YH=e8V`S_Zh0R/Ih9OU[ZJ<SQ_6kIeK8?GhhFC6F:4n
SY^>f9WaTb2O_?<K]X8LJ5jeLliU2lOM=N412mc57MOjfR1^d2;]dbPL_3<K1?nn
e^UNU?XM>I?MH2J_Q/?dXa;=QlQG9]W2Co6NfjWF8eN70n=JHX07eZC6jZjOkcP^
SH/8_/XLEm:Xd^Ue1@ET40jFBnMZZ7McRUHlD1AnGF_1YKeH0B;C2hNiiZAL9?77
ikQ[<AIbK3:B:8B5/3nP[2W7^X8]:^hPM7BD5U5m3;58Q]>ZEIJGZ:R6jSXOkNNg
ZYlMdHWULAhFIO[PQ<P6Aaj89o7ENE0E^48m8nPBI70nQoP@;MbjMI;V;6G6L6NW
Y8OF//JaO4f5aW1aAkLTc/28GE?kG>;Z9kVJl8O3ldNNLFLUCbPAI:Do<^NaJZ==
jTDS:@ZOV[<F/R3A;VNT6ZcEHL>ALdNADn8I^VaK;m_7TB<?oM9:jlTX`>U6E8lO
cA48?3j5L]BL:HeAXHJaJI[8YCj<E/EbUmc^F]EZZ/YWO;SOPFg[UiT_Id1_?S1g
=mC/:?jUA4e5?Lk4U5S46YC=5d0j;Q?7nmZF;V7WoRG?=gLmCCOR9fOFoFb7YeXL
<ICLWmk3ZCCeZUjY8_Iof/^8kT>`SD]/V7DJ?Z:cegCJ>B_:WVll^g9M<o/H>WV[
iSVINKPE]TF1bike6CJ4JLEY;6FMVXZ84?4VIFFAMBDI6QPJUmed`L1D?42a9?::
SdaJL>kK9bcbDGK?nIbMVfLd5/ETfd^mmg/BJ;Sd_Ph;^OAn_nWZ7G8cWBNaSKWL
j/PZmfg]EVli<FgXci:^j00=/^DLNDG5eRf^cR?I?Y]dNWjdH5^lh`<OLeK?G5/>
Jgn>a8QRk:j@4/j5Ll//Gb;5J^jQLYfO<WS1WNOkEf6l@T5D6_NnM_5X7LbT/9CU
ebE;fe1bdHJ9M=fJW<AE_bdEL]m_/9F@>`F6PSlNL_FjjjAA[nVRe1O4hl5Vg/Tb
AT4QcZc12Se>02K^CWe9V]kZCNcn]S;8MnQAL7eSLn:PeK`_:20[6d7f]Z[ogH<f
e1Lfb]Ibgf/RWcBCN7T]I_ef3fPIkQ=XQ;CbJ<D]QV@SR_3F>EF6Q=i^lHKEMJa?
?F@:m`nheJJhVMM[ZianARHATCS<^mjj@X/`R98Fg;jHQCIQFJUemiRmXJbeCBeQ
VBDm?mEQ`LidMg;`V?5@2O]nIEdWTB:JkIdR?Rb^0ScZk;ReNdg_^Z/MWiEaJ9@I
2AHLobKFol=iEo<Za^g[ciT?jSe7C1F;32h_n5o:W6c^a4RJgYfo`0nOD;>M37[i
URBH1T:OclinF^DF6LhNH4C`oW@UbfGn/c0na@N^l;>aLk1c[lOgjoOchh]daLXi
WSN?4RHRWV6c6c]^1ICMoMhKZCj@M2?_jDMR@B654DZNDnUG==oMgT/a^e2A^<h;
f3mJgR/5bcKU?D;ikHe>C]AWiK/eCm;CHBLO=gN^9UIJmG^^SVa[?ZiUJ5@6D6A/
:caTiKd0KlYi]AU:?@h:2=lD6Y39dCnOOEZbBcI@T^eBE9@PMFjdI9a8gI:TfdQ/
J<Jk/f<YZ3YgSFeIYlGEg>e=X66Gk^=Wib`KGmRWKo>5M?dP<mOW^N6MCdA@/Io0
ncEafJnRTYD^f7Q1KR=I=ii^RkfD6GKKm[1/m[UC03hjYdiALb9>=b/1aj[=dmP7
I:oDdZoNMY8H_IQWNJYZFXV[4TM0P8YgWjBlhN6SPaAFc<GB2ag?@n8Wc1R>?@8h
VY:Lce:HlUb4iBh[J6fUm8<[868n3D4E56lW_[48V5BFR=`[;1A1W`SlV9j<:M/n
EK>Wm_WAY?GDDcE8oJc`NQA69hSOTFoXaW7f6Jk0Tnn/?aV3DgIY]E:U57AAAU<n
gSY`:3Q_=bbWRHh8?on^U1L]k=KAjjQdHcjg^AfWAnXkNBNYKPW<gZYjD@W?^k;M
`:YZ`:;6<hZ_KBn4;:MY9LoQI^/nboSE9f9`ejXN:cQjI:h9Wi/V?kEVi_=eGgeC
kBeI^EBN=ImTTSW_fmfgJNX]7N<eC=7lB`CKc;DXd@?FQ:YSHHYYocLnh9]eSO=2
lRM?nRHGjC;PHEIfCiOi;>:?JHDhi>mUnQ[B8JbBe=KX6RI=MG9/i?>O^=B9_?Ck
hN3N5YQi4E6?MSeZ<7/0hGlc]Qh4Y34Ra^^R9>aJCE]i=dffX7Db]id]JfGM/6jo
<XjVP^15UMKh9O>NVnLCh=o/:R7SSR1nX?MmPId3KRb9Aol^FnG4EK][=7I^eoXX
Id4<cmg?SfREKGm9<IMQoC;bdQDTd?2Y`j2GXc[Lb6:bfi6[@<kV0]^nI5icUcG0
@Il_Whodhe_>TaL9E0g@F:O4?Ana5Ih/DX90g2JV@1V36_l7FG?mM``?2Q[^<3_4
<2Nl_?J4P7LO<[5i@W5e_=h`neYZVD_:AO5e67CW:mkhJSIEARJXLLV=8m>kleFS
VS3LI7`k??MURKX9mNiNX=MWEA1KO95LlGh6P/[nVMf:/:5eb873i2d2bcS6;e_i
9<Ub^`0N@/5`BUnSTf1^adPV[nI4N@ZbGH_f8FRGAR6Ij91LQ=;XQjgZVL@:nV4n
;;^J6X7ZA>@4AjIZK?hf`SRRZegZ>GCU=TgMIWF7^Z=XGYI=>DXbj;69fF[6/Qco
P7fJG]be5F1?U?4d]^7P;[WW=36N_J52`F:CURCE3/?EG1kQm?Ql@K0^^fhRkk8e
H7O>VHWKg0][D8E4Ki4QWH]lnhP@hObl[Vk;Wf9GcB25SW_H]Q]MABm56SZ?fog<
RfS>;cbLV1Y[=[0XCR_YO^Z7F9ZB4O]_;]NWRJVfRa__9=aBNW8V7m>jWLTI2;K0
iAP//OPlEP3bYGZcW>C`kTKF3D>a^;al9fg2`;8@dfb3f[cj4g7n=ZM6UfX:?5;=
JdHnTJM?f/2jLRO>l@<;BVm8^hE<^JQ834Y?=lVVGVOk;UD<>nj6RN/UeTlj`mmC
f;I]F5NZDZ3KeYfaNnb@n9gdMJLn3AB@k4aeO^[NfcAZ]aSEdY]V]e5@KcZmRA?K
U<f/V:mU:YjMfI0;ddf0cRacF4glh?KLcU__:?9WNK4:CeZ?IbQ>PoggaAke;M9B
5dGYjkbh4J10/Y[SHe=VDj@5<BnMT@9ZfbKLb;PV9fQFCjao3oonQ:ahJGJlCoM1
`_]M?Qf6R`m;=KCZ_Eb^1eUd1NeFbO8@mjg1hMCaeh/`1TDn1^1Q<a_SELncmjil
MT4h2bZ_NT=_O5]UlC0OOme<7<Ke<bV]e]KZ8[E2_HRoXTVJWoCha7IoRO=YZ:;6
LN/m3XVXd<[1R=WI=H?Vb;jYSPW>B4O2R6VmfhL=D4F@/c<kL49U6VeQKSU6nKG2
cNfd>OO>W:Z2LZ@8cUZ7eXC1@27o4lI:lngcSiC0aHi<QTKhj3Vm4h>l1=/C]iUT
:2OW6n<O;lBM8?V:nkU]W_1W3:FJ33bG7E4mj`ocCEDP:Le<P^aZ3^<><aO5NNl^
WmhMHe/=;6lV[1]F[4B`h?3PJWYG>n2c5FRJcPNN40An3IR:[X/JlS0be1iImlDQ
9KCo/;^S5XVSl?[hODY7g@M>bN9_<B4eKJo2njC114bM3=m2l:H7m`IUG]Eo;]Q_
?KOMeB>>^iL1<?35ADfJgBfN^N7FUc`l83g9]RlWdB?B^81MZ^hHa2WN2nA2C/j5
Ga4>_oN/m<aLJg0=OW0cCCKXJk9X9n[5F3`K:LDcTA9nMbN^[9CPYR@CbNDAYj8P
XBaNaG<hOY1Y9mk/b>O2n9CU:oDOiL49JGTf48J?;TM0fZVi3k[a?;e?Km06UajP
HSE55<f?mVj^EgeCd];>F^UQMH?=nICJlBhoKHfV/gac4LcFL[naM:icAlYB`=9`
>iP^C^C`[Dn8`l;EYGRn@YGa2IJYKhOTeiUfJOc_LnUj=d>7T^Q61PiKe=UTkeDY
;YRR2PThkdG81ETT[HBGOT^Zn^8kd?]Hh:81Ul0XEMKjnBK1A9E8ENEJAT`SGXCW
K7P0l92iccY?=nD@[K3n0RS1X>FAX5CbGWXoNY=/eKIdeTch]Lnma9?E:b>>]ZF3
V5cZeZEf5bM`BXH^j;`;[QMj7eU_^WLIDE1HFLc:67=BM4YOcdRYKQ9DjmM]MdJ3
[?@:?P;5=kDVLfP8M4kc_lMk@m;3ZNgLV5giTehJboY^g6/HRo<g7XXj^]SRT=Tk
Moc0iJZcQGM_jU_BKG8i4:UVYUleToPWRCInbAhZVR?_fWoK5_=i/KmaRiM1VGHQ
>o3[Bm4mS[ch^UU1fB5/iKKb6jX@`/>dj4n5M@ZQ?CFec8f:U41c]/k=;FFmWh6G
ZKei9d^InNH?>W[AGeC=7adf7Jbj3Zh;LlSR_BQaO?ke?6Gnk_PZEUn/7G=j/QNA
lTKW2Hg6S^cCQ=kW7Zo8@QdDgZZWYMWAg;]N^`?DGcoA3B<PPWjfkg/^bCf0]GOY
Z2kS[eo]ZddX;A_W@`MhAZk^=_mZ3J3U^S]DcV9L]a4E3R7dFQ8nkFoI?QQYcWNM
9/n_ORmG=<L=RI]o_HeohIaUeLJ5^<ZIBC1INRVU;a?A2f</:o>6TC[Ei6:?CN:7
5l9;_[Jk8/GhnaiWihd:^^E<eG0QbU]D9_@=]c=7^R@1NcWEWY5NZFfE;Bl=FoBZ
ce[6DRPhRA`;8P;:QYYGG?U:Sb80]gSUDZ6ca`C/cToI6cK^?dGG[S9n2OHf71C7
dkD9CQgUZ:?ZkDV8lNMTDH;jb^RUbN4@i6CDR;NWfV^cCAMjZA_W@^Gc^m7?b]j6
1kV<30_LIM0K;IWEY;HkUl7f?<Cah]Tkf;fUJ031MEY9hfllcZ8Y3_>UiOIi<1/E
/:DQ=Y;TmVI<Lfn_fa:?llFV:=?1Vo:?4ZH_9oE=:^jnGY/DIKX3UgME^[nmX@>Q
C=bYN]Vbd3J@iQ]fnA6o8R2N9:R6jLaNI0_;k32PXn]Rb_>79bbE_DBL;IGTl/L>
jD?>NW6aIjo<?[6dWE;FFn_M?gUifoMNG`4C>0V7_f<2n4D^K?f[oJkLSFVoXMLi
CG6?MfiD?`_jlH1T2g_KgAdokRV5@GZiNUcOi2?WTR`nbZbY2cAD1K0@Z_OHdo:`
G3jF/>93j473WOgLIGn6]iKMeTW>@fJ5?6N/2n=ebVB1TRUeKA^j3ImD7OIb@i_a
K@Rb?^P:nGh8Y6JTPFN5AdmVZ/cifQXf3cGIhcmOoIJeXK2_j^7DIiYV>8nBgg2j
=N46bk=iNePYJ>1^goahehnJNmTYod1nVfI=VjQZ=LVmCFF/P^Bf02dSKD`JdLFQ
D0m`o0S6M]lhNY4VeRFW4KOMOB;nA8<mj9_RlO8>WJjh5>g51gOU9KdZT;Fah88I
Z`MMO`:lh]=90T[JjRhEClGf`gDVLFCY2b[8f96AlfO^hlSN8T9NaT[eRJeWhb:O
E8`o3kGcQ2dDHIW=IS:Q4TE3Y]oRIhoC]CPnCQB15QUYfQB7:kJEWE>ccLeAZgo]
:Rla>l[gI:KiE/fjMF`dMeh/Q=OU_Sj16]JFghJTgbD:26_9MSXZh9S0OXTG9khK
EgC<WKQLGYjjL`7hH3ZnTbU0m[0i:oQ8<IP?=g@k=HB9DV98E[k0OoafA30ibSa;
9Ma@?iL;EF6]C3Ce8?J5A?NP@oa]dfHY6BKEKNZFfOSQ6VVdLA_ocNleHbm]f6m_
1><II;`oBlm9U?<5fG@cNjJG8B<?bj=3MjBgg6M:KJij[[_1AM]7TR_[2H7QmU9=
Vd^C6bbSVEfUF_V2jV[aVi^>4TMQ<IhAFfaa7BH>=QT@[QT_]n6FI73P;BUFMkC?
][=fI`V[FlABU3K5Ma_nHaeL`Ci_<EAWon_hNVSoje9MoNIUJUa^GSeB[F<cBf>T
PF9MP>iba@T<JLofGH4Td>D7DiQ_hX_]K9i]QNkFJ3ab^NmYYSm<A>0MejchSACO
?SE_`bRjjU:ZV^SRi_h;eK=jF0YUKVAcM79UHFd:IFiTKf9Z2SDa830PKf9Z2S`l
2Rm@LVmTMF=ULR0XL6AVE6EH;C4^=30^<CDY2Rm3LVEQM6mb82QDIEPY2Rm3LVEQ
M6U_KTAQM6DP:4@j<S0a>C0a<C4a<c0b<SD]<3PW<30W:@X_CFmTA65dIB0XA3Xb
<34i<34a<C4c<38b=Bd`>2L`<2LY2RmDLV5`L6ET82m6HFacI@X_D5A5F2i6MFa/
HV5^KVEb82QDJ6Uc86Uc871TIUAUF2`PEVEbLfU_KR0c;S4d<CDi<SHe;C8^=Rda
;S@`;S4e82QDIEPPC6UfIB0b<34d:B1[L65dJ7=UHB1fIG9cJFm^83H^<Rh`:@Xn
?PYUKVA_HVX:=R0`86mRJPXl?0X_E7U`IB0_Cf9ZDgA]2Rm>83<h2Rm6JG9cM20b
>3T:;daUKVMdJ20a<cPg820P820P2Rm6JFadIG8P;dI/HGAUA6ESKfAU2Shn2W=d
LVEQK@Yhf/eGffkKAQ1meeO<Ff:d8_Mn:H80_ZU>HS^6[JI673l`4RfcEDA1T]?f
kg^6e8EBiEY9oE11F79WIfK?WYfIGAXB52T4TY:d=R@ejJ196W8ZT[CTWB;Y:4A?
4WnQ1DWFM]25PXZnYB0bT2^9Yk6Tf09V2WjLmjBPjUU^lHb1U8=Y=:@`94@T1I5`
6<N[2:;5[Q@PJ@TG@Y5VEiQ?JjQHm?4Z7H1J?>5O>jQHj>=E>CAh=AK?R:LG;B>P
RZDH;=42S84;SaDJ^?00`IHN<QP2>]^SIf4DYFVmN]E:^gn=LdX_/T7NBPo;dB`O
cJIT`MaU:kg<YnG3Y9M?HEl9c_9nTAfDOm:=P422=2]_Fk2N`0cNFNWejl[_aJC/
?oCb2KdLmnnjnGEK9THTd^iQVTVNcDZ<@;cX5^GX:9_Um?;X9bET518ol:=<Fh@G
@[b0gUWIOdZU>lW6hka?JBLKC[6PRnkaMM9i60hoIj<AHnWN5e?2_lKd8gg89e=<
CCZAA]ZXW6f[a2f`dRN6B:O5eabk9lfW?OYmW<g^YgU6GnNF;U69f5^/n_[mimob
gXchoLdGa8aJL<:4m:kb6MfT5dNMffNVBCm=TohOdE@7G@OQeTZ_7Sk?ZRh;IB_]
59?Yk?0nVb31F^UY]^ShE_Y[dHMGc5578m/OiM?NY1PcCdSABWb@CG<NhUb]1<NS
G]T_AP=>fTJ4kPQ2j2H::EL`c7HHMQ>6fhCQ_af64@dDYP4RK0LA=d1X/@52bnoP
`ZiAXIHX]=Z:@^]=56HCQOd>:V:CR[P2hKJ3l9/P`RJ8n>dPK7<o^3<7HKK7Y]V<
CK<IVfHIVcMTXdmDgMi^H5[i[>LhckiPi9N?kmk/Wom`N7Il;H6U<l`6P59[75Ce
V]X8ekJ:S/lcJ`R70P[go[AG5Fj?[Cc<aRMi<KROMgTR7Z]/D<aVfK3XkHl6`ic@
_I[UGcj@@Dhb0EcFGZIS?PF6nMg/X1SDW@Vk@fn_A]8YH6c</R:^Xej]Ll49@1Ag
McTLlA5dPg[`;g?Le]@IW9WFXmXPeTc2ij9<0UTU4XNT28VQh0<i8J1QPTWlKPBO
WE`MG7h4e;<gSa:<96P[7:eBV43NRPJo720=O[Vkh]M^d=_6bC`W^=ZG9L63M9RF
Je`^/fL3h0iL2Yd>d8Idb4D];NOljA2BF;Lk<]<m_KhhaLBGSa:3W9PCP`_AOb1V
6GL^KXfkAT2//NAF;3G1?TfB4E^M;d?=9A8GX<P11/8LFHBLA6X[B9`;g7X?^H^6
Acg;Jgf<8[mEhXT_TeHiUVT5jUe`J;gD2@NA`e^4U]GL^Q0a5T5UKF/PaJG>hQc6
9V[N^Jd?3CdmKff`cm8fOHK8b6]ilme9G0lXf<R]dl0J/1Y3DC=?0MPl@YcC=8AJ
KYTWhMPFjA@][mL7WO3]_5HA1Z;PN5VhgeHC<SG1LHIk8N7<NL?TnH09nAeGLX47
nfM^WFLU7/HefBVhJ;K[c9WJBKd7@/72HTdFo1^FX8YKjcT:;4>Ymm`08XZ;[gIG
/5`kbIj5i8Eh`MG9PXiHQLf>NGKBNGmd^UlU^7lTcn@lcJBGceAoPV`VfVUjW_KB
OYZ?YlF`74TDY38M[jGJlVJcSWN7NVBGK_5IUYiRem=cRY4WG1@[;U?YN9ime/G4
kTKMlM_mZfjEmHlaQa_IW3[nB7Z62^GG:U@ib]MH2T^FV]1fZ4NAGLd9L04A_a/1
gI>OgnochG1Y7`^MAHWF`S`;0F6=P=TOjnOFl/:e1^eY0ZaPEkOoo=ZRnV^;gM;J
aaKaeaI]]NS0@SeY/OXnW_87lP>FSJAhEoB1Yk[:K6PNIZ2S7;AZTmDglMlo35JS
2VE^I7=dLVEQK@YUKVA_HVX:=C8P<21_HVX:?3`:;eAiL6DP;eQBIFH:;dU^I6Eh
85/`83DcG@X_DfUjIB0e<`X_Eb1K<B0b835M2RmBKfmd83D`830PDPX_BFiVKb0e
<B0`858:;dU485/l=S0e<CA5=3=4@C=3AT<eA30bA4A5<T<c>DHi=3M4<TDn83`f
<3Da=4Dd<dA1<d=6@cE4<394A4Db@c<iASTd=d@bACiM2Rm<IFiWM6PP<C<d820P
820P80X_AVU/M6Eb82m6K65dIDAUHfmTI@Xn?PYcM79UHFd:N=XEc//=0@40Q>6I
GMKK/]i_5RDhB2BJ40N]T2Q37L994dh:D@7o7[k<c6dToNb3[;<2AD_@HoVicOH:
:NcPTng0hCg;43WT4J608TXXXh8ZJZPSAP==96RQS@jjj:6?0HHHHH`9YYQQSXFS
WI`NiGeO?WgUbeFn_K=?JclflR_A7agl3/D:IFiTLgAbIF5]2VE^I6mRJPX:Kf9Z
2S`l2Rm5KV=_I6U^Ib0_CF5SDVm]HFi5KV=_I6U^I`X_D79UHFeRK6DP:4ECHFi^
Kg15Dg=/HG=XI6mSMFeUKWASK65cLe/a<71dGDECK6EVM69bHF=[HG9dJF=/IDEC
LVUWJ7ARLV5SJ`Y5Dg=/HG=XMG=UL65SJf5WIE]eLfE^HFeULee5DfaUIWARLV5S
Jf=_K6mbAE=bJFMXM69bHF=[82EeLfET86I_LR1VKfid86=_K6mb2TECLfaQLfQe
LfE`HF=[HFMUAE=/IFIdHW9QHf]QKG=cNFeRAE=bJFMXM69bHF=[82E]HGAXL`Y5
Dg=/HG=XMG=UL65SJf5WIDECK6EVM69bHF=[HFecKF5dJ4ECLVUWJ7ARLV5SJb0U
KF5dJ7<:AE=cK65cJ7EcIG1QHf]QIfEKMGAV>5e5DfaUIWARLV5SJfU^L7EdIFiS
AE=bJFMXM69bHF=[82EeLfEVMF`PM6lPM7U`IB1TJG9UHgA/NB1TJF5SLVUdJF<P
HfQQLV5SM6EbL`X:2TECHFi^Kg1UKV@Y2Rm5Lf=QL6ETD79UHFeRK6DP:4ECHFi^
KfE`9CE3I6mSMFeUKWASK65cLbDe@S4`L7@U=D@U=d9QLWAYHfaU9CM49C119CE3
MG=UL65SJf5WIBDe@WEcIFiQKFEc9CE49CM2Hfm/Kg8U=d@U<S0U<SEeLfET9C8`
IVmb9C8`IVm^M2Db<6=_K6mb9C119CE3MG=UL65SJf5WIBDg@V5]Lg=iKF8U=d@U
<S0U<SE]HGAXLbD`@BDe@gEcIG1QHf]QIfDU=d9QKG=]HGAX9CM49C8`9C8eKF5d
J7<U<44U=D=eLfE`HF=[HFMU9CE2MGAV>2DeA2Dg@VU^L7EdIFiS9CM49C8`9C8e
MG=UIWE/9C8`M6lU<S1dNG1U9C8`I6UbIF=dK7TU<S1TJF5SLVUdJF<U<S1SJ65b
HF=dIG9c9C119C119C11AE=QKVi_IG1UKV@Y2RmCMF9ZIF=d82Q5Df5^KVmdAE=T
Kfa/HG95DfA_K6aQLR15Dg=/HG=X@VUWK20XAE=cK65cJ6IbHF=5DfaUIWARLV5S
Jfa_IbQ5Dg=/HG=XIW9QHdECK6EVM69bHF=[CTECLVUWJ7ARLV5SJdECK6EVM69b
HF=[86<PAE=cK65cJ6E`LfU/Kfi5Dg9YIfQdHW9QHf/Y84ECLVUWJ7ARLV5SJdEC
K6EVM69bHF=[K6mW:4ECLfaQLfQVLV5SAE=/IFIdHW9QHf/aAE=bJFMXM69bHF=[
AE=/IFIdHW9QHf/PHb1`AE=bJFMXM69bHF=[:B15Dg9YIfQdHW9QHf/PAE=cK65c
J49YIg8P:Ei5DfaUIWARLV5SJda_Iem5DfaUIWARLV5SJc95Dg9YIfQdHW9QHf/P
I4ECLVUWJ7ARLV5SJb15DfA_K6aQLTECI6m/K65b84ECHFi^KgAUKV@Y2Rm5Lf=Q
L6ETDgERJVESM20XAE=QKVi_IG<T92Db<2De@d9YIf`U<S0X9CE3IW9QHbDg@Va_
IbPU=D=VLV5S9CM2CRDgA2Dg@RDb<6<U<S0U=D=UL7=YK6m^9CM4:BDb<2DgA2Dg
@Va_IbPU=D=VLV5S9CM2<BDgA2Dg@RDb<6<U<S1`9CM4:BDb<2DgA2Db<2De@d9Y
Ig8U<S0Y9CE59CM2C6mWGbDg@S8U=d@U<S1T9CM49C8`92@U<S15Df5^KVmULfE^
I2T:;eAiL6DP:4E5M7U`IC95AGAiL6EUKV@Y2Rm3Kfa_LR0XADESKf``;S0`<30`
<20`;S0`<30`<20`;S0`<30`<20a;S0`<30`<4E5Hfm/IFiT:@X_@T]3Kfa_LR0X
ADERJf<a;S0`<30`<20a;S0`<30`<20a;S0`<30`<20a;S0`<30`<4E5HV]SIFiT
:@X_E6UdK6DP:4E5M6UdK6E5AGAYM6aUIFiT:@X_CF5WKVUVJF=QM6U_KR0XADE]
HFLa>2h`<30`<315AFeQIfE^I2T:;d9QLfE/JFiU82Q5AF9QLc0^<30`<30`ADER
HG=UKV@Y2Shn2VE^I6mRJPX:Kf9Z2S`l2Rm5KV=_I6U^Ib0_CF5SDVm]HFi5KV=_
I6U^I`X_D79UHFeRK6DP:4ECHFi^Kg15Dg=/HG=XI6mSMFeUKWASK65cLe/a<71d
GDECK6EVM69bHF=[HG9dJF=/IDECLVUWJ7ARLV5SJ`Y5Dg=/HG=XMG=UL65SJf5W
IE]eLfE^HFeULee5DfaUIWARLV5SJf=_K6mbAE=bJFMXM69bHF=[82EeLfET86I_
LR1VKfid86=_K6mb2TECLfaQLfQeLfE`HF=[HFMUAE=/IFIdHW9QHf]QKG=cNFeR
AE=bJFMXM69bHF=[82E]HGAXL`Y5Dg=/HG=XMG=UL65SJf5WIDECK6EVM69bHF=[
HFecKF5dJ4ECLVUWJ7ARLV5SJb0UKF5dJ7<:AE=cK65cJ7EcIG1QHf]QIfEKMGAV
>5e5DfaUIWARLV5SJfU^L7EdIFiSAE=bJFMXM69bHF=[82EeLfEVMF`PM6lPM7U`
IB1TJG9UHgA/NB1TJF5SLVUdJF<PHfQQLV5SM6EbL`X:2TECHFi^Kg1UKV@Y2Rm5
Lf=QL6ETD79UHFeRK6DP:4ECHFi^KfE`9CE3I6mSMFeUKWASK65cLbDe@S4`L7@U
=D@U=d9QLWAYHfaU9CM49C119CE3MG=UL65SJf5WIBDe@WEcIFiQKFEc9CE49CM2
Hfm/Kg8U=d@U<S0U<SEeLfET9C8`IVmb9C8`IVm^M2Db<6=_K6mb9C119CE3MG=U
L65SJf5WIBDg@V5]Lg=iKF8U=d@U<S0U<SE]HGAXLbD`@BDe@gEcIG1QHf]QIfDU
=d9QKG=]HGAX9CM49C8`9C8eKF5dJ7<U<44U=D=eLfE`HF=[HFMU9CE2MGAV>2De
A2Dg@VU^L7EdIFiS9CM49C8`9C8eMG=UIWE/9C8`M6lU<S1dNG1U9C8`I6UbIF=d
K7TU<S1TJF5SLVUdJF<U<S1SJ65bHF=dIG9c9C119C119C11AE=QKVi_IG1UKV@Y
2RmCMF9ZIF=d82Q5Df5^KVmdAE=TKfa/HG95DfA_K6aQLR15Dg=/HG=X@VUWK20X
AE=cK65cJ6IbHF=5DfaUIWARLV5SJfa_IbQ5Dg=/HG=XIW9QHdECK6EVM69bHF=[
CTECLVUWJ7ARLV5SJdECK6EVM69bHF=[86<PAE=cK65cJ6E`LfU/Kfi5Dg9YIfQd
HW9QHf/Y84ECLVUWJ7ARLV5SJdECK6EVM69bHF=[K6mW:4ECLfaQLfQVLV5SAE=/
IFIdHW9QHf/aAE=bJFMXM69bHF=[AE=/IFIdHW9QHf/PHb1`AE=bJFMXM69bHF=[
:B15Dg9YIfQdHW9QHf/PAE=cK65cJ49YIg8P:Ei5DfaUIWARLV5SJda_Iem5DfaU
IWARLV5SJc95Dg9YIfQdHW9QHf/PI4ECLVUWJ7ARLV5SJb15DfA_K6aQLTECI6m/
K65b84ECHFi^KgAUKV@Y2Rm5Lf=QL6ETDgERJVESM20XAE=QKVi_IG<T92Db<2De
@d9YIf`U<S0X9CE3IW9QHbDg@Va_IbPU=D=VLV5S9CM2CRDgA2Dg@RDb<6<U<S0U
=D=UL7=YK6m^9CM4:BDb<2DgA2Dg@Va_IbPU=D=VLV5S9CM2<BDgA2Dg@RDb<6<U
<S1`9CM4:BDb<2DgA2Db<2De@d9YIg8U<S0Y9CE59CM2C6mWGbDg@S8U=d@U<S1T
9CM49C8`92@U<S15Df5^KVmULfE^I2T:;eAiL6DP:4E5M7U`IC95AGAiL6EUKV@Y
2Rm3Kfa_LR0XADESKf``;S0`<30`<20`;S0`<30`<20`;S0`<30`<20a;S0`<30`
<4E5Hfm/IFiT:@X_@T]3Kfa_LR0XADERJf<a;S0`<30`<20a;S0`<30`<20a;S0`
<30`<20a;S0`<30`<4E5HV]SIFiT:@X_E6UdK6DP:4E5M6UdK6E5AGAYM6aUIFiT
:@X_CF5WKVUVJF=QM6U_KR0XADE]HFLa>2h`<30`<315AFeQIfE^I2T:;d9QLfE/
JFiU82Q5AF9QLc0^<30`<30`ADERHG=UKV@Y2Shn2VE^I6mRJPX:Kf9Z2S`l2Rm5
KV=_I6U^Ib0_CF5SDVm]HFi5KV=_I6U^I`X_D79UHFeRK6DP:4ECHFi^Kg15Dg=/
HG=XI6mSMFeUKWASK65cLe/a<71dGDECK6EVM69bHF=[HG9dJF=/IDECLVUWJ7AR
LV5SJ`Y5Dg=/HG=XMG=UL65SJf5WIE]eLfE^HFeULee5DfaUIWARLV5SJf=_K6mb
AE=bJFMXM69bHF=[82EeLfET86I_LR1VKfid86=_K6mb2TECLfaQLfQeLfE`HF=[
HFMUAE=/IFIdHW9QHf]QKG=cNFeRAE=bJFMXM69bHF=[82E]HGAXL`Y5Dg=/HG=X
MG=UL65SJf5WIDECK6EVM69bHF=[HFecKF5dJ4ECLVUWJ7ARLV5SJb0UKF5dJ7<:
AE=cK65cJ7EcIG1QHf]QIfEKMGAV>5e5DfaUIWARLV5SJfU^L7EdIFiSAE=bJFMX
M69bHF=[82EeLfEVMF`PM6lPM7U`IB1TJG9UHgA/NB1TJF5SLVUdJF<PHfQQLV5S
M6EbL`X:2TECHFi^Kg1UKV@Y2Rm5Lf=QL6ETD79UHFeRK6DP:4ECHFi^KfE`9CE3
I6mSMFeUKWASK65cLbDe@S4`L7@U=D@U=d9QLWAYHfaU9CM49C119CE3MG=UL65S
Jf5WIBDe@WEcIFiQKFEc9CE49CM2Hfm/Kg8U=d@U<S0U<SEeLfET9C8`IVmb9C8`
IVm^M2Db<6=_K6mb9C119CE3MG=UL65SJf5WIBDg@V5]Lg=iKF8U=d@U<S0U<SE]
HGAXLbD`@BDe@gEcIG1QHf]QIfDU=d9QKG=]HGAX9CM49C8`9C8eKF5dJ7<U<44U
=D=eLfE`HF=[HFMU9CE2MGAV>2DeA2Dg@VU^L7EdIFiS9CM49C8`9C8eMG=UIWE/
9C8`M6lU<S1dNG1U9C8`I6UbIF=dK7TU<S1TJF5SLVUdJF<U<S1SJ65bHF=dIG9c
9C119C119C11AE=QKVi_IG1UKV@Y2RmCMF9ZIF=d82Q5Df5^KVmdAE=TKfa/HG95
DfA_K6aQLR15Dg=/HG=X@VUWK20XAE=cK65cJ6IbHF=5DfaUIWARLV5SJfa_IbQ5
Dg=/HG=XIW9QHdECK6EVM69bHF=[CTECLVUWJ7ARLV5SJdECK6EVM69bHF=[86<P
AE=cK65cJ6E`LfU/Kfi5Dg9YIfQdHW9QHf/Y84ECLVUWJ7ARLV5SJdECK6EVM69b
HF=[K6mW:4ECLfaQLfQVLV5SAE=/IFIdHW9QHf/aAE=bJFMXM69bHF=[AE=/IFId
HW9QHf/PHb1`AE=bJFMXM69bHF=[:B15Dg9YIfQdHW9QHf/PAE=cK65cJ49YIg8P
:Ei5DfaUIWARLV5SJda_Iem5DfaUIWARLV5SJc95Dg9YIfQdHW9QHf/PI4ECLVUW
J7ARLV5SJb15DfA_K6aQLTECI6m/K65b84ECHFi^KgAUKV@Y2Rm5Lf=QL6ETDgER
JVESM20XAE=QKVi_IG<T92Db<2De@d9YIf`U<S0X9CE3IW9QHbDg@Va_IbPU=D=V
LV5S9CM2CRDgA2Dg@RDb<6<U<S0U=D=UL7=YK6m^9CM4:BDb<2DgA2Dg@Va_IbPU
=D=VLV5S9CM2<BDgA2Dg@RDb<6<U<S1`9CM4:BDb<2DgA2Db<2De@d9YIg8U<S0Y
9CE59CM2C6mWGbDg@S8U=d@U<S1T9CM49C8`92@U<S15Df5^KVmULfE^I2T:;eAi
L6DP:4E5M7U`IC95AGAiL6EUKV@Y2Rm3Kfa_LR0XADESKf``;S0`<30`<20`;S0`
<30`<20`;S0`<30`<20a;S0`<30`<4E5Hfm/IFiT:@X_@T]3Kfa_LR0XADERJf<a
;S0`<30`<20a;S0`<30`<20a;S0`<30`<20a;S0`<30`<4E5HV]SIFiT:@X_E6Ud
K6DP:4E5M6UdK6E5AGAYM6aUIFiT:@X_CF5WKVUVJF=QM6U_KR0XADE]HFLa>2h`
<30`<315AFeQIfE^I2T:;d9QLfE/JFiU82Q5AF9QLc0^<30`<30`ADERHG=UKV@Y
2Shn2VE^I6mRJPYcM65bM7QbIFH:=3Lf<c@:9BE5CdH\>"], "DisplayFormulaNumbered",
 CellChangeTimes->{3.7562297797896214`*^9},
 ImageSize->{165.00620404411757`, 71.92578125},
 ImageMargins->{{248.0390625, 0.}, {0., 17.71484375}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Upshot", "Subsection",
 CellChangeTimes->{{3.756229447300158*^9, 3.7562294489192743`*^9}}],

Cell[TextData[{
 "The upshot of our discussion is the following. Consider a circuit that is \
limited by qubits that have a failure rate determined by the value for ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]]],
 ". If a QECC can be implemented in a fault tolerant manner so that  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"p", " ", "c"}], " ", "<", "1"}], TraditionalForm]]],
 "/2, then we can always construct a concatenated circuit that satisfies \
inequality (4). Importantly, the extra resources required to implement that \
circuit only grow as a polynomial of log",
 Cell[BoxData[
  FormBox["N", TraditionalForm]]]
}], "Text",
 CellFrame->{{3, 0}, {0, 0.5}},
 CellChangeTimes->{{3.756229459630144*^9, 3.7562299122272797`*^9}, {
  3.7562302749320507`*^9, 3.7562302791963367`*^9}, {3.756283951101101*^9, 
  3.756283951798999*^9}, {3.7562840045165367`*^9, 3.7562840690022297`*^9}}],

Cell[TextData[{
 "\t",
 StyleBox["1",
  FontVariations->{"CompatibilityType"->"Superscript"}],
 "\tPhillip Kaye, Raymond Laflamme, Michele ",
 StyleBox["Mosca",
  IgnoreSpellCheck->True],
 ", ",
 StyleBox["An Introduction to Quantum Computing,",
  FontSlant->"Italic"],
 " pg. 235, Oxford (2007) "
}], "Reference",
 Editable->False,
 TaggingRules->{ReferenceNoteData -> ""},
 CellTags->"00006FEF"]
}, Closed]]
}, Open  ]]
},
WindowSize->{808, 863},
WindowMargins->{{Automatic, 400}, {25, Automatic}},
ShowGroupOpener->True,
SpellingDictionaries->{"CorrectWords"->{"kth", "Eq", "Laflamme"}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "00006FEF"->{
  Cell[299997, 5717, 397, 14, 26, "Reference",
   CellTags->"00006FEF"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"00006FEF", 300822, 5748}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 98, 1, 92, "Title"],
Cell[681, 25, 1041, 25, 99, "Text"],
Cell[1725, 52, 578, 10, 95, "Text"],
Cell[2306, 64, 1946, 46, 119, "Text"],
Cell[4255, 112, 847, 16, 97, "Text"],
Cell[CellGroupData[{
Cell[5127, 132, 177, 2, 44, "Subsection"],
Cell[5307, 136, 648, 15, 77, "Text"],
Cell[5958, 153, 1560, 38, 75, "Input"],
Cell[7521, 193, 449, 8, 57, "Text"],
Cell[CellGroupData[{
Cell[7995, 205, 522, 14, 54, "Input"],
Cell[8520, 221, 1150, 17, 96, "Output"],
Cell[9673, 240, 74, 1, 32, "Output"]
}, Closed]],
Cell[9762, 244, 313, 8, 59, "Text"],
Cell[10078, 254, 399, 10, 59, "Text"],
Cell[CellGroupData[{
Cell[10502, 268, 606, 15, 54, "Input"],
Cell[11111, 285, 1150, 17, 96, "Output"],
Cell[12264, 304, 74, 1, 32, "Output"]
}, Closed]],
Cell[12353, 308, 452, 10, 59, "Text"],
Cell[12808, 320, 958, 25, 75, "Input"],
Cell[13769, 347, 1119, 28, 54, "Input"],
Cell[CellGroupData[{
Cell[14913, 379, 730, 16, 54, "Input"],
Cell[15646, 397, 2131, 50, 217, "Output"]
}, Closed]],
Cell[17792, 450, 1325, 34, 101, "Text"],
Cell[19120, 486, 541, 15, 53, "Text"],
Cell[19664, 503, 568, 17, 52, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[20269, 525, 143, 1, 36, "Subsection"],
Cell[20415, 528, 560, 15, 59, "Text"],
Cell[20978, 545, 1306, 35, 117, "Input"],
Cell[22287, 582, 752, 23, 75, "Input"],
Cell[23042, 607, 985, 27, 75, "Input"],
Cell[CellGroupData[{
Cell[24052, 638, 437, 12, 54, "Input"],
Cell[24492, 652, 2689, 58, 217, "Output"]
}, Closed]],
Cell[27196, 713, 798, 19, 41, "Text"],
Cell[27997, 734, 762, 16, 59, "Text"],
Cell[28762, 752, 444, 13, 53, "Text"],
Cell[29209, 767, 1703, 53, 76, "Text"],
Cell[30915, 822, 862, 20, 61, "Text"],
Cell[31780, 844, 528, 16, 36, "DisplayFormulaNumbered"],
Cell[32311, 862, 825, 21, 98, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[33173, 888, 100, 1, 36, "Subsection"],
Cell[33276, 891, 930, 15, 114, "Text"],
Cell[34209, 908, 108785, 1791, 93, "DisplayFormulaNumbered",
 Evaluatable->False],
Cell[142997, 2701, 32764, 517, 222, "Text"],
Cell[175764, 3220, 22622, 507, 368, "DisplayFormulaNumbered"],
Cell[198389, 3729, 3643, 104, 268, "Text"],
Cell[202035, 3835, 912, 17, 89, "Text"],
Cell[202950, 3854, 84, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[203059, 3859, 124, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[203208, 3864, 162, 2, 28, "Subsubsubsection"],
Cell[203373, 3868, 1208, 34, 96, "Input"],
Cell[204584, 3904, 307, 9, 31, "Text"],
Cell[CellGroupData[{
Cell[204916, 3917, 869, 26, 117, "Input"],
Cell[205788, 3945, 287, 6, 24, "Print"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[206124, 3957, 163, 2, 28, "Subsubsubsection"],
Cell[206290, 3961, 135, 1, 30, "Text"],
Cell[206428, 3964, 1981, 57, 96, "Input"],
Cell[208412, 4023, 752, 17, 54, "Input"],
Cell[209167, 4042, 142, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[209334, 4047, 1472, 46, 138, "Input"],
Cell[210809, 4095, 460, 10, 24, "Print"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[211318, 4111, 115, 1, 28, "Subsubsubsection"],
Cell[211436, 4114, 137, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[211598, 4119, 1161, 34, 75, "Input"],
Cell[212762, 4155, 4513, 140, 180, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[217312, 4300, 3703, 85, 201, "Input"],
Cell[221018, 4387, 458, 10, 24, "Print"]
}, Closed]],
Cell[221491, 4400, 1354, 40, 100, "Text"],
Cell[222848, 4442, 786, 25, 79, "Text"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[223695, 4474, 103, 1, 36, "Subsection"],
Cell[223801, 4477, 1080, 34, 117, "Text"],
Cell[224884, 4513, 803, 25, 40, "DisplayFormulaNumbered"],
Cell[225690, 4540, 923, 23, 99, "Text"],
Cell[226616, 4565, 781, 20, 73, "Text"],
Cell[227400, 4587, 71556, 1101, 98, "DisplayFormulaNumbered"]
}, Closed]],
Cell[CellGroupData[{
Cell[298993, 5693, 96, 1, 36, "Subsection"],
Cell[299092, 5696, 902, 19, 100, "Text"],
Cell[299997, 5717, 397, 14, 26, "Reference",
 CellTags->"00006FEF"]
}, Closed]]
}, Open  ]]
}
]
*)

